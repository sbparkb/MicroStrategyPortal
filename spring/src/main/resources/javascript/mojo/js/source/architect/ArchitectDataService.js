(function(){mstrmojo.requiresCls("mstrmojo.Obj","mstrmojo.hash");var $H=mstrmojo.hash,ENUM_ERROR_LOCKING_ERROR="-2147213500";function submitServerRequest(callback,params){var schemaID=this.schemaInstanceID,showWait=params.showWait;if(!callback.failure){callback.failure=function failure(res){switch(res.getResponseHeader("X-MSTR-TaskErrorCode")){case ENUM_ERROR_LOCKING_ERROR:mstrmojo.alert("The operation was unable to be completed because another user is mofifying the same object<br /><br />"+mstrApp.getRootController().cleanError(res.getResponseHeader("X-MSTR-TaskFailureMsg")));break;default:mstrmojo.alert(mstrApp.getRootController().cleanError(res.getResponseHeader("X-MSTR-TaskFailureMsg")));}};}if(!params.skipSchemaIDCheck&&!schemaID){throw new Error("Schema ID doesn't exist. Cannot process task.");}if(schemaID){params=$H.copy(params,{schemaid:schemaID});}delete params.skipSchemaIDCheck;delete params.showWait;mstrApp.serverRequest(callback,params,showWait);}mstrmojo.architect.ArchitectDataService=mstrmojo.declare(mstrmojo.Obj,null,{submitRequest:function submitRequest(callback,params){submitServerRequest.call(this,callback,params);},pingServer:function pingServer(){submitServerRequest.call(this,{},{taskId:"keepSessionAlive",skipSchemaIDCheck:true});},getProjects:function getProjects(callback,params){submitServerRequest.call(this,callback,$H.copy(params,{taskId:"arch.getProjects"}));},getSystemFunctions:function getSystemFunctions(callback,params){submitServerRequest.call(this,callback,$H.copy(params,{taskId:"getSystemFunctions"}));},search:function search(callback,params){submitServerRequest.call(this,callback,$H.copy(params,{taskId:"arch.search",showWait:true}));},nameSearchTable:function nameSearchTable(callback,params){submitServerRequest.call(this,callback,$H.copy(params,{taskId:"arch.nameSearchTable",showWait:false}));},getHierarchyInfo:function getHierarchyInfo(callback,params){submitServerRequest.call(this,callback,$H.copy(params,{taskId:"arch.getHierarchyInfo",showWait:true}));},getLinkInfo:function getLinkInfo(callback,params){submitServerRequest.call(this,callback,$H.copy(params,{taskId:"arch.getLinkInfo",showWait:true}));},parse:function parse(callback,params){submitServerRequest.call(this,callback,$H.copy(params,{taskId:"arch.Parse",showWait:true}));},addProjectDBRole:function addProjectDBRole(callback,params){submitServerRequest.call(this,callback,$H.copy(params,{taskId:"arch.addProjectDBRole",showWait:true}));},createProject:function createProject(callback,params){submitServerRequest.call(this,callback,$H.copy(params,{taskId:"arch.createProject",showWait:true}));},deleteProject:function deleteProject(callback,params){submitServerRequest.call(this,callback,$H.copy(params,{taskId:"arch.deleteProject",showWait:true}));},renameProject:function renameProject(callback,params){submitServerRequest.call(this,callback,$H.copy(params,{taskId:"arch.renameProject",showWait:true}));},schemaAction:function schemaAction(callback,params){submitServerRequest.call(this,callback,$H.copy(params,{taskId:"arch.schemaInstanceAction"}));},catalogAction:function catalogAction(callback,params){submitServerRequest.call(this,callback,$H.copy(params,{taskId:"arch.catalogAction",showWait:true}));},schemaManipulation:function schemaManipulation(callback,params){submitServerRequest.call(this,callback,$H.copy(params,{taskId:"arch.schemaManipulation",showWait:true}));},refreshEngineSchema:function refreshEngineSchema(callback,params){submitServerRequest.call(this,callback,$H.copy(params,{taskId:"arch.refreshEngineSchema",showWait:true}));},loadLogicalTables:function loadLogicalTables(callback,params){submitServerRequest.call(this,callback,$H.copy(params,{taskId:"arch.loadLogicalTables",showWait:true}));},getObjects:function getObjects(callback,params){submitServerRequest.call(this,callback,$H.copy(params,{taskId:"arch.getObjectInBulk",showWait:true}));},renameObject:function renameObject(callback,params){submitServerRequest.call(this,callback,$H.copy(params,{taskId:"arch.renameObject",showWait:true}));}});}());