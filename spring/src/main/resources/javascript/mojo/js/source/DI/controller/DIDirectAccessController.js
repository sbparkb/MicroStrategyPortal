(function(){mstrmojo.requiresCls("mstrmojo.Obj","mstrmojo.DI.DIConstants");mstrmojo.requiresDescs(12379,12380);var constants=mstrmojo.DI.DIConstants;mstrmojo.DI.controller.DIDirectAccessController=mstrmojo.declare(mstrmojo.Obj,null,{scriptClass:"mstrmojo.DI.controller.DIDirectAccessController",shouldAskUser:true,confirmDDA:true,canSupportDDA:function canSupportDDA(ddaObj){var model=mstrApp.getRootController().model,canSupport=true,subtype=-1,dbrid=-1,said=-1,srcInfo,SOURCE_SUBTYPE=constants.sourceSubtype,curSubtype,tableNum=model.getAllTableID().length;if(model.connectLiveSupport===constants.connectLiveSupport.connectLiveSupportInMemoryOnly&&tableNum>0){canSupport=false;}else{mstrmojo.hash.forEach(model.importSources,function(table){curSubtype=table.subtype;if(curSubtype===SOURCE_SUBTYPE.googleBigQueryFFSQL||curSubtype===SOURCE_SUBTYPE.googleBigQuerySingleTable){curSubtype=SOURCE_SUBTYPE.googleBigQuery;}if(model.isSupportedDDASource(curSubtype)){if(subtype===-1){subtype=curSubtype;}else{if(subtype!==curSubtype){canSupport=false;return false;}}switch(subtype){case SOURCE_SUBTYPE.hanaSingleTable:case SOURCE_SUBTYPE.querybuilder:case SOURCE_SUBTYPE.searchOnSource:case SOURCE_SUBTYPE.mdx:if(dbrid===-1){dbrid=table.dbrid;}else{if(dbrid!==table.dbrid){canSupport=false;return false;}}break;case SOURCE_SUBTYPE.googleBigQuery:srcInfo=table.sourceInfo;if(said===-1){said=srcInfo.said;}else{if(said!==srcInfo.said){canSupport=false;return false;}}break;default:break;}}else{canSupport=false;return false;}});if(ddaObj){ddaObj.dbrid=(dbrid===-1?undefined:dbrid);}if(model.connectLiveSupport!==constants.connectLiveSupport.connectLiveSupportInMemoryOnly||tableNum===0){canSupport=true;}}return canSupport;},shouldSupportDDA:function shouldSupportDDA(){var model=mstrApp.getRootController().model;var shouldSupport=false;if(model.connectLiveSupport!==constants.connectLiveSupport.connectLiveSupportUnknown){if(model.connectLiveSupport===constants.connectLiveSupport.connectLiveSupportDDAOnly){shouldSupport=true;}}else{mstrmojo.hash.forEach(model.importSources,function(table){if(model.isDDAOnlySource(table.subtype)||(table.xdaType===constants.xdaType.qbSingleTable&&table.databaseType===4000)){shouldSupport=true;}});}return shouldSupport;},onToggleDDA:function onToggleDDA(value){var controller=mstrApp.getRootController();if(value===true){controller.model.set("isDirectDataAccess",true);if(!this.canSupportDDA()){controller.displayError(mstrmojo.desc(12379,"We cannot convert the cube to a DDA cube because you are importing some tables that cannot support it. Remove them to enable this feature."),false);controller.model.set("isDirectDataAccess",false);}}else{controller.model.set("isDirectDataAccess",false);if(this.shouldSupportDDA()){controller.displayError(mstrmojo.desc(12380,"The cube has to be a direct data access cube due to some of the sources selected. You will have to delete them if you want to change this."),false);controller.model.set("isDirectDataAccess",true);}}},askUserAboutDDA:function askUserAboutDDA(alreadyAsked){if(alreadyAsked){this.shouldAskUser=false;}return this.shouldAskUser;},checkIfDDA:function checkIfDDA(cubes){var controller=mstrApp.getRootController();var model=controller.model,i;if(model.isDirectDataAccess){return true;}if(model.operationMode===constants.operationMode.edit){if(cubes){for(i=0;i<cubes.cn;i++){if(cubes.cube[i].cube_id===model.cubeID&&cubes.cube[i].sz===undefined&&this.canSupportDDA()){return true;}}}}return false;},getDDACheckboxID:function getDDACheckboxID(){var ddaCheckbox=mstrApp.getRootController().rootView.footer.ddaCheckbox;return ddaCheckbox?ddaCheckbox.id:"";},setDirectDataAccess:function setDirectDataAccess(value){mstrApp.getRootController().model.set("isDirectDataAccess",value);}});}());