(function(){mstrmojo.requiresCls("mstrmojo.DI.LevelDataGrid","mstrmojo.DI.DIMappingItem","mstrmojo.string");var $ARR=mstrmojo.array,$DOM=mstrmojo.dom,$WIDGET=mstrmojo.Widget;var _clnWidth=200;var _notIMWidth=22;function dataGridDataFunction(item,idx,w){var txt=item[this.dataField];var css="mapping-column",encodeText=mstrmojo.DI.DIHelpers.encodeData(txt);if(txt===null){encodeText="";}if(this.tag.selected){css+={"12":" Attribute","4":" Metric"}[this.tag.tp];}css+=(idx%2===1)?" odd":" even";if(0===this.tag.tp||false===this.tag.selected){encodeText="";}return'<div class="'+css+'" title="'+encodeText+'">'+encodeText+"</div>";}function createDataGridColumn(mappingColumn,columnIndex,columnWidth){var cssClass="";if(mappingColumn.isLinked){cssClass+="linked ";}if(mappingColumn.isAttributeForm){cssClass+="attrForm";}var linked=mappingColumn.isLinked;var geoLinked=false;if(linked){var linkedItems=mstrApp.getRootController().model.findMappingItem(mappingColumn);var i;for(i=0;i<linkedItems.length;i++){if(linkedItems[i].georole){geoLinked=true;break;}}}return{tag:mappingColumn,headerWidget:{scriptClass:"mstrmojo.DI.DIMappingItem",data:mappingColumn,allowEdit:this.hasContextMenu,name:mappingColumn.isAttributeForm?mappingColumn.alias+"@"+mappingColumn.fmn:mappingColumn.alias,type:mappingColumn.tp,georole:mappingColumn.georole||geoLinked,timerole:mappingColumn.timerole,_allowDnD:false,cssClass:cssClass},dataField:columnIndex.toString(),colWidth:columnWidth,colCss:columnWidth===_notIMWidth?"NotImported":"mapping-column",applyStyle2Cell:columnWidth===_notIMWidth,dataFunction:dataGridDataFunction};}function canDrag(ctxt){if(!this.model||!this.model.mappings){return false;}var s=ctxt.src,d=s&&s.data,rsIdx=d&&d.resizingIdx;var preIdx=rsIdx-1;if(rsIdx&&rsIdx>0){var curItem=this.model.mappings[rsIdx];var preItem=this.model.mappings[preIdx];if(0===curItem||false===curItem.selected||(preIdx>=0&&(0===this.model.mappings[preIdx].tp||false===preItem.selected))){return false;}}return true;}mstrmojo.DI.DIMappingPreview=mstrmojo.declare(mstrmojo.DI.LevelDataGrid,null,{scriptClass:"mstrmojo.DI.DIMappingPreview",cssClass:"lockHeader mstrmojo-di-mappingpreview",lockHeader:false,hasContextMenu:true,model:null,markupMethods:{onheightChange:function(){var height=this.height,h=parseInt(height,10);if(isNaN(h)||h<0){return ;}if(height){this.domNode.style.height=height;}this.widgetResized();},onwidthChange:function(){var width=this.width,w=parseInt(width,10);if(isNaN(w)||w<0){return ;}if(width){this.domNode.style.width=width;}this.widgetResized();},onvisibleChange:function(){this.domNode.style.display=this.visible?"block":"none";},oncontentWidthChange:function(){var cw=this.contentWidth||this.width,dn=this.domNode,ic=this.itemsContainerNode;if(cw&&dn&&ic){if(cw==="auto"&&this.parent.containerNode.clientWidth>40){cw=this.parent.containerNode.clientWidth-40+"px";}dn.style.width=cw;ic.style.width=cw;}}},postBuildRendering:function(){var me=this;if(this._super){this._super();}window.setTimeout(function(){var dn=me.domNode,sb=me.scrollboxNode,hc=me.headerContainerNode;if(dn.offsetHeight>=hc.offsetHeight){sb.style.height=dn.offsetHeight-hc.offsetHeight+"px";}me.widgetResized();$DOM.attachEvent(sb,"scroll",function(){if(hc.scrollLeft!==sb.scrollLeft){hc.scrollLeft=sb.scrollLeft;}});$DOM.attachEvent(hc,"scroll",function(){if(sb.scrollLeft!==hc.scrollLeft){sb.scrollLeft=hc.scrollLeft;}});},0);},setDimensions:function(h,w){var height=parseInt(h,10);var width=parseInt(w,10);var ic=this.itemsContainerNode;var scrollNode=this.scrollNode;if(isNaN(height)||isNaN(width)){return ;}this.set("height",Math.max((height-4),0)+"px");this.set("width",Math.max((width-4),0)+"px");if(ic){ic.style.width=Math.max((width-4),0)+"px";}if(scrollNode){scrollNode.style.height=Math.max((height-25),0)+"px";scrollNode.style.width=Math.max((width-4),0)+"px";}if(this._super){return this._super(h,w);}},isDragValid:function isDragValid(ctxt){if(!canDrag.call(this,ctxt)){return false;}if(this._super){return this._super(ctxt);}},ondragstart:function ondragstart(ctxt){if(!canDrag.call(this,ctxt)){return false;}if(this._super){return this._super(ctxt);}},populatePreview:function(){if(!this.model||!this.model.mappings){return ;}var mappings=this.model.mappings;var dataset=this.model.dataset;var columnIndex=0,scrollLeft=0,subMapCols,subColumn,column,subColumns,items;var mappingsFilterFunc=function(map){return map.selected;};scrollLeft=this.scrollNode&&this.scrollNode.scrollLeft;this.unrender();this.refresh();var p=this.parent&&this.parent.domNode;if(!p){return ;}var preview=this.parent&&this.parent.previewNode;var gridWidth=preview?preview.clientWidth:parseInt(this.contentWidth);var notIMCount=this.countNotIMColumn();var oriWidth=(mappings.length-notIMCount)*_clnWidth+notIMCount*_notIMWidth;var pWidth=gridWidth>oriWidth?gridWidth:oriWidth;pWidth-=2;var imWidth=Math.floor((pWidth-notIMCount*_notIMWidth)/(mappings.length-notIMCount));this.columns=[];items=mstrmojo.hash.clone(mappings);items=mstrmojo.array.filter(items,mappingsFilterFunc);$ARR.forEach(items,function(map){column=createDataGridColumn.call(this,map,map.dataIdx,0===map.tp||false===map.selected?_notIMWidth:imWidth);subMapCols=map.subColumns;if(subMapCols&&subMapCols.length>1){column.dataField=null;column.dataFunction=null;subColumns=column.subColumns=[];$ARR.forEach(subMapCols,function(subMap){subColumn=createDataGridColumn.call(this,subMap,subMap.dataIdx,0===map.tp||false===map.selected?_notIMWidth:imWidth/subMapCols.length);subColumns.push(subColumn);columnIndex++;});}else{columnIndex++;}this.columns.push(column);},this);this.items=dataset;this.render();if(this.scrollNode&&scrollLeft!==undefined){this.scrollNode.scrollLeft=scrollLeft;}if(this.headerContainerNode&&scrollLeft!==undefined){this.headerContainerNode.scrollLeft=scrollLeft;}},countNotIMColumn:function(){var notIMCount=0;var mappings=this.model.mappings;$ARR.forEach(mappings,function(map){if(0===map.tp||false===map.selected){notIMCount++;}});return notIMCount;},onvisibleChange:function(e){if(e.value){this.populatePreview();}},getMappingColumnOffset:function(map){var grid=this,headers=grid._headerWidgets_,w,offset;if(grid.scrollNode){offset=grid.scrollNode.scrollLeft;}w=$ARR.filterOne(headers,function(header){return header.data.id===map.id||header.data.did===map.did;});if(w&&w.domNode){offset=$DOM.delta(w.domNode,headers[0].domNode).x;}return offset;}});}());