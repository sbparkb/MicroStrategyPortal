(function(){mstrmojo.requiresCls("mstrmojo.array","mstrmojo.Box","mstrmojo.css","mstrmojo.DataGrid","mstrmojo._CanAutoClose","mstrmojo.ui.menus._HasMenuPopup","mstrmojo.ui.menus._IsMenuPopup","mstrmojo.architect.menu._HasTableMenu","mstrmojo.architect.obj.Column","mstrmojo.warehouse.ui.BasePanel");var $A=mstrmojo.array,$ENUM_DATA_CHANGE_EVENTS=mstrmojo.architect.EnumDataChangeEvents,$PX="px",STR_VIEW_DATA=mstrmojo.desc(12256,"View data and configure columns");function createEmptyGrid(){var $this=this,dataGridWidget=$this.gridbox.dataview,table=["","","","",""];dataGridWidget.columns=[];dataGridWidget.columns.push({dataWidget:{scriptClass:"mstrmojo.Label",cssClass:"mstrmojo-sqlInput-gridCell",postCreate:function postCreate(){this.set("text","");}},headerWidget:{scriptClass:"mstrmojo.Box",children:[{scriptClass:"mstrmojo.Label",cssClass:"mstrmojo-sqlInput-gridHeaderText"}]}});dataGridWidget.items=table;dataGridWidget.render();dataGridWidget.domNode.style.width="200px";$this.gridbox.domNode.style.minWidth="100px";}function populateGrid(cols,gridData){var sqlDataPanel=this,dataGridWidget=sqlDataPanel.gridbox.dataview;dataGridWidget.columns=[];$A.forEach(cols,function(col,colIndex){dataGridWidget.columns.push({dataWidget:{scriptClass:"mstrmojo.Label",cssClass:"mstrmojo-sqlInput-gridCell",colIndex:colIndex,postCreate:function postCreate(){this.set("text",this.data[this.colIndex]);}},headerWidget:{scriptClass:"mstrmojo.Box",children:[{scriptClass:"mstrmojo.Label",cssClass:"mstrmojo-sqlInput-gridHeaderText",text:col.cln},{scriptClass:"mstrmojo.Button",cssClass:"mstrmojo-sqlInput-gridHeaderDelete",col:col,colIndex:colIndex,onclick:function onclick(){var rootController=mstrApp.getRootController(),view=rootController.getTable(sqlDataPanel.viewId),tableCols=view.columns;tableCols.splice(this.colIndex,1);view.updateViewDefinition();populateGrid.call(sqlDataPanel,view.columns,this.parent.dataGrid.items);}},{scriptClass:"mstrmojo.Button",cssClass:"mstrmojo-sqlInput-gridHeaderMenu",col:col,colIndex:colIndex,onclick:function onclick(){var btn=this,popupConfig=sqlDataPanel.buildColumnDefEditor(this.col,sqlDataPanel.viewId);var corners=popupConfig.ENUM_CORNERS;popupConfig.setAlignment(corners.TOP_RIGHT,corners.TOP_LEFT);popupConfig.hostId=sqlDataPanel.id;popupConfig.hostElement=this.domNode;popupConfig.hostProxyCssClass="item-mn-proxy-pnlicns";popupConfig.column=btn.col;popupConfig.fnOk=function fnOk(){var info=this.contents.getEditorData(),view=mstrApp.rootController.getTable(sqlDataPanel.viewId),col=view.columns[btn.colIndex],cmid=btn.col.cmid;col.cln=info.colName;col.dt.tp=info.type;col.dt.ps=info.precision;col.dt.sc=info.scale;if(cmid!==""){mstrApp.getRootController().updateColumn({cln:col.cln,cmid:cmid,dt:col.dt,tableId:view.id},col,{success:function success(){populateGrid.call(sqlDataPanel,view.columns,btn.parent.dataGrid.items);}});}};var editor=popupConfig.newInstance();editor.cssClass="mstrmojo-sqlInput-ColumnEditor";sqlDataPanel.openPopup(editor);}}]}});});sqlDataPanel.columns=cols;if(gridData){dataGridWidget.items=gridData;}dataGridWidget.render();dataGridWidget.domNode.style.width=(cols.length*200)+"px";}function onViewsChanged(evt){var sqlDataPanel=this,rootController=mstrApp.getRootController();sqlDataPanel.viewId=evt.value;if(!sqlDataPanel.viewId){return ;}rootController.populateTableContents(sqlDataPanel.viewId,{success:function success(){var view=rootController.getTable(sqlDataPanel.viewId);view.getSQLData(false,{success:function success(res){rootController.raiseExecuteSQLEvent(res.cols);},failure:function failure(){rootController.raiseExecuteSQLEvent([]);}});}});}function onSQLExecuted(evt){var sqlDataPanel=this,cols=evt.data,data,dataGridWidget=sqlDataPanel.gridbox.dataview,gridData=[],rootController=mstrApp.rootController,view=rootController.getTable(sqlDataPanel.viewId),tableCols=view.columns,originalColumnCount;if(cols.length===0){createEmptyGrid.call(this);return ;}dataGridWidget.columns=[];$A.forEach(tableCols,function(col,colIndex){data=((cols[colIndex]&&cols[colIndex].data)||[]);$A.forEach(data,function(data,rowIndex){if(!gridData[rowIndex]){gridData[rowIndex]=[];}gridData[rowIndex][colIndex]=data.v;});});originalColumnCount=tableCols.length;if(cols.length>originalColumnCount){$A.forEach(cols,function(col,colIndex){if(colIndex<originalColumnCount){return true;}view.addColumnDef(col.def);$A.forEach(col.data,function(data,rowIndex){if(!gridData[rowIndex]){gridData[rowIndex]=[];}gridData[rowIndex][colIndex]=data.v;});});}populateGrid.call(sqlDataPanel,tableCols,gridData);}function getScrollbarWidth(){var outer=document.createElement("div");outer.style.visibility="hidden";outer.style.width="100px";document.body.appendChild(outer);var widthNoScroll=outer.offsetWidth;outer.style.overflow="scroll";var inner=document.createElement("div");inner.style.width="100%";outer.appendChild(inner);var widthWithScroll=inner.offsetWidth;outer.parentNode.removeChild(outer);return widthNoScroll-widthWithScroll;}mstrmojo.architect.ui.panels.LogicalViewSQLDataPanel=mstrmojo.declare(mstrmojo.warehouse.ui.BasePanel,[mstrmojo.ui.menus._HasMenuPopup,mstrmojo.architect.menu._HasTableMenu,mstrmojo._CanAutoClose],{scriptClass:"mstrmojo.architect.ui.panels.LogicalViewSQLDataPanel",cssClass:"sqlDataPanel",title:STR_VIEW_DATA,init:function init(props){this._super(props);var sqlDataPanel=this,rootController=mstrApp.getRootController(),evtConfig={},panelConfig=evtConfig[sqlDataPanel.id]={};sqlDataPanel.attributes={};panelConfig[$ENUM_DATA_CHANGE_EVENTS.LOGICALVIEW_SQLEXECUTED]=onSQLExecuted;panelConfig[$ENUM_DATA_CHANGE_EVENTS.LOGICALVIEWS_CHANGED]=onViewsChanged;rootController.attachDataChangeListeners(evtConfig);},postBuildRendering:function postBuildRendering(){if(this._super){this._super();}createEmptyGrid.call(this);},viewId:"",columns:[],onheightChange:function onheightChange(evt){var h=parseInt(evt.value,10),headerHeight=this.headerHeight=this.headerHeight||(this.hasRendered?this.headerNode.clientHeight:36),max=(Math.max(h-headerHeight,0))+$PX;this.height=h+$PX;this.gridbox.set("height",max);},onwidthChange:function onwidthChange(evt){var w=parseInt(evt.value,10),max=(Math.max(w,0)-1)+$PX;this.width=w+$PX;this.gridWidth=(w-getScrollbarWidth()-3)+$PX;this.gridbox.set("width",max);},children:[{scriptClass:"mstrmojo.Box",alias:"gridbox",cssClass:"mstrmojo-ar-sqlInput-sqlDataGridBox",children:[{scriptClass:"mstrmojo.DataGrid",alias:"dataview",cssClass:"mstrmojo-Architect-TablePreviewGrid",itemDisplayField:20,minColWidth:80,columns:[]}]}]});}());