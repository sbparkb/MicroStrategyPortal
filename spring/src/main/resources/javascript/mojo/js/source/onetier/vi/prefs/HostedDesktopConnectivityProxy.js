(function(){mstrmojo.requiresCls("mstrmojo.onetier.vi.prefs.DesktopConnectivityProxyBase","mstrmojo.array","mstrmojo.hash","mstrmojo.func");var $ARR=mstrmojo.array,$HASH=mstrmojo.hash,$FUNC=mstrmojo.func,SESSION_STORAGE_ITEM_NAME="mstrTestOneTierPreferences",sessionCache={};function buildServerTaskURL(connectionObj){return connectionObj&&[connectionObj.conntp,"//",connectionObj.wsn,connectionObj.wsport?(":"+connectionObj.wsport):"","/",connectionObj.wspath,connectionObj.wstp==="j2ee"?"/servlet/taskProc":"/asp/taskProc.aspx"].join("");}function getConnCache(connectionId){var connCache=sessionCache[connectionId];if(!connCache){connCache=sessionCache[connectionId]={};}return connCache;}mstrmojo.onetier.vi.prefs.HostedDesktopConnectivityProxy=mstrmojo.declare(mstrmojo.onetier.vi.prefs.DesktopConnectivityProxyBase,null,{scriptClass:"mstrmojo.onetier.vi.prefs.HostedDesktopConnectivityProxy",showPreferencesEditor:function showPreferencesEditor(){mstrApp.executeCommand("showPrefsEditor");},savePreferences:function savePreferences(preferences){this.getSavedPreferences({success:function success(res){sessionStorage.setItem(SESSION_STORAGE_ITEM_NAME,JSON.stringify($HASH.mergeHashes(res,preferences)));}});},getSavedPreferences:function getSavedPreferences(callback){var value={};try{value=JSON.parse(sessionStorage.getItem(SESSION_STORAGE_ITEM_NAME));}catch(e){console.error("Error retrieving the saved preferences (Error: ##).".replace("##",e));}callback.success(value);},deleteServerConnections:function deleteServerConnections(deletedConnections){this.getSavedPreferences({success:function success(res){var serverPreferences=res.server,serverConnections=serverPreferences.conn;deletedConnections.forEach(function(connectionId){serverConnections.splice(serverConnections.map(function(connectionData){return connectionData.id;}).indexOf(connectionId),1);});sessionStorage.setItem(SESSION_STORAGE_ITEM_NAME,JSON.stringify(res));}.bind(this)});},testServerConnection:function testServerConnection(url,callback){window.setTimeout(function(){callback.success({code:200});},2000);},loginToWebserver:function loginToWebserver(wsn,username,password,callback){window.setTimeout(function(){callback.success({code:401,wsn:"localhost"});},500);},loginToProxy:function loginToProxy(proxyUrl,username,password,saveToPrefs,callback){window.setTimeout(function(){callback.success({code:407,proxyUrl:"localhost"});},500);},authenticationCancelled:function authenticationCancelled(){console.log("authenticationCancelled");},resumeDashboardExecution:function resumeDashboardExecution(){console.log("resumeDashboardExecution");},checkForDesktopUpdates:function getForDesktopUpdates(){window.alert("Checking for updates: Native code.");},showProxyEditor:function showProxyEditor(){window.alert("Show proxy editor: Native code.");},getSessionState:function getSessionState(connectionId,iServer,port,project,callback){var connCache=getConnCache(connectionId),iServerCache=connCache[iServer]&&connCache[iServer][port],projectSession=iServerCache&&iServerCache[project],isSessionAlive=function isSessionAlive(sessionState,callback){var params={taskId:"isSessionAlive",notRestartSessionManager:true,sessionState:sessionState,connectionId:connectionId};this.sendWebServerRequest(params,callback);}.bind(this);if(projectSession){isSessionAlive(projectSession.sessionState,{success:function(res){if(res.data===-1){callback.failure({statusCode:401});}else{callback.success(projectSession);}}});}else{callback.failure({statusCode:401});}},getLoginFirstSessionState:function getLoginFirstSessionState(connectionId,callback){var connCache=getConnCache(connectionId),loginFirstSession=connCache.loginFirst;if(loginFirstSession){callback.success(loginFirstSession);}else{callback.failure({statusCode:401});}},getProjects:function getProjects(params,callback){this.sendWebServerRequest($HASH.copy(params,{taskId:"getProjectsInfo",dataFlag:2}),callback);},login:function login(params,callback){this.sendWebServerRequest($HASH.copy(params,{taskId:"login"}),$FUNC.wrapMethods({success:function(res){var connCache=getConnCache(params.connectionId),iServerCache=connCache[params.server],portCache;if(!iServerCache){iServerCache=connCache[params.server]={};}portCache=iServerCache[params.port];if(!portCache){portCache=iServerCache[params.port]={};}portCache[params.project]=res;}.bind(this)},callback));},loginFirst:function login(params,callback){this.sendWebServerRequest($HASH.copy(params,{taskId:"loginFirst"}),{success:function(res){var connCache=getConnCache(params.connectionId);if(!connCache){connCache={};connCache.loginFirst={};}connCache.loginFirst={sessionState:res.sessionState,Uid:params.Uid,Pwd:params.Pwd};callback.success(connCache.loginFirst);}.bind(this),failure:function(res){if(callback&&callback.failure){callback.failure(res);}}});},saveToServer:function saveToServer(params,callback){callback.success({did:"250BFCDB4CA5AF712A36C68E92451AB7",n:"New Dashboard",fdid:"0C77FD3642136F4728D87283759C3CE8",servletPath:"http://was-gespinola:8080/Connectivity/servlet/"});},loadCube:function loadCube(params,callback){if(!params.addDatasetToDocument){callback.success({did:"D28CB3AB48BCAB8E7D9A2BA4A7C9C2A0"});}else{callback.success();}},getCubeInfo:function getCubeInfo(params,callback){window.setTimeout(function(){callback.success({hsf:false,acld:false,dda:true,cs:111,mmf:2});},100);},openFromServer:function openFromServer(params,callback){callback.success({cubeDLInfo:{maxcs:10,cubes:[{n:"cube1",id:"1234134...1234",dda:1},{n:"cube3",id:"1234134...1234",acld:1},{n:"cube2",id:"234...1234",cs:1500}]}});},getPublicCloudSession:function getPublicCloudSession(params,callback){window.setTimeout(function(){callback.success({status:true,message:"",code:0,session:"sessionstate",public_url:"http://was-gespinola:8080/MstrMain/servlet/mstrWeb"});},100);},saveToPublicCloud:function saveToPublicCloud(sessionState,callback){callback.success({url:"http://google.com"});},logout:function logout(params,callback){window.setTimeout(function(){var connCache=getConnCache(params.connectionId),iServerCache=connCache[params.server],portCache;if(iServerCache){iServerCache=connCache[params.server];portCache=iServerCache[params.port];if(portCache){portCache=iServerCache[params.port];delete connCache.loginFirst;delete portCache[params.project];}}callback.success();}.bind(this),0);},sendWebServerRequest:function sendWebServerRequest(params,callback){this.getSavedPreferences({success:function success(prefs){var url="http://localhost:8080/main/servlet/taskProc";if(prefs){var connections=prefs.server.conn;url=buildServerTaskURL(connections[$ARR.find(connections,"id",params.connectionId)]);delete params.connectionId;}mstrmojo.xhr.request("POST","taskProc",callback,params,undefined,url);}});},getObjectInfo:function getObjectInfo(params,callback){this.sendWebServerRequest($HASH.copy(params,{taskId:"getObjectInfo"}),callback);},getUserServices:function getUserServices(params,callback){this.sendWebServerRequest($HASH.copy(params,{taskId:"getUserServices"}),callback);},saveObjectACL:function saveObjectACL(params,callback){this.sendWebServerRequest($HASH.copy(params,{taskId:"saveObjectACL"}),callback);},getUserEntityInfo:function getUserEntityInfo(params,callback){this.sendWebServerRequest($HASH.copy(params,{taskId:"getUserEntityInfo"}),callback);}});}());