(function(){mstrmojo.requiresCls("mstrmojo.desc","mstrmojo.Label","mstrmojo.dom","mstrmojo.hash","mstrmojo.MetricSelectorUtility","mstrmojo.num","mstrmojo.vi.ui.rw.selectors.ISliderHelper");var $MU=mstrmojo.MetricSelectorUtility,$FN=$MU.FN,$OP=$MU.OP,$Q=$MU.Q,$NM=mstrmojo.num,$MAX=Math.max,$MIN=Math.min;mstrmojo.vi.ui.rw.selectors.MetricValueSliderHelper=mstrmojo.declare(mstrmojo.vi.ui.rw.selectors.ISliderHelper,null,{scriptClass:"mstrmojo.vi.ui.rw.selectors.MetricValueSliderHelper",init:function(props){this._super(props);this.slider.set("multiSelect",true);},updateOpCs:function updateOp(){var sl=this.slider,c1=sl.cs1Vl,c2=sl.cs2Vl,firstValue=$MIN(c1,c2),secondValue=$MAX(c1,c2),low=sl.low,high=sl.high,include=sl.include,qualifyOn=parseInt(sl.qua,10),isPercent=(qualifyOn===$Q._PT||qualifyOn===$Q._PB),cs=[];if((firstValue>low&&secondValue<high)||firstValue<low||secondValue>high){sl.opId=include?$OP._BETWEEN:$OP._NOT_BETWEEN;}if(firstValue===low&&secondValue<high){sl.opId=include?$OP._LESS_EQUAL:$OP._GREATER;}if(firstValue>low&&secondValue===high){sl.opId=include?$OP._GREATER_EQUAL:$OP._LESS;}if(firstValue===secondValue){sl.opId=include?$OP._EQUALS:$OP._NOT_EQUALS;}if(firstValue===low&&secondValue===high){sl.unSet=true;sl.cs=[];return ;}switch(sl.opId){case $OP._BETWEEN:case $OP._NOT_BETWEEN:cs.push({dtp:5,v:$NM.toLocaleString(firstValue)+(isPercent?"%":"")});case $OP._EQUALS:case $OP._NOT_EQUALS:cs.push({dtp:5,v:$NM.toLocaleString(secondValue)+(isPercent?"%":"")});break;default:if(firstValue>low){cs.push({dtp:5,v:$NM.toLocaleString(firstValue)+(isPercent?"%":"")});}if(secondValue<high){cs.push({dtp:5,v:$NM.toLocaleString(secondValue)+(isPercent?"%":"")});}}sl.cs=cs;},updateSummary:function updateSummary(){var sl=this.slider,opId=sl.opId,txt="",l=sl.cs1Vl>sl.cs2Vl?sl.cs2Vl:sl.cs1Vl,r=sl.cs1Vl<sl.cs2Vl?sl.cs2Vl:sl.cs1Vl,fl=this.formatNumber(l),fr=this.formatNumber(r);if(sl.unSet||l<=sl.low&&r>=sl.high&&sl.include){txt=mstrmojo.desc(2058,"All");}else{switch(opId){case $OP._EQUALS:txt="= "+fl;break;case $OP._NOT_EQUALS:txt=String.fromCharCode(8800)+" "+fl;break;case $OP._GREATER:txt="> "+fr;break;case $OP._GREATER_EQUAL:txt=String.fromCharCode(8805)+" "+fl;break;case $OP._LESS:txt="< "+fl;break;case $OP._LESS_EQUAL:txt=String.fromCharCode(8804)+" "+fr;break;case $OP._BETWEEN:txt=fl+" - "+fr;break;case $OP._NOT_BETWEEN:txt="Not "+fl+" - "+fr;break;default:txt=fl+" - "+fr;break;}}sl.summary.set("text",txt);}});}());