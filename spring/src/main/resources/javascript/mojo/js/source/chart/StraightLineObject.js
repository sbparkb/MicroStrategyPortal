(function(){mstrmojo.requiresCls("mstrmojo.chart.enums.EnumLineStyle");mstrmojo.requiresCls("mstrmojo.chart.model.enums.EnumShapeType");mstrmojo.requiresClsP("mstrmojo.chart","GraphObject","FormatLine","Point2D");var $C=mstrmojo.chart,$CHART_ENUMS=$C.enums,$LSL=$CHART_ENUMS.EnumLineStyle,$MODEL_ENUMS=$C.model.enums,$SHP=$MODEL_ENUMS.EnumShapeType;mstrmojo.chart.StraightLineObject=mstrmojo.declare(mstrmojo.chart.GraphObject,null,{scriptClass:"mstrmojo.chart.StraightLineObject",mDeviceStartPoint:null,mDeviceEndPoint:null,midPoint:null,identity:null,init:function init(props){if(props.hasLine===undefined){props.hasLine=true;}this._super(props);this.mDeviceStartPoint=new $C.Point2D({Point2D:props.StartPoint});this.mDeviceEndPoint=new $C.Point2D({Point2D:props.EndPoint});if(props.MidPoint!==undefined&&props.MidPoint!==null){this.midPoint=props.MidPoint;}if(props.Identity!==undefined&&props.Identity!==null){this.identity=props.Identity;}},Draw:function Draw(){var chartCtx=this.mChartContextPtr,formatLine=this.mFormatLinePtr,startPt=this.mDeviceStartPoint,endPt=this.mDeviceEndPoint,lpLinePattern;this.SetLineWidth();if(formatLine.mLineStyle===$LSL.LS_SOLID){chartCtx.DrawStraightLine(startPt,endPt);}else{chartCtx.NewPath();lpLinePattern=formatLine.getLinePattern(formatLine.mLineStyle);chartCtx.DrawDashedLine(startPt,endPt,lpLinePattern);}this.ApplyLineFormat();if(this.Shape===$SHP._TICKER){chartCtx.FinishDrawTickerShape(this.mDeviceStartPoint,this.mDeviceEndPoint,this.mTripleId);}else{chartCtx.FinishDrawStraightLine(this.mDeviceStartPoint,this.mDeviceEndPoint,this.mTripleId,this.identity,this.midPoint);}},getShapeSize:function getShapeSize(){if(this.Shape===$SHP._TICKER){var gmCtx=this.mChartContextPtr.GetGraphMatrixContext();return Math.round(0.5*gmCtx.mConstants.FixedTickerSize);}return 0;},GetBoundingRect:function GetBoundingRect(){if(this.Shape===$SHP._TICKER){this.mBBox=this.mBBox||new $C.Rect2D();if(this.mBBox.width!==0){return this.mBBox;}var p1=this.mDeviceStartPoint,p2=this.mDeviceEndPoint,bBox=this.mBBox,halfLineSize=Math.max(1,0.5*this.mFormatLinePtr.mLineThickness);if(p1.x===p2.x){bBox.x=Math.max(p1.x-halfLineSize,0);bBox.y=Math.min(p1.y,p2.y);bBox.width=2*halfLineSize;bBox.height=Math.abs(p1.y-p2.y);}else{bBox.y=Math.max(p1.y-halfLineSize,0);bBox.x=Math.min(p1.x,p2.x);bBox.height=2*halfLineSize;bBox.width=Math.abs(p1.x-p2.x);}return bBox;}else{return this._super();}},GetClockwisePolygon:function GetClockwisePolygon(){var orPolygon=[new $C.Point2D(),new $C.Point2D(),new $C.Point2D(),new $C.Point2D()];var startPt=this.mDeviceStartPoint,endPt=this.mDeviceEndPoint;if(!startPt.isEqual(endPt)){var offset=Math.max(this.mFormatLinePtr.mLineThickness/2,$C.gOutlineBlack.mLineThickness/2);offset=Math.max(offset,2);var helperStart=new $C.Point2D({x:2*startPt.x-endPt.x,y:2*startPt.y-endPt.y});var lHelperEnd=new $C.Point2D({x:2*endPt.x-startPt.x,y:2*endPt.y-startPt.y});this.GetAngularBisectorIntersectionPoint(endPt,startPt,helperStart,offset,orPolygon[0]);this.GetAngularBisectorIntersectionPoint(lHelperEnd,endPt,startPt,offset,orPolygon[1]);this.GetAngularBisectorIntersectionPoint(startPt,endPt,lHelperEnd,offset,orPolygon[2]);this.GetAngularBisectorIntersectionPoint(helperStart,startPt,endPt,offset,orPolygon[3]);}else{orPolygon[0].Reset(startPt.x-1,startPt.y-1);orPolygon[1].Reset(startPt.x+1,startPt.y-1);orPolygon[2].Reset(startPt.x+1,startPt.y+1);orPolygon[3].Reset(startPt.x-1,startPt.y+1);}return orPolygon;}});}());