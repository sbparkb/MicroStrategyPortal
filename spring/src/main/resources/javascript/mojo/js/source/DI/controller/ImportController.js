(function(){mstrmojo.requiresCls("mstrmojo.Obj","mstrmojo.DI.DIHelpers","mstrmojo.DI.DIConstants","mstrmojo.DI.DIModel");mstrmojo.requiresDescs(641,12783,12897,12899,12900,12901,12902,12903,12904,12510,12537,13324,12392,14708);var constants=mstrmojo.DI.DIConstants,$ARR=mstrmojo.array,$FUNC=mstrmojo.func,xdaTypeEnum=constants.xdaType,actions=constants.actions,helpers=mstrmojo.DI.DIHelpers;function setDataImportAndGetSheets(setDataImportParams,tableID,callback){var controller=mstrApp.getRootController(),dataService=controller.dataService,params=null,sheets=[];var onGetSheetsInfo={success:function(res){var shts=res.datap.shts,idx=0;sheets=[];$ARR.forEach(shts,function(sheet){if(sheet!=="*"){sheets.push({idx:idx,n:sheet});}idx++;});if(sheets.length>0){if(callback.success){callback.success({sheets:sheets});}}else{if(callback.failure){callback.failure({message:mstrmojo.desc(12510,"The import process cannot proceed with an empty file.")});}}if(callback.complete){callback.complete();}},failure:function(res){if(callback.failure){callback.failure(res);}if(callback.complete){callback.complete();}}};var onSetDataImportInfo={success:function(){params={tableID:tableID,previewflag:constants.requestFlag.sheets};dataService.getImportedData(onGetSheetsInfo,params);},failure:function(res){if(callback.failure){callback.failure(res);}if(callback.complete){callback.complete();}}};params=mstrmojo.hash.copy(setDataImportParams,{tbid:tableID});dataService.setDataImportInfo(onSetDataImportInfo,params);}function removeSourceTables(tablesArray,callback,srcWidgetID){var controller=this;var cnt=tablesArray&&tablesArray.length;var i=0;var params;if(!cnt){if(callback&&callback.success){callback.success();}if(callback&&callback.complete){callback.complete();}return ;}var onOneRemoved={success:function(res){controller.dataService.set("messageID",res.msgid);controller.model.resetImportSource(tablesArray[i]);if(srcWidgetID){$ARR.removeItem(controller.tablesSrc[srcWidgetID],tablesArray[i]);}i++;if(i<cnt){params={did:tablesArray[i]};controller.removeEMMASourceTable(onOneRemoved,params);}else{if(callback&&callback.success){callback.success();}if(callback&&callback.complete){callback.complete();}}},failure:function(res){if(callback&&callback.failure){callback.failure(res);}}};if(i<cnt){params={did:tablesArray[i]};controller.removeEMMASourceTable(onOneRemoved,params);}}function importFileIdx(fileUploader,status,callback,tableID){var controller=this;var cubeID=this.model.cubeID;var fileName=fileUploader.getFileName(status.idx);var params={msgID:controller.dataService.messageID,tableID:tableID,__index:status.idx,fileName:fileName};var cb={failure:function(res){var detailedErr=controller.getImportController().handleImportError(res,fileName);mstrApp.getRootController().displayError(mstrmojo.desc(12771,"Error in importing the file. Please check the file being imported"),false,detailedErr);},complete:function(){mstrApp.hideProgress();}};if(cubeID){params.reportid=cubeID;}params.behaviorFlags=constants.importBehaviorFlag.reserved;if(this.model.operationMode===constants.operationMode.refresh||this.model.operationMode===constants.operationMode.edit){if(mstrApp.isCloudPro){params.behaviorFlags=constants.importBehaviorFlag.newColumnsSilent|constants.importBehaviorFlag.dataTypeSilent;}}controller.dataService.importFile(fileUploader,$FUNC.wrapMethods(cb,callback,{}),params);}function refreshDataSourceTableIdx(srcWidgetID,fileUploader,status,callback){var controller=this;var model=controller.model;var tableID=mstrmojo.all[srcWidgetID].tableID;var params={xt:constants.xdaType.dataImport};var source=model.getImportSource(tableID);status.files[status.idx].tableID=tableID;if(source.type===constants.sourceType.file&&(source.subtype===constants.sourceSubtype.localFile||source.subtype===constants.sourceSubtype.clipboard)){var fileName=fileUploader.getFileName(status.idx);status.files[status.idx].fileName=fileName;importFileIdx.call(controller,fileUploader,status,{success:function(){if(callback.success){callback.success();}},failure:function(res){if(callback.failure){callback.failure(res);}}},tableID);}else{if((source.type===constants.sourceType.file&&(source.subtype===constants.sourceSubtype.url||source.subtype===constants.sourceSubtype.samplefile||source.subtype===constants.sourceSubtype.publicData))||source.type===constants.sourceType.hadoop){status.files[status.idx].fileName=fileUploader.getFileUrl(status.idx);params.isUrl=true;params.url=fileUploader.getFileUrl(status.idx);if(fileUploader.tableidx){source.set("tableIdx",fileUploader.getUrlTableIndices(status.idx));source.set("currentIndex",fileUploader.getUrlTableIndices(status.idx));params.shtIx=source.tableIdx;}controller.setDataImportInfoURL(callback,params,tableID);}}}function createSourceTableIdx(srcWidgetID,fileUploader,status,callback,importSourceType){var controller=this;var model=controller.model;var cb={success:function(res){var msgid=res.msgid;var tableID=res.tbid;if(msgid){controller.dataService.set("messageID",msgid);}var source=model.createImportSource(constants.sourceType.file,importSourceType,tableID);var fileName=fileUploader.getFileName(status.idx);status.files[status.idx].tableID=tableID;status.files[status.idx].toDel=true;source.set("fileName",helpers.getAbsoluteFileName(fileName));helpers.setTablesrc(controller,srcWidgetID,tableID);importFileIdx.call(controller,fileUploader,status,callback,tableID);},failure:function(res){if(callback&&callback.failure){callback.failure(res);}}};var params={xt:constants.xdaType.dataImport,dict:helpers.getBackendSourceType(importSourceType)};if(fileUploader.getFileTableID(status.idx)){if(callback.success){callback.success();}if(callback.complete){callback.complete();}return ;}if(!status.files[status.idx]){status.files[status.idx]={};}if(status.idx===0&&mstrmojo.all[srcWidgetID].tableID){refreshDataSourceTableIdx.call(controller,srcWidgetID,fileUploader,status,callback);return ;}if(importSourceType===constants.sourceSubtype.localFile){status.files[status.idx].fileName=fileUploader.getFileName(status.idx);controller.dataService.createEMMASourceTable(cb,params);}else{if(importSourceType===constants.sourceSubtype.url||importSourceType===constants.sourceSubtype.samplefile||importSourceType===constants.sourceSubtype.publicData){var urlAddress=fileUploader.getFileUrl(status.idx);status.files[status.idx].fileName=urlAddress;params.isUrl=true;params.url=urlAddress;var urlcreateEmmaSourceTableCB={success:function(res){var msgid=res.msgid;var tableID=res.tbid;params.tbid=tableID;if(msgid){controller.dataService.set("messageID",msgid);}helpers.setTablesrc(controller,srcWidgetID,tableID);var source=model.createImportSource(constants.sourceType.file,importSourceType,tableID);var fileName=fileUploader.getFileUrl(status.idx);status.files[status.idx].tableID=tableID;status.files[status.idx].toDel=true;source.set("fileName",fileName);if(fileUploader.tableidx){source.set("tableIdx",fileUploader.getUrlTableIndices(status.idx));source.set("currentIndex",fileUploader.getUrlTableIndices(status.idx));params.shtIx=source.tableIdx;}controller.setDataImportInfoURL(callback,params,tableID);}};controller.dataService.createEMMASourceTable(urlcreateEmmaSourceTableCB,params);}}}function createSourceTableAndImportFile(srcWidgetID,fileUploader,fileName,fetchPreview,importSourceType,callback){var controller=this;var cnt=fileUploader.getFilesCnt();var status={idx:0,files:{}};function onAllImported(){var failedFilesIdx=[],tableIDsToDelete=[],successTableIDs=[],i=0,cnt;mstrmojo.hash.forEach(status.files,function(value,key){if(value.failed===true){failedFilesIdx.push(key);if(value.tableID&&value.toDel){tableIDsToDelete.push(value.tableID);controller.model.resetImportSource(value.tableID);}}else{if(value.tableID){successTableIDs.push(value.tableID);}}});cnt=successTableIDs.length;var onRSDetected={success:function(){i++;if(i>=cnt){if(failedFilesIdx.length>0){if(callback&&callback.failure){callback.failure(status);}}else{if(callback&&callback.success){callback.success(status);}}}},failure:function(){controller.displayError(mstrmojo.desc(12897,"RS detection failure."));},complete:function(){if(i>=cnt){if(callback&&callback.complete){callback.complete();}}}};var onTableDeleted={success:function(res){if(res&&res.msgid){controller.dataService.set("messageID",res.msgid);}if(successTableIDs.length>0){$ARR.forEach(successTableIDs,function(id){controller.dataService.detectRelationshipSourceTable(onRSDetected,{did:id});});}else{onRSDetected.success();}},failure:function(){controller.displayError(mstrmojo.desc(641,"Please try again. If the problem persists, contact the server Administrator."),true);}};if(tableIDsToDelete.length>0){controller.removeEMMASourceTable(onTableDeleted,{did:tableIDsToDelete.join()});}else{onTableDeleted.success();}}var cb={success:function(res){if(res&&res.msgid){controller.dataService.set("messageID",res.msgid);}status.idx++;if(status.idx<cnt){createSourceTableIdx.call(controller,srcWidgetID,fileUploader,status,cb,importSourceType);}else{onAllImported();}},failure:function(res){status.files[status.idx].failed=true;status.files[status.idx].errRes=res;status.idx++;if(status.idx<cnt){createSourceTableIdx.call(controller,srcWidgetID,fileUploader,status,cb,importSourceType);}else{onAllImported();}}};if(cnt>0){createSourceTableIdx.call(controller,srcWidgetID,fileUploader,status,cb,importSourceType);}else{if(callback&&callback.success){callback.success(status);}if(callback&&callback.complete){callback.complete();}}}function checkAutoMappingStatus(importSources){var k,i,sheets;for(k in importSources){sheets=importSources[k].sheetsInfo;if(this.model.operationMode===constants.operationMode.edit){if(importSources[k].sourceInfo){continue;}}if(importSources[k].subtype===constants.sourceSubtype.localFile){if(!sheets){return false;}if(sheets.length===0){if(!importSources[k].isAutoMapped){return false;}}for(i=0;i<sheets.length;i++){if(!sheets[i].isAutoMapped&&sheets[i].selected){return false;}}}else{if(importSources[k].subtype===constants.sourceSubtype.url||importSources[k].subtype===constants.sourceSubtype.samplefile||importSources[k].subtype===constants.sourceSubtype.publicData){if(!sheets){return false;}if(sheets.length===0){if(!importSources[k].isAutoMapped){return false;}}for(i=0;i<sheets.length;i++){if(!sheets[i].isAutoMapped&&sheets[i].selected){return false;}}}}}return true;}function getNonAutoMappedTables(importSources){var k,i,sheets,curSource,subtype,SOURCE_SUBTYPES=constants.sourceSubtype,tables=[];for(k in importSources){curSource=importSources[k];sheets=curSource.sheetsInfo;subtype=curSource.subtype;switch(subtype){case SOURCE_SUBTYPES.localFile:case SOURCE_SUBTYPES.url:case SOURCE_SUBTYPES.samplefile:case SOURCE_SUBTYPES.publicData:if(!sheets){break;}if(sheets.length===0){if(!curSource.isAutoMapped){tables.push(k);break;}}for(i=0;i<sheets.length;i++){if(!sheets[i].isAutoMapped&&sheets[i].selected){tables.push(k);break;}}break;}}return tables;}function getSheetsInfoForAllTables(status,cnt,action,srcWidgetID,refreshPartitionFlag){var controller=this;status.idx=0;var showSheetsSeleDialog=true;var tables=[];var okHandler=function(){var model=controller.model;var importSources=model.importSources,k,tableIDs=[];var status=checkAutoMappingStatus.call(controller,importSources);if(status){if(model.operationMode===constants.operationMode.create){for(k in importSources){tableIDs.push(k);}}else{for(k in importSources){if(!importSources[k].sourceInfo){tableIDs.push(k);}}}controller.detectRelationshipSourceTable(null,tableIDs,action);}else{if(showSheetsSeleDialog){controller.showSheetsSelectionDialog(tables,action,null,srcWidgetID,status,sheetsInfoCB);showSheetsSeleDialog=false;}}};var sheetsInfoCB={success:function(){if(status.files[status.idx]){tables.push(status.files[status.idx].tableID);}status.idx++;if(!refreshPartitionFlag&&status.idx<cnt){controller.getSheetsInfo(sheetsInfoCB,status.files[status.idx].tableID,constants.requestFlag.sheets|0,action,status);}else{var tablesArray=[];var hasFailedTable=false;mstrmojo.hash.forEach(status.files,function(file){if(file.failed){hasFailedTable=true;tablesArray.push(file.tableID);}});if(hasFailedTable){var tablesDeletedCB={success:function(){controller.tablesSrc[srcWidgetID]=[];handleFileImportWarning.call(controller,status,okHandler);for(var k in status.files){if(status.files[k].failed){delete status.files[k];}}}};removeSourceTables.call(controller,tablesArray,tablesDeletedCB,srcWidgetID);}else{if(showSheetsSeleDialog){var tableIDs=getNonAutoMappedTables.call(controller,controller.model.importSources);controller.showSheetsSelectionDialog(tableIDs,action,null,srcWidgetID,status,sheetsInfoCB);showSheetsSeleDialog=false;}}}},failure:function(){status.idx++;var operationMode=controller.model.operationMode;if(operationMode===constants.operationMode.create){if(status.idx<cnt){controller.getSheetsInfo(sheetsInfoCB,status.files[status.idx].tableID,constants.requestFlag.sheets|0,action,status);}else{var tablesArray=[];var allFailedTable=true;mstrmojo.hash.forEach(status.files,function(file){if(file.failed){tablesArray.push(file.tableID);}else{allFailedTable=false;}});var tablesDeletedCB={success:function(){if(allFailedTable){handleFileImportError.call(controller,status);}else{controller.tablesSrc[srcWidgetID]=[];handleFileImportWarning.call(controller,status,okHandler);for(var k in status.files){if(status.files[k].failed){delete status.files[k];}}}}};if(!mstrmojo.all[srcWidgetID].tableID){removeSourceTables.call(controller,tablesArray,tablesDeletedCB,srcWidgetID);}else{tablesDeletedCB.success();}}}else{handleFileImportError.call(controller,status);}},complete:mstrmojo.emptyFn};controller.getSheetsInfo(sheetsInfoCB,status.files[status.idx].tableID,constants.requestFlag.sheets|0,action,status);}function autoMappingToImportSheets(autoMappingParams,xdaType,sheets,tableID,callback,keepOnFail){var controller=mstrApp.getRootController(),dataService=controller.dataService,sel=[],cnt=0,toRemovedID=[],importedTabledIDs=[],ress=[];function autoMappingOneSheet(sheet,callback){var params=mstrmojo.hash.copy(autoMappingParams,{shtIx:sheet.idx});if(sheet.tableID){params.tbid=sheet.tableID;}else{params.srctbid=tableID;params.xt=xdaType;}if(sel.length>1){params.behaviorFlags=constants.behaviorChangeFlag.multiSheet;}dataService.autoMappingSourceTable(callback,params);}function importDone(){mstrApp.hideProgress();if(ress.length>0){toRemovedID=toRemovedID.concat(importedTabledIDs);}if(toRemovedID.length>0){if(!keepOnFail){dataService.removeEMMASourceTable({success:function(){if(callback.success){if(importedTabledIDs.length>0){callback.success({tableIDs:importedTabledIDs});}else{callback.failure({tableIDs:null,res:ress[0]});}}if(callback.complete){callback.complete();}},failure:function(res){if(callback.failure){callback.failure(res);}if(callback.complete){callback.complete();}}},{did:toRemovedID.join()});}else{if(callback.failure){callback.failure(ress[0]);}if(callback.complete){callback.complete();}}}else{if(callback.success){callback.success({tableIDs:importedTabledIDs});}if(callback.complete){callback.complete();}}}var onAutoMappingOneSheet={success:function(res){if(res&&res.tbid){importedTabledIDs.push(res.tbid);}else{importedTabledIDs.push(tableID);}},failure:function(res){if(sel[cnt].tableID){toRemovedID.push(sel[cnt].tableID);}ress.push(res);},complete:function(){cnt++;if(cnt<sel.length){autoMappingOneSheet(sel[cnt],onAutoMappingOneSheet);}else{importDone();}}};$ARR.forEach(sheets,function(sheet){if(sheet.selected){sel.push(sheet);}});if(sel.length<=0){dataService.removeEMMASourceTable(callback,{did:tableID});}else{mstrApp.showProgress();sel[0].tableID=tableID;autoMappingOneSheet(sel[0],onAutoMappingOneSheet);}}function getBackendErrorMessage(errRes){var code=errRes.code;var msg=errRes.message;if(code===null||code===undefined){msg=errRes.getResponseHeader("X-MSTR-TaskFailureMsg");}var start=msg.indexOf("("),end=msg.lastIndexOf(")");if(start>=0&&end>start){msg=msg.substring(start+1,end);}return msg;}function wrapTheDetailedError(status){var controller=this;var failedFiles=[];var successFiles=[];var fileUploadPage=controller.rootView.currentPage;var detailMsg="<ul>";mstrmojo.hash.forEach(status.files,function(value,key){if(value.failed===true){failedFiles.push(value.fileName);detailMsg+="<li>"+value.fileName+"<br>"+getBackendErrorMessage(value.errRes)||" </li>";}else{successFiles.push(value.fileName);}});detailMsg+="</ul>";fileUploadPage.set("forceEnable",successFiles.length>0?true:false);if(fileUploadPage.setFilesObject){fileUploadPage.setFilesObject(failedFiles);}return detailMsg;}function handleFileImportError(status){var controller=this;var detailMsg=wrapTheDetailedError.call(controller,status);controller.displayError(mstrmojo.desc(12900,"Error importing following files. Please check the files or delete them."),false,detailMsg);}function handleFileImportWarning(status,okHandler,cancelHandler){var controller=this;var detailMsg=wrapTheDetailedError.call(controller,status);var config={detailErrorMessage:detailMsg,okBtnText:mstrmojo.desc(219,"Yes"),cancelBtnText:mstrmojo.desc(218,"No"),onCancel:cancelHandler};controller.displayWarning(mstrmojo.desc(13324,"Error importing the following files. Click 'Yes' to ignore the erroneous files and proceed with the successful files. Otherwise, click 'No' to check the erroneous files or delete them."),mstrmojo.desc(12537,"Data Import"),okHandler,config);}function isRefreshPartitionTable(operationMode,sourceType,tableID){var controller=this,isRefresh=false,currentSource,partition;if(operationMode===constants.operationMode.edit&&sourceType===constants.sourceSubtype.url&&tableID){currentSource=controller.model.importSources[tableID];partition=currentSource.sourceInfo.partition;isRefresh=!!partition&&partition.isPartition&&currentSource.xdaType===constants.xdaType.text;}return isRefresh;}function createSourceTableAndImportExcelFile(srcWidgetID,fileUploader,fileName,fetchPreview,importSourceType,action){var controller=this;var cnt=fileUploader.getFilesCnt();var status={idx:0,files:{}};var operationMode=controller.model.operationMode,refreshPartitionFlag=false;if(mstrmojo.DI.DIHelpers.isOperationMode(mstrmojo.all[srcWidgetID].operationMode)){operationMode=mstrmojo.all[srcWidgetID].operationMode;}var cb={success:function(res){if(res&&res.msgid){controller.dataService.set("messageID",res.msgid);}status.idx++;if(!refreshPartitionFlag&&status.idx<cnt){createSourceTableIdx.call(controller,srcWidgetID,fileUploader,status,cb,importSourceType);}else{getSheetsInfoForAllTables.call(controller,status,cnt,action,srcWidgetID,refreshPartitionFlag);}},failure:function(res){var curStatus=status.files[status.idx];curStatus.failed=true;curStatus.errRes=res;status.idx++;if(!refreshPartitionFlag&&curStatus.tableID&&curStatus.toDel){controller.model.resetImportSource(curStatus.tableID);controller.removeEMMASourceTable(null,{did:curStatus.tableID});}mstrApp.hideProgress();var detailedError=controller.getImportController().handleImportError(res);mstrApp.getRootController().displayError(mstrmojo.desc(12771,"Error in importing the file. Please check the file being imported"),false,detailedError);if(!refreshPartitionFlag&&status.idx<cnt){createSourceTableIdx.call(controller,srcWidgetID,fileUploader,status,cb,importSourceType);}}};if(cnt>0){refreshPartitionFlag=isRefreshPartitionTable.call(controller,operationMode,importSourceType,mstrmojo.all[srcWidgetID].tableID);if(refreshPartitionFlag){refreshPartitionTable.call(controller,srcWidgetID,fileUploader,status,cb,importSourceType);}else{createSourceTableIdx.call(controller,srcWidgetID,fileUploader,status,cb,importSourceType);}}else{if(controller.model.getAllTableID().length>0){var importSources=controller.model.importSources;var tableIDs=[];for(var k in importSources){tableIDs.push(k);}if(checkAutoMappingStatus.call(controller,controller.model.importSources)){controller.detectRelationshipSourceTable(null,tableIDs,action);}else{controller.showSheetsSelectionDialog(tableIDs,action,null,srcWidgetID);}}}}function refreshPartitionTable(srcWidgetID,fileUploader,status,callback,importSourceType){var controller=this,tableID=mstrmojo.all[srcWidgetID].tableID,cb,fileCount=fileUploader.getFilesCnt(),i,urls=[],url,params={xt:constants.xdaType.dataImport},fileName,source,model=controller.model;if(!status.files[status.idx]){status.files[status.idx]={};}fileName=fileUploader.getFileUrl(status.idx);status.files[status.idx].fileName=fileName;status.files[status.idx].tableID=tableID;cb={success:function(res){var msgid=res.msgid;if(msgid){controller.dataService.set("messageID",msgid);}source=model.getImportSource(tableID);if(source&&!source.fileName){source.set("fileName",fileName);}params.isUrl=true;params.url=fileName;controller.setDataImportInfoURL(callback,params,tableID);},failure:function(){mstrApp.hideProgress();controller.displayError(mstrmojo.desc(12392,"Encounter error when set partition!"));}};for(i=0;i<fileCount;i++){url=fileUploader.getFileUrl(i);urls.push(url);}if(urls.length>1){mstrmojo.confirm(mstrmojo.desc(14708,"Do you want to group these files into a single partition table?"),{confirmBtn:{fn:function(){controller.partitionController.setPartitionURL(tableID,urls,cb);}}});}else{controller.partitionController.setPartitionURL(tableID,urls,cb);}}mstrmojo.DI.controller.ImportController=mstrmojo.declare(mstrmojo.Obj,null,{scriptClass:"mstrmojo.DI.controller.ImportController",importMultiOAuthReports:function(type,subType,reports,callback){var controller=mstrApp.getRootController();var model=controller.getModel();var oAuthSource=model.externalSources[type];var importOAuthParams=oAuthSource.getSourceInfoParam(true);var sourceXdaType=null;var cnt=0,state=null;var status=[];var failedIdxs=[];function handlingOAuthImportError(){if(callback.failure){callback.failure({reports:reports,status:status});}if(callback.complete){callback.complete();}}function handlingOAuthImportDone(){if(callback.success){callback.success({reports:reports,status:status});}if(callback.complete){callback.complete();}}function autoMappingOneOAuthReport(item,callback){var params=mstrmojo.hash.copy(importOAuthParams,{reportAddress:item.query,reportDesc:item.desc===undefined?"":item.desc,reportMimetype:item.type===undefined?"":item.type,reportName:item.n});if(item.tableID){params.tbid=item.tableID;}else{params.xt=sourceXdaType;}if(item.max){params.reportMax=item.max;}params.dict=helpers.getBackendSourceType(subType);controller.dataService.autoMappingSourceTable(callback,params);}var onDetectRelationshipDone={success:function(){if(failedIdxs.length>0){handlingOAuthImportError();}else{handlingOAuthImportDone();}}};function detectRelationshipAll(){var tableIDs=[],i=0,total;var cb={success:function(){i++;if(i>=total&&onDetectRelationshipDone.success){onDetectRelationshipDone.success();}},failure:function(res){controller.displayError(mstrmojo.desc(12901,"RS detection error."),false,res.message);},complete:function(){if(i>=total&&onDetectRelationshipDone.complete){onDetectRelationshipDone.complete();}}};mstrmojo.array.forEach(status,function(state,idx){if(state.success){tableIDs.push(state.tableID);}else{failedIdxs.push(idx);}});mstrApp.hideProgress();total=tableIDs.length;if(tableIDs.length>0){$ARR.forEach(tableIDs,function(id){controller.dataService.detectRelationshipSourceTable(cb,{did:id});});}else{handlingOAuthImportError();}}var onOneOAuthReportImported={success:function(res){state={success:true};if(res&&res.tbid){state.tableID=res.tbid;}else{state.tableID=reports[cnt].tableID;}status.push(state);},failure:function(res){state={success:false,errCode:res.code,errMsg:res.message};status.push(state);},complete:function(){cnt++;if(cnt>=reports.length){detectRelationshipAll();}else{autoMappingOneOAuthReport(reports[cnt],onOneOAuthReportImported);}}};importOAuthParams.behaviorFlags=constants.importBehaviorFlag.reserved;if(model.operationMode===constants.operationMode.refresh||model.operationMode===constants.operationMode.edit){if(mstrApp.isCloudPro){importOAuthParams.behaviorFlags=constants.importBehaviorFlag.newColumnsSilent|constants.importBehaviorFlag.dataTypeSilent;}}if(!reports||reports.length<=0){handlingOAuthImportDone();return ;}switch(type){case constants.sourceType.googleDrive:sourceXdaType=xdaTypeEnum.dataImportOAuthGDrive;break;case constants.sourceType.dropbox:sourceXdaType=xdaTypeEnum.dataImportOAuthDropbox;break;case constants.sourceType.salesforce:sourceXdaType=xdaTypeEnum.dataImportOAuthSalesforce;break;case constants.sourceType.googleAnalytics:sourceXdaType=xdaTypeEnum.dataImportOAuthGAnalytics;break;case constants.sourceType.googleBigQuery:sourceXdaType=xdaTypeEnum.dataImportOAuthGBigQuery;break;case constants.sourceType.twitter:sourceXdaType=xdaTypeEnum.twitter;break;case constants.sourceType.facebook:sourceXdaType=xdaTypeEnum.facebook;break;}if(sourceXdaType===null){return ;}mstrApp.showProgress();autoMappingOneOAuthReport(reports[0],onOneOAuthReportImported);},refreshDataOAuthReport:function(type,subType,tableID,report,operationMode,callback){var controller=mstrApp.getRootController(),model=controller.getModel(),dataService=controller.dataService,oAuthSource=model.externalSources[type],importOAuthParams=oAuthSource&&oAuthSource.getSourceInfoParam(true),params,source;function handleImportError(res){if(callback.failure){callback.failure(res);}if(callback.complete){callback.complete();}}function detectRelationship(){dataService.detectRelationshipSourceTable(callback,{did:tableID});}var onAutoMappingDone={success:function(){detectRelationship();},failure:function(res){handleImportError(res);}};if(!oAuthSource||!report||!tableID){handleImportError();}var onSetDataImportInfo={success:function(){params=mstrmojo.hash.copy(importOAuthParams,{behaviorFlags:constants.behaviorChangeFlag.refreshData,reportAddress:report.query,reportDesc:report.desc,reportMimetype:report.type,reportName:report.n,reportMax:report.max===undefined?"":report.max,dict:helpers.getBackendSourceType(subType),tbid:tableID});dataService.autoMappingSourceTable(onAutoMappingDone,params);},failure:function(res){handleImportError(res);}};source=model.getImportSource(tableID);if(source.sourceInfo.isRefined){params=mstrmojo.hash.copy(importOAuthParams,{reportAddress:report.query,reportDesc:report.desc,reportMimetype:report.type,reportName:report.n,tbid:tableID});dataService.setDataImportInfo(onSetDataImportInfo,params);}else{onSetDataImportInfo.success();}},importMultiFBReports:function(type,subType,reports,callback){var controller=mstrApp.getRootController(),model=controller.getModel(),dataService=controller.dataService,oAuthSource=model.externalSources[type],importOAuthParams=oAuthSource.getSourceInfoParam(true),sourceXdaType=constants.xdaType.facebook,reportsJson={},reportArr=[],status=[],params,cnt=0,tableIDs;function handlingOAuthImportError(){if(callback.failure){callback.failure({reports:reports});}if(callback.complete){callback.complete();}}function handlingOAuthImportDone(){if(callback.success){callback.success({reports:reports,status:status});}if(callback.complete){callback.complete();}}var onDetectRelationshipDone={success:function(){var state={success:true};status.push(state);cnt++;if(tableIDs&&cnt>=tableIDs.length){handlingOAuthImportDone();}},failure:function(res){var state={success:false,errCode:res.code,errMsg:res.message};status.push(state);}};var onAutoMappingDone={success:function(res){tableIDs=res&&res.tbids;if(tableIDs.length>0){$ARR.forEach(tableIDs,function(v){controller.dataService.detectRelationshipSourceTable(onDetectRelationshipDone,{did:v.tbid});});}else{handlingOAuthImportError();}},failure:function(res){var state={success:false,errCode:res.code,errMsg:res.message};status.push(state);handlingOAuthImportError();}};$ARR.forEach(reports,function(r){reportArr.push({reportName:r.n,reportAddress:r.query,reportMimetype:r.type===undefined?"":r.type,reportDesc:r.desc===undefined?"":r.desc});});reportsJson.reports=reportArr;params=mstrmojo.hash.copy(importOAuthParams,{xt:sourceXdaType,hasMultiOAuth:true,multiOAuthReports:JSON.stringify(reportsJson),dict:helpers.getBackendSourceType(subType)});dataService.autoMappingSourceTable(onAutoMappingDone,params);},importMultiOAuthFileReports:function(type,subType,reports,callback){var controller=mstrApp.getRootController(),model=controller.getModel(),dataService=controller.dataService,oAuthSource=model.externalSources[type],importOAuthParams=oAuthSource&&oAuthSource.getSourceInfoParam(true),cnt=0,report=null,sourceXdaType=null,importedTabledIDs=[],params;function handlingOAuthImportDone(){var hasError=false,status=[];$ARR.forEach(reports,function(report){status.push(report.status);if(report.status&&report.status.success===false){hasError=true;}});if(hasError){if(callback.failure){callback.failure({reports:reports,status:status});}}else{if(callback.success){callback.success({reports:reports,status:status});}}if(callback.complete){callback.complete();}}function getSheetsInfoForOneFile(report,callback){var onGetSheetsInfo={success:function(res){report.id=report.tableID;report.sheets=res.sheets;if(report.sheets.length>0){report.sheets[0].selected=true;}report.multiSelection=true;if(callback.success){callback.success();}if(callback.complete){callback.complete();}},failure:function(res){if(callback.failure){callback.failure(res);}if(callback.complete){callback.complete();}}};var onCreateSourceTable={success:function(res){if(res&&res.tbid){report.tableID=res.tbid;}params=mstrmojo.hash.copy(importOAuthParams,{reportAddress:report.query,reportDesc:report.desc,reportMimetype:report.type,reportName:report.n});setDataImportAndGetSheets(params,report.tableID,onGetSheetsInfo);},failure:function(res){if(callback.failure){callback.failure(res);}if(callback.complete){callback.complete();}}};dataService.createEMMASourceTable(onCreateSourceTable,{xt:sourceXdaType,dict:helpers.getBackendSourceType(subType)});}function startDetectRelationship(){var i=0,total;mstrApp.showProgress();var cb={success:function(){i++;if(i>=total){handlingOAuthImportDone();}},failure:function(res){controller.displayError(mstrmojo.desc(12901,"RS detection error."),false,res.message);},complete:function(){if(i>=total){mstrApp.hideProgress();mstrApp.hideProgress();}}};total=importedTabledIDs.length;if(importedTabledIDs.length>0){$ARR.forEach(importedTabledIDs,function(id){dataService.detectRelationshipSourceTable(cb,{did:id});});}else{cb.success();cb.complete();}}function importSheetsForOneFile(report,callback){params=mstrmojo.hash.copy(importOAuthParams,{reportAddress:report.query,reportDesc:report.desc,reportMimetype:report.type,reportName:report.n});autoMappingToImportSheets(params,sourceXdaType,report.sheets,report.tableID,callback);}var onImportSheetsInfoForOneFile={success:function(res){if(res.tableIDs&&res.tableIDs.length>0){importedTabledIDs=importedTabledIDs.concat(res.tableIDs);}cnt++;if(cnt<reports.length){report=reports[cnt];importSheetsForOneFile(report,onImportSheetsInfoForOneFile);}else{startDetectRelationship();}},failure:function(res){report.status.success=false;report.status.errCode=res&&res.res&&res.res.code;report.status.errMsg=res&&res.res&&res.res.message;cnt++;if(cnt<reports.length){report=reports[cnt];importSheetsForOneFile(report,onImportSheetsInfoForOneFile);}else{startDetectRelationship();}}};function startAutoMapping(){mstrApp.showProgress();cnt=0;report=reports[cnt];params=mstrmojo.hash.copy(importOAuthParams,{reportAddress:report.query,reportDesc:report.desc,reportMimetype:report.type,reportName:report.n});autoMappingToImportSheets(params,sourceXdaType,report.sheets,report.tableID,onImportSheetsInfoForOneFile);}var onGetSheetsInfoForOneFile={failure:function(res){report.status.success=false;report.status.errCode=res.code;report.status.errMsg=res.message;},complete:function(){var hasMultiSheetsFile=false,singleSheetFiles=[],multiSheetsFiles=[],config;cnt++;if(cnt<reports.length){report=reports[cnt];report.status={success:true};getSheetsInfoForOneFile(report,onGetSheetsInfoForOneFile);}else{$ARR.forEach(reports,function(report){if(report.sheets&&report.sheets.length>1){hasMultiSheetsFile=true;multiSheetsFiles.push(report);}else{singleSheetFiles.push(report);}});if(hasMultiSheetsFile){config={items:multiSheetsFiles,onOK:function(){reports=this.items?this.items.concat(singleSheetFiles):singleSheetFiles;this.close();startAutoMapping();},onBack:function(){var tableIDs=[];$ARR.forEach(reports,function(report){if(report.tableID){tableIDs.push(report.tableID);}});if(tableIDs.length>0){controller.dataService.removeEMMASourceTable(null,{did:tableIDs.join()});}}};controller.showDialog(constants.dialogType.sheetsSelectionDialog,config);}else{startAutoMapping();}}}};if(!oAuthSource||!reports||reports.length<=0){handlingOAuthImportDone();return ;}switch(type){case constants.sourceType.googleDrive:sourceXdaType=xdaTypeEnum.dataImportOAuthGDrive;break;case constants.sourceType.dropbox:sourceXdaType=xdaTypeEnum.dataImportOAuthDropbox;break;}if(sourceXdaType===null){return ;}report=reports[cnt];report.status={success:true};getSheetsInfoForOneFile(report,onGetSheetsInfoForOneFile);},refreshDataOAuthFileReport:function(type,subType,tableID,report,operationMode,callback){var controller=mstrApp.getRootController(),dataService=controller.dataService,oAuthSource=controller.getModel().externalSources[type],sourceXdaType=null,importOAuthParams=oAuthSource&&oAuthSource.getSourceInfoParam(true),importSource=controller.getModel().getImportSource(tableID),params=mstrmojo.hash.copy(importOAuthParams,{reportAddress:report.query,reportDesc:report.desc,reportMimetype:report.type,reportName:report.n});function handleImportError(res){if(callback.failure){callback.failure(res);}if(callback.complete){callback.complete();}}var onAutoMapping={success:function(){dataService.detectRelationshipSourceTable(callback,{did:tableID});},failure:function(res){handleImportError(res);}};function startAutoMapping(){autoMappingToImportSheets(mstrmojo.hash.copy(params,{behaviorFlags:constants.behaviorChangeFlag.refreshData}),sourceXdaType,report.sheets,tableID,onAutoMapping,true);}var onGetSheetsInfo={success:function(res){var config,idx;report.sheets=res.sheets;report.multiSelection=false;report.defaultSheetsIndex=0;if(importSource&&importSource.sourceInfo){idx=$ARR.find(res.sheets,"idx",importSource.sourceInfo.sheetIndex);if(idx>-1){report.defaultSheetsIndex=idx;}}if(report.sheets.length>1){config={items:[report],onOK:function(){report=this.items[0];this.close();startAutoMapping();}};controller.showDialog(constants.dialogType.sheetsSelectionDialog,config);}else{report.sheets[0].selected=true;startAutoMapping();}},failure:function(res){handleImportError(res);}};switch(type){case constants.sourceType.googleDrive:sourceXdaType=xdaTypeEnum.dataImportOAuthGDrive;break;case constants.sourceType.dropbox:sourceXdaType=xdaTypeEnum.dataImportOAuthDropbox;break;}if(sourceXdaType===null){return ;}if(importSource){if(!importSource.isExtensionValid(report.n)){controller.displayError(mstrmojo.desc(12509,"Switching the file type is not allowed during republishing or editing the cube."),false);return ;}}setDataImportAndGetSheets(params,tableID,onGetSheetsInfo);},importProjects:function(callback,dbrId,cubeId){var controller=mstrApp.getRootController(),dataService=controller.dataService,tableID=null;function handleImportError(res){var status={code:res.code,message:res.message};if(tableID){dataService.removeEMMASourceTable({success:function(){if(callback.failure){callback.failure(status);}if(callback.complete){callback.canceled();}},failure:function(res){controller.displayError(mstrmojo.desc(12902,"Remove EMMA Source Table Error."),false,res.message);}},{did:tableID});}else{if(callback.failure){callback.failure(status);}if(callback.complete){callback.complete();}}}var onCreateSourceTable={success:function(res){if(res&&res.tbid){tableID=res.tbid;}if(callback.success){callback.success(res);}},failure:function(res){handleImportError(res);}};dataService.createEMMASourceTable(onCreateSourceTable,{xt:constants.xdaType.projectsImport,dbrId:dbrId,cubeId:cubeId});},importClipboard:function(file,callback){var controller=mstrApp.getRootController(),dataService=controller.dataService,tableID=null,fileUploader=file.uploader;function handleImportError(res){var status={code:res.code,message:res.message};if(tableID){dataService.removeEMMASourceTable({success:function(){if(callback.failure){callback.failure(status);}if(callback.complete){callback.canceled();}},failure:function(res){controller.displayError(mstrmojo.desc(12902,"Remove EMMA Source Table Error."),false,res.message);}},{did:tableID});}else{if(callback.failure){callback.failure(status);}if(callback.complete){callback.complete();}}}var onAutoMapping={success:function(){dataService.detectRelationshipSourceTable(callback,{did:tableID});},failure:function(res){handleImportError(res);}};var onBinaryUpload={success:function(){dataService.autoMappingSourceTable(onAutoMapping,{tbid:tableID,shtIx:0,dlmt:",",qt:'\\"'});},failure:function(res){handleImportError(res);},complete:function(){mstrApp.hideProgress();}};var onCreateSourceTable={success:function(res){if(res&&res.tbid){tableID=res.tbid;}dataService.importFile(fileUploader,onBinaryUpload,{msgid:dataService.messageID,tableID:tableID});},failure:function(res){handleImportError(res);}};dataService.createEMMASourceTable(onCreateSourceTable,{xt:constants.xdaType.dataImport,dict:constants.backendSourceSubtype.clipboard});},refreshDataClipboard:function(tableID,file,operationMode,callback){var controller=mstrApp.getRootController(),dataService=controller.dataService,fileUploader=file.uploader;function handleImportError(res){if(callback.failure){callback.failure(res);}if(callback.complete){callback.complete();}}var onAutoMapping={success:function(){dataService.detectRelationshipSourceTable(callback,{did:tableID});},failure:function(res){handleImportError(res);}};var onBinaryUpload={success:function(){dataService.autoMappingSourceTable(onAutoMapping,{tbid:tableID,shtIx:0,behaviorFlags:constants.behaviorChangeFlag.refreshData});},failure:function(res){handleImportError(res);},complete:function(){mstrApp.hideProgress();}};dataService.importFile(fileUploader,onBinaryUpload,{msgid:dataService.messageID,tableID:tableID});},handleImportError:function handleImportError(res,fileName){var errCode=res.code,message=res.message;if(errCode===undefined||errCode===null){errCode=parseInt(res.getResponseHeader("X-MSTR-TaskErrorCode"),10);message=res.getResponseHeader("X-MSTR-TaskFailureMsg");}var controller=mstrApp.getRootController();var m=controller.model;if(errCode===constants.backendError.cubeQuotaReached){message=mstrmojo.desc(13031,"We could not import your data because there is not enough space left. Please consider removing some rows/columns and try again or contact your administrator.");}else{if(errCode===constants.backendError.fileVersionError){message=mstrmojo.desc(12612,"Excel 5.0/7.0 files are not supported. Save the file to Excel version 97/2000/XP/2003 or higher.");}else{if(errCode===constants.backendError.salesforceUnsavedReport){message=mstrmojo.desc(12786,"Cannot upload data because the Salesforce report Active Accounts has not been saved. Please save the report and try again!");}else{if(errCode===constants.backendError.emptySheet){message=mstrmojo.desc(12618,"The import process cannot proceed with an empty sheet.");}else{if(errCode===constants.backendError.salesforceUnresolvedFilter){message=mstrmojo.desc(12789,"You cannot import a Salesforce report with any unresolved filters.");}else{if(errCode===constants.backendError.noExternalSourceInfo){var start=message.indexOf("Google Analytics");var end=message.indexOf("\t");message=message.substring(start,end);}else{if(errCode===constants.backendError.switchingFileType){message=mstrmojo.desc(12790,"Switching the source file type between Excel, CSV and Text is not allowed. You had previously used ####. Please use the same file type.").replace("####",m.currentSource.sourceInfo.name);}else{if(errCode===constants.backendError.memoryConsumptionExceeded){var limit="";if(message.indexOf("Max memory size limit: ")>-1){var pos1=message.indexOf("Max memory size limit: ")+23;var pos2=message.indexOf(".",pos1);limit="("+message.substring(pos1,pos2)+") ";}message=mstrmojo.desc(12791,"Memory consumption limit during data fetching #### is exceeded.").replace("####",limit);}else{if(errCode===constants.backendError.switchingFileType){message=mstrmojo.desc(12509,"Switching the file type is not allowed during republishing or editing the cube.");}else{if(errCode===constants.backendError.unsupportedFileFormat){message=mstrmojo.desc(12619,"Only UTF 8/16 CSV or text files are supported. Save the file as UTF or 16 codepage and import again.");}}}}}}}}}}var detailMsg="<ul><li>"+fileName+"<br>"+message||getBackendErrorMessage(res)+"</li></ul>";return detailMsg;},importFile:function importFile(fileUploader,fileName,fetchPreview,bCreateReportInstance,srcWidgetID,hasExcelFile,action){var controller=mstrApp.getRootController();var tablesBefore,i,tablesToDelete=null;var onNewFilesImported={success:function(){var tables=controller.model.getAllTableID();if(srcWidgetID){controller.tablesSrc[srcWidgetID]=[];for(i=0;i<tables.length;i++){if($ARR.indexOf(tablesBefore,tables[i])===-1){controller.tablesSrc[srcWidgetID].push(tables[i]);}}if(tablesToDelete&&tablesToDelete.length){for(i=0;i<tables.length;i++){controller.navigationController.deleteRoute(tablesToDelete[i]);}}}var flags=constants.requestFlag.mapping|constants.requestFlag.sourceInfo|constants.requestFlag.relationship,sheet=fetchPreview?0:-1;controller.getImportedDataEMMA(actions.importSource,flags,sheet);},failure:function(status){handleFileImportError.call(controller,status);},complete:function(){mstrApp.hideProgress();}};var onCreateReportInstance={success:function(res){if(res&&res.msgid){controller.dataService.set("messageID",res.msgid);}if(hasExcelFile){createSourceTableAndImportExcelFile.call(controller,srcWidgetID,fileUploader,fileName,fetchPreview,constants.sourceSubtype.localFile,action);}else{createSourceTableAndImportFile.call(controller,srcWidgetID,fileUploader,fileName,fetchPreview,constants.sourceSubtype.localFile,onNewFilesImported);}},failure:function(res){controller.displayError(mstrmojo.desc(12783,"Create EMMA Report Instance error. Please check the metadata."),false,res.message||"");}};var onPrevImportedTableRemoved={success:function(){tablesBefore=controller.model.getAllTableID();if(bCreateReportInstance){controller.createNewReportInstance(onCreateReportInstance);}else{if(hasExcelFile){createSourceTableAndImportExcelFile.call(controller,srcWidgetID,fileUploader,fileName,fetchPreview,constants.sourceSubtype.localFile,action);}else{createSourceTableAndImportFile.call(controller,srcWidgetID,fileUploader,fileName,fetchPreview,constants.sourceSubtype.localFile,onNewFilesImported);}}},failure:function(){controller.displayError(mstrmojo.desc(12903,"remove previous imported table failed"));}};if(srcWidgetID){tablesToDelete=[];for(i=0;controller.tablesSrc[srcWidgetID]&&i<controller.tablesSrc[srcWidgetID].length;i++){if(controller.model.getImportSource(controller.tablesSrc[srcWidgetID][i])){tablesToDelete.push(controller.tablesSrc[srcWidgetID][i]);}}removeSourceTables.call(controller,tablesToDelete,onPrevImportedTableRemoved,srcWidgetID);}else{onPrevImportedTableRemoved.success();}},importURL:function importURL(urlUploader,url,fetchPreview,bCreateReportInstance,srcWidgetID,hasExcelFile,action){var controller=mstrApp.getRootController();var tablesBefore,i,tablesToDelete;var subtype=constants.sourceSubtype.url;if(urlUploader.scriptClass==="mstrmojo.DI.DISampleFiles"){subtype=constants.sourceSubtype.samplefile;}if(urlUploader.scriptClass==="mstrmojo.DI.DIPublicData"){subtype=constants.sourceSubtype.publicData;}var onNewFilesImported={success:function(){var tables=controller.model.getAllTableID();if(srcWidgetID){controller.tablesSrc[srcWidgetID]=[];for(i=0;i<tables.length;i++){if($ARR.indexOf(tablesBefore,tables[i])===-1){controller.tablesSrc[srcWidgetID].push(tables[i]);}}if(tablesToDelete&&tablesToDelete.length){for(i=0;i<tables.length;i++){controller.navigationController.deleteRoute(tablesToDelete[i]);}}}var flags=constants.requestFlag.mapping|constants.requestFlag.sourceInfo|constants.requestFlag.relationship,sheet=fetchPreview?0:-1,dialogCallback;dialogCallback={onOK:function(){controller.getImportedDataEMMA(actions.importSource,flags,sheet);},onCancel:function(data){controller.getImportedDataEMMA(actions.importSource,flags,sheet,undefined,undefined,undefined,undefined,data);}};if(!controller.rootView.currentPage.tableID){controller.autoDetectPartitionGroups(dialogCallback,sheet);}else{controller.getImportedDataEMMA(actions.importSource,flags,sheet);}},failure:function(status){handleFileImportError.call(controller,status);}};var onCreateReportInstance={success:function(res){if(res&&res.msgid){controller.dataService.set("messageID",res.msgid);}createSourceTableAndImportExcelFile.call(controller,srcWidgetID,urlUploader,url,fetchPreview,subtype,action);},failure:function(res){controller.displayError(mstrmojo.desc(12783,"Create EMMA Report Instance error. Please check the metadata."),false,res.message||"");}};var onPrevImportedTableRemoved={success:function(){tablesBefore=controller.model.getAllTableID();if(bCreateReportInstance){controller.createNewReportInstance(onCreateReportInstance);}else{if(hasExcelFile){createSourceTableAndImportExcelFile.call(controller,srcWidgetID,urlUploader,url,fetchPreview,subtype,action);}else{createSourceTableAndImportFile.call(controller,srcWidgetID,urlUploader,url,fetchPreview,subtype,onNewFilesImported);}}},failure:function(){controller.displayError(mstrmojo.desc(12903,"remove previous imported table failed"));}};if(srcWidgetID){tablesToDelete=[];for(i=0;controller.tablesSrc[srcWidgetID]&&i<controller.tablesSrc[srcWidgetID].length;i++){if(controller.model.getImportSource(controller.tablesSrc[srcWidgetID][i])){tablesToDelete.push(controller.tablesSrc[srcWidgetID][i]);}}removeSourceTables.call(controller,tablesToDelete,onPrevImportedTableRemoved,srcWidgetID);}else{onPrevImportedTableRemoved.success();}},removeMultipleSourceTables:function removeMultipleSourceTables(tables){var controller=mstrApp.getRootController();var onTablesRemoved={success:function(){},failure:function(){controller.displayError(mstrmojo.desc(12904,"Failed to remove 1 or more tables"));}};removeSourceTables.call(controller,tables,onTablesRemoved);}});}());