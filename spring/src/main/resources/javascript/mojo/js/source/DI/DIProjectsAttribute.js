(function(){mstrmojo.requiresCls("mstrmojo.Container","mstrmojo.DI.DIConstants","mstrmojo.List","mstrmojo._HasLayout","mstrmojo.Label","mstrmojo.TextArea","mstrmojo.Widget","mstrmojo.Pulldown","mstrmojo.DI.DISearchablePulldown");mstrmojo.requiresDescs(221,1825,5369,13037,13242,13243,13244,13606,13642,13853,13989,14202,14203);var $ARR=mstrmojo.array,constants=mstrmojo.DI.DIConstants;function getAttributeForms(data,callbacks){var attributeID=data.did,attributeName=data.n,taskCallback={success:function(res){if(res.container){var forms=res.container.dssforms||[],i,len;for(i=0,len=forms.length;i<len;i++){forms[i].aid=attributeID;forms[i].an=attributeName;forms[i].did=attributeID+forms[i].dssid;forms[i].idf=forms[0].dssid;}if(callbacks&&callbacks.success){callbacks.success({items:forms});}}}},taskParam={attributeID:attributeID,displayedForms:0};mstrApp.getRootController().getDataService().getAttributeForms(taskCallback,taskParam);}function updateProjectAttributeForm(proAttributeWidget,item,res){var formMaps=proAttributeWidget.formMaps;var proAttrName=item.n;var selections=[];var allIDForms=res.items;var idForm,i,j,form;for(j=0;j<allIDForms.length;j++){form=allIDForms[j];if(form.dssid===form.idf){idForm=form;}}proAttributeWidget.idForm=idForm;if(formMaps&&formMaps.length>0){mstrmojo.array.removeItem(allIDForms,idForm);for(i=0;i<formMaps.length;i++){selections.push({did:formMaps[i].did,dssid:(i===0)?idForm.idf:null,aid:item.did,projectFormMaps:allIDForms,proAttrName:proAttrName,isMultiForm:true,fmid:formMaps[i].fmid});}}else{var obj=proAttributeWidget.attribute;var model=mstrApp.getRootController().model,source=model.importSources[obj.tableId],maps;if(source.currentTransformations&&source.currentTransformations.xtab&&source.currentTransformations.xtab.isCrosstab){maps=source.transformedMapping;}else{maps=source.currentMapping;}proAttributeWidget.found=false;for(i=0;i<maps.length;i++){if(idForm&&((idForm.aid+idForm.dssid)===maps[i].afid||idForm.aid===maps[i].oid)){if(allIDForms.length>1){proAttributeWidget.found=true;proAttributeWidget.set("found",true);proAttributeWidget.set("formMaps",[{fmn:mstrmojo.desc(14202,"Default form")}]);mstrmojo.array.removeItem(allIDForms,idForm);break;}else{var msg=mstrmojo.desc(13989,"The project attribute '##' has a single form which has already been mapped within the current table.");mstrApp.getRootController().displayError(msg.replace("##",idForm.an));return ;}}}selections=[{isMultiForm:false,aid:allIDForms[0].aid,dssid:allIDForms[0].dssid,projectFormMaps:allIDForms,proAttrName:proAttrName}];if(proAttributeWidget.found){selections[0].isMultiForm=true;}}proAttributeWidget.set("projectAttribute",item);proAttributeWidget.set("selections",selections);proAttributeWidget.validateForms();}mstrmojo.DI.ProjectAttributeItem=mstrmojo.declare(mstrmojo.Box,null,{scriptClass:"mstrmojo.DI.ProjectAttributeItem",editor:null,projectFormMap:null,item:null,visible:true,linkedColumnId:null,did:null,cssClass:"mstrmojo-di-projects-form-select",children:[{scriptClass:"mstrmojo.HBox",children:[{scriptClass:"mstrmojo.Pulldown",alias:"formPullDown",popupToBody:true,itemField:"n",itemIdField:"dssid",bindings:{popupZIndex:"this.parent.parent.editor.zIndex",linkedColumnId:"this.parent.parent.linkedColumnId"},preBuildRendering:function preBuildRendering(){var multiFormItem=this.parent.parent,item=multiFormItem.item;this.set("items",item.projectFormMaps);this.set("defaultSelection",0);var projectAttributeItem=this.parent.parent;if(this.items[0]){projectAttributeItem.item.dssid=this.items[0].dssid;}},onvalueChange:function(){var list=this,selectedIndex=list.selectedIndex,editor=this.parent.parent.editor,projectAttributeItem=this.parent.parent;editor.onFormChanged(projectAttributeItem.item,list.items[selectedIndex].dssid);editor.validateForms();}}]}]});var HINT_TXT=mstrmojo.desc(14203,"Type attribute name and press 'Enter' to search");mstrmojo.DI.DIProjectsAttribute=mstrmojo.declare(mstrmojo.Editor,null,{scriptClass:"mstrmojo.DI.DIProjectsAttribute",cssClass:"di-projects-attribute-panel",title:mstrmojo.desc(13037,"Map to Project Attribute"),titleWidget:"",blockCount:50,attribute:null,formMaps:null,found:false,projectAttribute:null,projectFormMaps:null,selections:{},help:"About_mapping_imported_data.htm",buttons:[{scriptClass:"mstrmojo.Button",cssClass:"mstrmojo-di-button mstrmojo-WebButton hot",text:mstrmojo.desc(5369,"Submit"),alias:"submit",enabled:false,onclick:function(){var editor=this.parent.parent;editor.updateMapping();editor.close();}},{scriptClass:"mstrmojo.Button",cssClass:"mstrmojo-di-button mstrmojo-WebButton",text:mstrmojo.desc(221,"Cancel"),onclick:function(){var editor=this.parent.parent;editor.close();}}],updateHintText:function(){var selectedNode=this.mainPage.title.attributePulldown.selectedNode;if(selectedNode.textContent!==undefined){selectedNode.textContent=HINT_TXT;}else{selectedNode.innerText=HINT_TXT;}},children:[{scriptClass:"mstrmojo.VBox",cssClass:"",alias:"mainPage",children:[{scriptClass:"mstrmojo.HBox",alias:"title",cssClass:"mstrmojo-di-title-box",children:[{alias:"attributePulldown",scriptClass:"mstrmojo.DI.DISearchablePulldown",cssClass:"mstrmojo-di-projectAttributeSearchbox",visible:true,blockCount:50,onitemSelected:function(item){var me=this;var callback={success:function(res){me.set("isEditing",false);var proAttributeWidget=me.parent.parent.parent;updateProjectAttributeForm(proAttributeWidget,item,res);}};getAttributeForms(this.getSelectedItem(),callback);}},{scriptClass:"mstrmojo.Button",cssClass:"mstrmojo-WebButton browseButton",text:mstrmojo.desc(1825,"Browse"),onclick:function(){var me=this;var cfg={OKFn:function(item){var callback={success:function(res){var proAttributeWidget=me.parent.parent.parent;updateProjectAttributeForm(proAttributeWidget,item,res);}};getAttributeForms(item,callback);},oTypes:[12]};mstrApp.getRootController().showDialog(constants.dialogType.objectPicker,cfg);}}]},{scriptClass:"mstrmojo.HBox",cssClass:"mstrmojo-di-content-box",alias:"contentH",children:[{scriptClass:"mstrmojo.VBox",cssClass:"mstrmojo-di-projects-attribute-left-box",alias:"contentV",children:[{scriptClass:"mstrmojo.Label",cssClass:"mstrmojo-di-projects-attribute-title-label",text:mstrmojo.desc(13242,"Imported Attribute")},{scriptClass:"mstrmojo.Label",alias:"attributeName",cssClass:"mstrmojo-di-projects-attribute-label",visible:true,bindings:{text:function(){return this.parent.parent.parent.parent.attribute.alias;}}},{scriptClass:"mstrmojo.WidgetList",alias:"formMapsList",cssClass:"mstrmojo-di-projects-attribute-formMapsList",visible:true,itemFunction:function ifn(item,idx,w){return new mstrmojo.Label({cssClass:"mstrmojo-di-projects-form-label",text:item.fmn});},bindings:{items:function(){return this.parent.parent.parent.parent.formMaps;}}}]},{scriptClass:"mstrmojo.VBox",cssClass:"mstrmojo-di-projects-attribute-right-box",alias:"selected_content",children:[{scriptClass:"mstrmojo.Label",cssClass:"mstrmojo-di-projects-attribute-title-label",text:mstrmojo.desc(13243,"Project Attribute")},{scriptClass:"mstrmojo.Label",alias:"selected_attribute_select_placeholder",cssClass:"mstrmojo-di-projects-attribute-placeholder",text:mstrmojo.desc(13244,"Search or browse Attribute above"),visible:true,bindings:{visible:function(){var text=this.parent.parent.parent.parent.projectAttribute;if(text){return false;}return true;}}},{scriptClass:"mstrmojo.Label",alias:"selected_attribute",cssClass:"mstrmojo-di-projects-attribute-label ipa",visible:false,bindings:{text:function(){var projectAttribute=this.parent.parent.parent.parent.projectAttribute;var text="";if(projectAttribute){text=projectAttribute.n;}return text;},visible:function(){var text=this.parent.parent.parent.parent.projectAttribute;if(text){return true;}return false;}}},{scriptClass:"mstrmojo.WidgetList",alias:"selected_formMapsList",cssClass:"mstrmojo-di-projects-attribute-formMapsList",visible:false,itemFunction:function ifn(item,idx,w){if(!item.isMultiForm){return ;}if(w.parent.parent.parent.parent.found){return new mstrmojo.DI.ProjectAttributeItem({editor:w.parent.parent.parent.parent,projectFormMap:w.parent.parent.parent.parent.projectFormMaps,item:item,did:item.did});}else{if(idx===0){return new mstrmojo.Label({cssClass:"mstrmojo-di-projects-form-label",text:w.parent.parent.parent.parent.idForm?w.parent.parent.parent.parent.idForm.n:"ID"});}else{return new mstrmojo.DI.ProjectAttributeItem({editor:w.parent.parent.parent.parent,projectFormMap:w.parent.parent.parent.parent.projectFormMaps,item:item,did:item.did});}}},bindings:{items:function(){return this.parent.parent.parent.parent.selections;},visible:function(){var text=this.parent.parent.parent.parent.projectAttribute;if(text){return true;}return false;}}}]}]}]}],preBuildRendering:function preBuildRendering(){this._super();},onOpen:function onOpen(){this.mainPage.title.attributePulldown.set("items",[]);this.mainPage.title.attributePulldown.set("text","");this.set("isEditing",true);this.set("selections",{});this.set("projectAttribute",null);this.set("projectFormMaps",null);this.btnHbox.submit.set("enabled",false);this.set("found",false);},updateMapping:function updateMapping(){var obj,i,j,k,z;var selections=this.selections;obj=this.attribute;var controller=mstrApp.getRootController(),model=mstrApp.getRootController().model,found=false,isProjectIDFormMapped=false,source,msg,maps,map,text;var aid=selections[0].aid;var fid=selections[0].dssid;var proAttrName=selections[0].proAttrName;var sources=model.findMappingSource(obj);text=this.projectAttribute.n;for(i=0;i<sources.length;i++){isProjectIDFormMapped=false;source=sources[i];if(source.currentTransformations&&source.currentTransformations.xtab&&source.currentTransformations.xtab.isCrosstab){maps=source.transformedMapping;}else{maps=source.currentMapping;}for(j=0;j<maps.length;j++){map=maps[j];if(map.afid===(aid+fid)){controller.displayError(mstrmojo.desc(9926,"The attribute form you select has been mapped. Please choose a different one."));model.raiseEvent({name:"MappingsFetched"});return false;}if(obj.did===map.did||obj.afid===map.afid){continue;}if(obj.oid===map.oid&&obj.tableId!==map.tableId){continue;}if(obj.oid===map.oid&&this.projectAttribute.t===map.tp){if(map.oid&&map.oid===this.projectAttribute.did){continue;}else{if(!map.isMultiForm&&(this.projectAttribute.did+map.fmid)!==map.afid){found=true;break;}else{if(map.isMultiForm&&!map.isLinked){found=true;break;}}}}if(obj.oid!==map.oid&&proAttrName===map.alias&&!map.ipa){found=true;}}if(found){msg=mstrmojo.desc(13853,"The Attribute ## cannot be mapped to the Project Attribute ### since there is already an Attribute with the same name as the Project Attribute within the current dataset. Please rename the Attribute ### in the current dataset to something else.");controller.displayError(msg.replace(/###/g,text).replace("##",this.attribute.alias));model.raiseEvent({name:"MappingsFetched"});return false;}if(fid===this.idForm.idf){isProjectIDFormMapped=true;}else{for(j=0;j<maps.length;j++){map=maps[j];if(map.ipa&&map.oid&&(map.oid===this.projectAttribute.did)&&(map.fmid===this.idForm.idf)){isProjectIDFormMapped=true;}}}if(!isProjectIDFormMapped){msg=mstrmojo.desc(13606,"Linked non-id form can't mapped to project attribute: ###, please unlink the non-id form first.");controller.displayError(msg.replace(/###/g,text).replace("##",this.attribute.alias));model.raiseEvent({name:"MappingsFetched"});return false;}}for(i=0;i<sources.length;i++){source=sources[i];var originalCol=source.findMappingItem(obj);if(originalCol.isMultiForm){originalCol.ipa=1;originalCol.tp=12;originalCol.nochange=true;var subColumns=originalCol.subColumns,subColumn;for(z=0;z<selections.length;z++){var selection=selections[z];for(k=0;k<subColumns.length;k++){if(selection.fmid===subColumns[k].fmid){subColumn=subColumns[k];}}subColumn.ipa=1;subColumn.oid=selection.aid;subColumn.fmid=selection.dssid;}}else{originalCol.ipa=1;originalCol.tp=12;originalCol.nochange=true;originalCol.oid=selections[0].aid;originalCol.fmid=selections[0].dssid;}}mstrApp.getRootController().changeEMMAMappings();},onFormChanged:function onFormChanged(formMap,formId){formMap.dssid=formId;},validateForms:function validateForms(){var duplicateMaps=[],formMaps=this.selections,i,map,valid=false;for(i=0;i<formMaps.length;i++){map=formMaps[i];if($ARR.find(duplicateMaps,"dssid",map.dssid)===-1){var r=$ARR.findMulti(formMaps,"dssid",[map]);if(r.count>1){duplicateMaps.push({dssid:map.dssid,indices:r.indices});}}}valid=(duplicateMaps.length===0);this.setSubmitBtn(valid);},setSubmitBtn:function setSubmitBtn(enabled){var submitButton=this.btnHbox.submit;submitButton.set("enabled",enabled);}});}());