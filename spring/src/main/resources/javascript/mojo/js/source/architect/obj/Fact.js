(function(){mstrmojo.requiresCls("mstrmojo.Obj","mstrmojo.warehouse.EnumObjectTypes");var Enum_SM_CreateObject=1,Enum_SM_DeleteObject=2,Enum_SM_RenameObject=3,$M=mstrmojo,$H=$M.hash,$ENUM_OT=mstrmojo.warehouse.EnumObjectTypes,ENUM_OT_FACT=$ENUM_OT.FACT;function renameFact(fact,newName,callback){fact.model.submitRequest({success:function(){fact.name=newName;if(callback&&callback.success){callback.success();}}},{objectid:fact.id,objecttype:ENUM_OT_FACT,manipulationtype:Enum_SM_RenameObject,objectname:newName},"schemaManipulation");}function createFact(fact,prop){var callback=prop.callback;fact.model.submitRequest({success:function(res){var ele=res.mi["in"].oi[1]||res.mi["in"].oi;fact.id=ele.did;fact.name=ele.n;fact.tables={};if(callback&&callback.success){callback.success(fact);}}},{manipulationtype:Enum_SM_CreateObject,objecttype:ENUM_OT_FACT,objectname:prop.name,showWait:false},"schemaManipulation");}mstrmojo.architect.obj.Fact=mstrmojo.declare(mstrmojo.Obj,null,{scriptClass:"mstrmojo.architect.Fact",init:function init(props){this._super(props);var fact=this,callback=props.callback;if(props.isNew){createFact(fact,props);}else{this.tables={};if(callback&&callback.success){callback.success(this);}}},id:undefined,name:undefined,isNew:undefined,tables:undefined,sum:true,count:false,max:false,min:false,variance:false,average:false,rename:function rename(newName,callback){if(mstrApp.getRootController().validateName(ENUM_OT_FACT,newName,this.name)){renameFact(this,newName,callback);}},remove:function remove(callback){var fact=this,factId=fact.id;fact.model.submitRequest({success:function(){$H.forEach(fact.tables,function(table){table.removeFactInfo(false,factId,null);});if(callback&&callback.success){callback.success(fact.id);}}},{manipulationtype:Enum_SM_DeleteObject,objecttype:ENUM_OT_FACT,objectid:fact.id},"schemaManipulation");}});}());