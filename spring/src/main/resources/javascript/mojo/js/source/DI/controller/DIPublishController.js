(function(){mstrmojo.requiresCls("mstrmojo.string","mstrmojo.DI.DIConstants","mstrmojo.DI.DIHelpers");mstrmojo.requiresDescs(221,1442,10492,12584,12585,12586,12588,12589,12590,12647,13031,13061,13062,13063,13064,13065,13066,13067,13068,13069,13070,13071,13520,13774,14204,14302,14663);var constants=mstrmojo.DI.DIConstants,saveAsDialog,$ARR=mstrmojo.array,$FUNC=mstrmojo.func,$HASH=mstrmojo.hash,$STRING=mstrmojo.string,$DIHelpers=mstrmojo.DI.DIHelpers,MAX_POLL_TIMEOUT_RETRY=10,POLL_TIMEOUT_INTERVAL=60*1000;function sendToInbox(){var controller=mstrApp.getRootController();var callback={success:function(){mstrApp.redirectToPage(mstrmojo.DI.DIExitOptions.getRedirectParams(mstrmojo.DI.DIExitOptions.pageRedirect.historyList,null,controller.model.isDirectDataAccess));},failure:function(){controller.displayError(mstrmojo.desc(13774,"Your history list is full. Please delete a few messages and try again."),false);controller.model.getHistoryList().set("hasSentToHistoryList",false);}};var params={};if(controller.model.operationMode===constants.operationMode.create){params.name=controller.model.cubeName;}if(!controller.model.getHistoryList().hasSentToHistoryList){controller.model.getHistoryList().set("hasSentToHistoryList",true);controller.dataService.sendToHistoryList(callback,params);}}function openPublishStatusDialog(){var rootController=this,model=rootController.getModel(),allIgnored=true,tableIDs=model.getAllTableID(),source,config={model:this.model,zIndex:999};if(model.operationMode===constants.operationMode.edit&&model.isCubePublished&&model.rawDataExistsInAE){$ARR.forEach(tableIDs,function(id){source=model.getImportSource(id);if(source){allIgnored=allIgnored&&(source.executeAction===constants.tableStatsExecutionAction.reserved&&!source.forceRepublish&&!source.hasRefreshedData);}});if(allIgnored){config.simpleProgressMode=true;config.showTitle=false;}}return this.showDialog(constants.dialogType.publishStatusDialog,config);}function createOneTierDoc(){var controller=this;var model=controller.model;var params={isDirectDataAccess:model.isDirectDataAccess},callback={success:function(res){if(res.objectId){model.cubeID=res.objectId;}controller.wrapUpDataImport();},failure:function(res){mstrApp.hideProgress();controller.displayError(mstrmojo.desc(13061,"Error in creating the dataset."),false,res&&res.message);}};model.cubeName=getCubeName.call(controller,true);params.name=model.cubeName;this.dataService.createOneTierDoc(callback,params);}function showQuotaUsage(){var controller=mstrApp.getRootController();var param={op:constants.getCubeQuotaAndInfosOptions.GetCubeQuotaAndInfosQuotaOnly};var errorMsg=mstrmojo.desc(13410,"Unable to import your data since your remaining in-memory space of #### MB of the allocated @@@@ MB was deemed insufficient to store the result of the operation. Please try freeing some of the used in-memory space.");var callback={success:function(res){var limit=Math.round(res.cubes.cquota),usage=Math.round(res.cubes.cusage);var left=limit-usage;var errorText=errorMsg.replace("####",left.toString()).replace("@@@@",limit.toString());controller.displayError(errorText,false);},failure:function(){errorMsg=mstrmojo.desc(13031,"We could not import your data because there is not enough space left. Please consider removing some rows/columns and try again or contact your administrator.");controller.displayError(errorMsg,false);}};controller.dataService.getCubeQuota(callback,param);}function publishErrorHandler(res){var tableIDs;if(this.model.operationMode!==constants.operationMode.refresh){this.dialogController.close(constants.dialogType.publishStatusDialog);tableIDs=this.getModel().getAllTableID();if(tableIDs.length>0&&!mstrApp.isSingleTier){this.dataService.editEMMASourceTable(null,{did:this.getModel().getAllTableID()[0]});}}var errorCode=res.code&&parseInt(res.code,10),model=this.getModel(),source,closeOnOK=false,message=res.message,detailMsg;if(message){detailMsg=$STRING.encodeHtmlString(message,true,true);}if(errorCode===undefined||errorCode===null){errorCode=res.cubeStatus&&parseInt(res.cubeStatus,10);}if((errorCode===undefined||errorCode===null)&&res.getResponseHeader){errorCode=parseInt(res.getResponseHeader("X-MSTR-TaskErrorCode"),10);message=res.getResponseHeader("X-MSTR-TaskFailureMsg");detailMsg=$STRING.encodeHtmlString(message,true,true);}if(res.cubeStatus<0&&res.tables&&res.tables.length>0){message="<ul>";$ARR.forEach(res.tables,function(table){if(table.emsg){var id=table.tableid;source=id&&model.getImportSource(id);if(source){message+="<li>"+source.sourceInfo.name+"<br>"+table.emsg+"</li>";}}});message+="</ul>";detailMsg=message;}if(this.model.operationMode===constants.operationMode.refresh){closeOnOK=true;}$ARR.forEach(model.getAllTableID(),function(tableID){source=model.getImportSource(tableID);if(source){delete source.status;}});switch(errorCode){case constants.backendError.unexpectedDataType:var startPos=message.indexOf("#");var endPos=message.indexOf("#",startPos+1);var info=message.substring(startPos,endPos);startPos=info.indexOf("[");endPos=info.indexOf("]",startPos+1);info=info.substring(startPos+1,endPos);var content=[];content=info.split(",");var gridInfo=[];var length=content.length;var i,x;for(i=0;i<length;i++){x=content[i].split("=");gridInfo.push(x[1]);}var displayMessage=mstrmojo.desc(13063,"Error converting the data type of the cell in row ## and column @@ with the value **.").replace("##",gridInfo[0]).replace("@@",(gridInfo[1]+1)).replace("**",gridInfo[2]);this.displayError(displayMessage);break;case constants.backendError.cubeQuotaExceeded:case constants.backendError.notEnoughSpace:showQuotaUsage.call();break;case constants.backendError.noExternalSession:this.displayError(mstrmojo.desc(12585,"The external session has expired."),false);break;case constants.backendError.overwriteObject:this.displayError(mstrmojo.desc(12586,"You are trying to overwrite an object which is not allowed"),false);break;case constants.backendError.noPermission:this.displayError(mstrmojo.desc(12647,"You do not have the permission to modify this object"),false);break;case constants.backendError.invalidObjectName:this.displayError(mstrmojo.desc(12588,"The name of the cube being saved in invalid. Please give a valid name."),false);break;case constants.backendError.incrementalRefresh:this.displayError(mstrmojo.desc(12589,"Incremental refresh of cube failed because the set of attributes is not the same as before."),false);break;case constants.backendError.objectNameTooLong:this.displayError(mstrmojo.desc(12590,"Name of at least one column header exceeds the limit of 250 characters. Please shorten the column name and try again."),false);break;case constants.backendError.memoryGovernSizeExceeded:var limit="";if(message.indexOf("Max memory size limit: ")>-1){var pos1=message.indexOf("Max memory size limit: ")+23;var pos2=message.indexOf(".",pos1);limit="("+message.substring(pos1,pos2)+") ";}this.displayError(mstrmojo.desc(13064,"Memory consumption limit during data fetching ## is exceeded.").replace("##",limit));break;case constants.backendError.reportTimeout:this.displayError(mstrmojo.desc(13520,"The job execution time limit set in MicroStrategy Intelligence Server has been exceeded."));break;default:if(closeOnOK){var controller=this;this.displayError(mstrmojo.desc(13065,"Unable to publish the cube."),false,detailMsg,function(){controller.getDialogController().close(constants.dialogType.publishStatusDialog);});}else{this.displayError(mstrmojo.desc(13065,"Unable to publish the cube."),false,detailMsg);}return ;}}function getCubeName(forceGenerate){var model=this.model,tableNames=[];if(model.cubeName&&!forceGenerate){return model.cubeName;}$ARR.forEach(model.getAllTableID(),function(tableID){tableNames.push(model.getImportSource(tableID).sourceInfo.name||"");});return $DIHelpers.generateCubeName(tableNames);}function getUniqueName(folderContents,name){if(!folderContents){return name;}var i,isUnique=true,count=0,index;for(i=0;i<folderContents.length;i++){if(name===folderContents[i].n){isUnique=false;break;}}if(isUnique){return name;}name=name+"_"+count;count++;i++;while(i<folderContents.length&&name===folderContents[i].n){index=name.lastIndexOf("_");name=name.substring(0,index)+"_"+count;count++;i++;}return name;}function getExternalParametersForPublish(){var controller=mstrApp.getRootController();var model=controller.model;var extParams="<ts>";mstrmojo.hash.forEach(model.importSources,function(table){if(model.operationMode===constants.operationMode.edit){if(table.executeAction===constants.tableStatsExecutionAction.reserved){extParams+='<tb did="'+table.tableID+'" ac="4"/>';}else{extParams+='<tb did="'+table.tableID+'" ac="'+table.executeAction+'"/>';}}else{if(table.refreshType===constants.cubeRefreshType.preserve){extParams+='<tb did="'+table.tableID+'" ac="4"/>';}else{if(table.republishError){extParams+='<tb did="'+table.tableID+'" ac="4"/>';}else{extParams+='<tb did="'+table.tableID+'" ac="1"/>';}}}});extParams+="</ts>";return extParams;}function getMissingColumns(){var resultFlags=constants.requestFlag.mapping|constants.requestFlag.sourceInfo;var controller=this;var m=controller.model;var params={previewflag:resultFlags,poll:false};var callback={success:function(res){m.populateEMMA(res,resultFlags);var missingCol=m.getAllMissingColumns();if(missingCol&&missingCol.length>0){controller.showDialog(constants.dialogType.missingColumnsDialog,{mappings:missingCol});}else{controller.publishController.refreshCubeWithoutSave();}},failure:function(){mstrApp.hideProgress();}};this.dataService.getImportedData(callback,params);}function pollPublish(){var controller=this;var model=this.model;var operationMode=model.operationMode;var params={extParams:"<result_flags_3>2048</result_flags_3>",isAsync:true,shouldRemoveFromHL:(!model.isManagedCube&&!model.analysisID)};var retryCnt=0;var statusBox=openPublishStatusDialog.call(controller);var callback={success:function(res){var i,items=[],allComplete=true,pendingTablesRepublish=false,hasMissingColumns=false,hasError=false,table,name;if(res.tables){for(i=0;i<res.tables.length;i++){table=res.tables[i];if(model.importSources[table.tableid]){name=model.importSources[table.tableid].sourceInfo.name;if(table.status!=="3"&&table.status!=="4"&&table.status!=="6"){allComplete=false;}if(table.status==="4"||table.status==="6"){hasError=true;if(parseInt(table.errc,10)===constants.backendError.missingColumn){hasMissingColumns=true;}model.importSources[table.tableid].republishError={errorMsg:table.emsg,errorCode:table.errc};}items.push({n:name,complete:(table.status==="3"),errorMsg:table.emsg||"",errorCode:table.errc||""});}}if(res.cubeStatus===constants.backendError.dataDiscoveryError){if(allComplete===false){pendingTablesRepublish=true;}allComplete=true;}else{if(res.cubeStatus===constants.backendError.columnCountMatchError){allComplete=true;}else{if(res.cubeStatus!==1){allComplete=false;}}}if(res.cubeStatus<0){allComplete=true;hasError=true;}if(statusBox&&statusBox.model){mstrmojo.array.forEach(res.tables,function(value){var source=statusBox.model.importSources[value.tableid];if(source){source.status=value.status;source.errmsg=value.emsg||"";}});statusBox.model.raiseEvent({name:"PublishStatusUpdate",completed:allComplete,error:hasError});}}else{if(res.cubeStatus<0){allComplete=true;hasError=true;}if(statusBox&&statusBox.model&&res.cubeStatus===1){mstrmojo.hash.forEach(statusBox.model.importSources,function(source){if(source.status!==3||source.status!==4||source.status!==6){source.status=3;source.errmsg="";}});statusBox.model.raiseEvent({name:"PublishStatusUpdate",completed:allComplete,error:hasError});}}if(allComplete){if((operationMode===constants.operationMode.create||operationMode===constants.operationMode.edit)&&res.cubeStatus>=0){controller.wrapUpDataImport();}else{if(hasMissingColumns){getMissingColumns.call(controller);}else{if(res.cubeStatus===constants.backendError.dataDiscoveryError&&pendingTablesRepublish){res.code=res.cubeStatus;publishErrorHandler.call(controller,res);}else{if(res.cubeStatus<0){res.code=res.cubeStatus;publishErrorHandler.call(controller,res);}else{if(model.analysisID){controller.dataService.duplicateReportInstance({failure:function(){mstrApp.hideProgress();controller.displayError(mstrmojo.desc(13066,"Error in refreshing the dataset."),false);}},{messageID:model.analysisID,datasetID:model.cubeID,duplicateRIMsgID:controller.dataService.messageID});}else{if(mstrApp.isSingleTier){controller.dataService.duplicateReportInstance({failure:function(){mstrApp.hideProgress();controller.displayError(mstrmojo.desc(13066,"Error in refreshing the dataset."),false);}},{messageID:"",datasetID:model.cubeID,duplicateRIMsgID:controller.dataService.messageID},{showProgress:false});}}}}}}}else{window.setTimeout(function(){controller.dataService.pollEmmaStatus(callback,params);},500);}},failure:function(res){if(parseInt(res.code,10)===constants.backendError.requestTimeout&&retryCnt<MAX_POLL_TIMEOUT_RETRY){window.setTimeout(function(){controller.dataService.pollEmmaStatus(callback,params);},POLL_TIMEOUT_INTERVAL);retryCnt++;}else{publishErrorHandler.call(controller,res);}}};this.dataService.pollEmmaStatus(callback,params);}function saveTablesPosition(callback){var m=this.model,dataService=this.dataService,tableIDs=m.getAllTableID(),toSaveIDs=[],position,cnt=0,cb={complete:function(){cnt++;if(cnt>=toSaveIDs.length){if(callback&&callback.success){callback.success();}if(callback&&callback.complete){callback.complete();}}}};$ARR.forEach(tableIDs,function(id){position=m.getImportSource(id).tablePosition;if(position){if(position.hasOwnProperty("x")||position.hasOwnProperty("y")||position.hasOwnProperty("w")||position.hasOwnProperty("h")){toSaveIDs.push(id);}}});if(toSaveIDs.length===0){cb.complete();}$ARR.forEach(toSaveIDs,function(id){var pos=m.getImportSource(id).tablePosition,params={did:id};if(pos.hasOwnProperty("x")){params.fl=pos.x;}if(pos.hasOwnProperty("y")){params.ft=pos.y;}if(pos.hasOwnProperty("w")){params.fw=pos.w;}if(pos.hasOwnProperty("h")){params.fh=pos.h;}dataService.editEMMASourceTable(cb,params);});}function startSaveAndPublish(callback){var m=this.model,params={},tableIDs=m.getAllTableID(),config=null,source;if(m.isManagedCube||mstrApp.isSingleTier){m.cubeName=getCubeName.call(this,true);}if(m.isDirectDataAccess&&(m.isManagedCube||mstrApp.isSingleTier)){this.wrapUpDataImport();return ;}params.displayMode=12;params.saveAsFlags=0;params.extParams=getExternalParametersForPublish.call();params.saveAsFlags=constants.saveAsFlags.saveAsOverWrite;if(m.isDirectDataAccess){params.shouldRefresh=false;params.saveAsFlags=params.saveAsFlags|constants.saveAsFlags.saveAsDDA;config={showProgress:true,showProgressText:true,progressText:mstrmojo.desc(10492,"Saving...")};}else{params.saveAsFlags=params.saveAsFlags|constants.saveAsFlags.saveAsInMemory;}if(m.isManagedCube){params.shouldSave=false;}else{params.saveAsFlags|=constants.saveAsFlags.saveAsWithAnswers|constants.saveAsFlags.saveAsWithPrompts;}params.folderID=m.folderID;params.objName=m.cubeName;if(m.cubeDesc!==null&&m.cubeDesc!==undefined){params.objDesc=m.cubeDesc;}this.dataService.saveAndPublishEMMA(callback,params,null,config);$ARR.forEach(tableIDs,function(id){source=m.getImportSource(id);if(source){source.status="0";}});m.raiseEvent({name:"PublishStatusUpdate"});}function setExecuteFlag(statusBox,callback){var controller=this,m=controller.getModel(),tableIDs=m.getAllTableID(),operationMode=m.operationMode,cmds=[],cnt=0;var cb={success:function(){cnt++;if(cnt>=cmds.length){callback.success();}},failure:function(res){controller.displayError(mstrmojo.desc(13069,"Set refresh policy error."),false,res.message);statusBox.model.raiseEvent({name:"PublishStatusUpdate",hasError:true});}};$ARR.forEach(tableIDs,function(id){var source=m.getImportSource(id),cmd;if(!source){return ;}if(operationMode===constants.operationMode.edit){if(source.executeAction===constants.tableStatsExecutionAction.reserved){cmd={did:id,exef:constants.tableStatsExecutionAction.ignore};}else{cmd={did:id,exef:source.executeAction};}}else{if(source.refreshType===constants.cubeRefreshType.preserve){cmd={did:id,exef:constants.tableStatsExecutionAction.ignore};}else{if(source.republishError){cmd={did:id,exef:constants.tableStatsExecutionAction.ignore};}else{cmd={did:id,exef:constants.tableStatsExecutionAction.forceExecution};}}}cmds.push(cmd);});if(cmds.length>0){$ARR.forEach(cmds,function(value){controller.dataService.editEMMASourceTable(cb,value);});}else{callback.success();}}function startValidateSource(callback){var controller=this,model=controller.getModel(),operationMode=model.operationMode,params={},tableIds=[];var cb={success:function(res){var results=$DIHelpers.parseValidateSourceResults(res),allMatch=results.isValidate;var vts=res&&res.vts;$ARR.forEach(vts,function(table){if(table.dbRole){var source=model.getImportSource(table.tbid);source.dbRole=table.dbRole;}});if(allMatch){if(callback.success){callback.success(results);}}else{if(callback.failure){callback.failure(results);}}if(callback.complete){callback.complete();}},failure:function(res){controller.displayError(mstrmojo.desc(14302,"We encountered some errors while republishing the cube."),false,res.message);controller.cancelRepublishError({errorTableTbids:tableIds});}};$ARR.forEach(model.getAllTableID(),function(tableId){var source=model.getImportSource(tableId);if(operationMode===constants.operationMode.refresh){if(source.refreshType!==constants.cubeRefreshType.preserve){tableIds.push(tableId);}}if(operationMode===constants.operationMode.edit){if(source.forceRepublish&&!source.hasRefreshedData){tableIds.push(tableId);}}});if(tableIds.length>0){params.tbid=tableIds.join();controller.dataService.validateSource(cb,params);}else{if(callback.success){callback.success();}if(callback.complete){callback.complete();}}}function checkForUploadAndRefreshPolicy(publishCallback){var controller=this,model=this.model,operationMode=model.operationMode,cubeID=model.cubeID,statusBox=this.showDialog(constants.dialogType.publishStatusDialog,{model:this.model,zIndex:999});var changed=[],hasTableToPublish=false,allTablesSelected=true,hasBinaryNotUpload=false;var checkValidateCallback={success:function(results){setExecuteFlag.call(controller,statusBox,{success:function(){if(operationMode===constants.operationMode.refresh&&results&&results.isValidate&&changed.length===0&&model.isDirectDataAccess===model.origIsDirectDataAccess){controller.getPublishController().refreshCubeWithoutSave();}else{startSaveAndPublish.call(controller,publishCallback);}}});},failure:function(results){controller.showDialog(constants.dialogType.missingColumnsDialog,{results:results});}};if(operationMode===constants.operationMode.edit){hasTableToPublish=true;allTablesSelected=true;}mstrmojo.hash.forEach(model.importSources,function(value){if(operationMode===constants.operationMode.refresh){value.published=false;if(!value.checked){if(value.refreshType!==constants.cubeRefreshType.preserve){value.refreshType=constants.cubeRefreshType.preserve;}allTablesSelected=false;}else{if(value.checked){value.published=true;if(value.refreshType===constants.cubeRefreshType.preserve){if(value.origRefreshType!==constants.cubeRefreshType.preserve){value.refreshType=value.origRefreshType;}else{value.refreshType=constants.cubeRefreshType.replaceTable;}}hasTableToPublish=true;if(value.xdaType===constants.xdaType.excel||value.xdaType===constants.xdaType.text){if(value.sourceInfo.url===""&&!value.hasSelectFile){allTablesSelected=false;value.refreshType=constants.cubeRefreshType.preserve;hasBinaryNotUpload=true;}}}}if(value.refreshType!==value.origRefreshType){changed.push({did:value.tableID,tp:value.refreshType});}}if(operationMode===constants.operationMode.edit){if(!controller.model.isCubePublished||!controller.model.rawDataExistsInAE){if(value.xdaType===constants.xdaType.excel||value.xdaType===constants.xdaType.text){if(value.sourceInfo.url===""&&!value.hasSelectFile&&!value.hasRefreshedData){hasBinaryNotUpload=true;}}if(value.tableState!==constants.tableStates.newly){changed.push({did:value.tableID,tp:constants.cubeRefreshType.replaceTable});value.executeAction=constants.tableStatsExecutionAction.forceExecution;}}else{if(value.forceRepublish){if(value.schemaChanged){value.refreshType=constants.cubeRefreshType.replaceTable;}if(value.refreshType!==value.origRefreshType){changed.push({did:value.tableID,tp:value.refreshType});}if(!value.hasRefreshedData){if(value.xdaType===constants.xdaType.excel||value.xdaType===constants.xdaType.text){if(value.sourceInfo.url===""&&!value.hasSelectFile){allTablesSelected=false;value.refreshType=constants.cubeRefreshType.preserve;hasBinaryNotUpload=true;}}}}else{if(value.tableState!==constants.tableStates.newly){if(value.hasRefreshedData){if(value.refreshType!==value.origRefreshType){changed.push({did:value.tableID,tp:value.refreshType});value.executeAction=constants.tableStatsExecutionAction.forceExecution;}}if(value.executeAction===constants.tableStatsExecutionAction.forceExecution&&!value.hasRefreshedData){value.refreshType=constants.cubeRefreshType.replaceTable;if(value.refreshType!==value.origRefreshType){changed.push({did:value.tableID,tp:constants.cubeRefreshType.replaceTable});}if(value.xdaType===constants.xdaType.excel||value.xdaType===constants.xdaType.text){if(value.sourceInfo.url===""&&!value.hasSelectFile){allTablesSelected=false;value.refreshType=constants.cubeRefreshType.preserve;hasBinaryNotUpload=true;}}}}}}}});if(hasTableToPublish===false){controller.displayError(mstrmojo.desc(13067,"Please select at least one table to publish."),false);statusBox.model.raiseEvent({name:"PublishStatusUpdate",reset:true});return ;}if(hasBinaryNotUpload){controller.displayError(mstrmojo.desc(13068,"You have not uploaded the files for some of the tables. We could not find the data for them. Please upload them before you proceed."),false);statusBox.model.raiseEvent({name:"PublishStatusUpdate",reset:true});return ;}if(operationMode===constants.operationMode.refresh){if(!controller.model.isCubePublished||!controller.model.rawDataExistsInAE){if(!allTablesSelected){controller.displayError(mstrmojo.desc(13068,"You have not uploaded the files for some of the tables. We could not find the data for them. Please upload them before you proceed."),false);statusBox.model.raiseEvent({name:"PublishStatusUpdate",reset:true});return ;}}}statusBox.model.raiseEvent({name:"PublishStatusUpdate",completed:false});var needUpload=[];mstrmojo.hash.forEach(model.importSources,function(value){if(value.checked&&value.hasSelectFile&&operationMode===constants.operationMode.refresh){needUpload.push(value.tableID);}if(value.hasSelectFile&&operationMode===constants.operationMode.edit){needUpload.push(value.tableID);}});function uploadOneTierFile(){var cnt=-1,table,params;controller=mstrApp.getRootController();var callback={success:function(){cnt++;if(cnt>=needUpload.length){mstrApp.hideProgress();statusBox.toggleEnable(false);if(operationMode===constants.operationMode.refresh||operationMode===constants.operationMode.edit){startValidateSource.call(controller,checkValidateCallback);}else{checkValidateCallback.success();}}else{table=controller.model.importSources[needUpload[cnt]];params={type:table.subtype,tableID:table.tableID,newRI:false,msgid:mstrApp.getRootController().dataService.messageID};if(table.subtype===constants.sourceSubtype.clipboard){params.datasource=table.fileUploader.ws.getData();if(!params.datasource){params.datasource=table.fileUploader._data;}params.dict=constants.backendSourceSubtype.clipboard;}else{params.datasource=table.files[0];params.dict=constants.backendSourceSubtype.localFile;}params.operationMode=controller.model.operationMode;controller.dataService.oneTierImportFile(callback,params);}},failure:function(res){controller.displayError(mstrmojo.desc(14663,"Unable to upload the files selected.")+res.message);statusBox.model.raiseEvent({name:"PublishStatusUpdate",hasError:true});controller.cancelRepublishError({errorTableTbids:[needUpload[cnt]]});},complete:function(){mstrApp.hideProgress();}};if(needUpload.length>0){mstrApp.showProgress();}callback.success();}function uploadBinary(){var cnt=0,value,fileUploader,source,i,extValid,extension,params,name,msg,detailErrMsg,exceedSizeTables;var callback={success:function(){cnt++;if(cnt>=needUpload.length){mstrApp.hideProgress();statusBox.toggleEnable(false);if(operationMode===constants.operationMode.refresh||operationMode===constants.operationMode.edit){startValidateSource.call(controller,checkValidateCallback);}else{checkValidateCallback.success();}}else{value=needUpload[cnt];fileUploader=statusBox.getFileUploader(value);params={msgID:controller.dataService.messageID,tableID:value};if(cubeID){params.reportid=cubeID;}controller.dataService.importFile(fileUploader,callback,params);}},failure:function(res){var fileName=source&&source.dbTableName;var detailedErr=controller.getImportController().handleImportError(res,fileName);mstrApp.getRootController().displayError(mstrmojo.desc(12771,"Error in importing the file. Please check the file being imported"),false,detailedErr);controller.getImportController().handleImportError(res);statusBox.model.raiseEvent({name:"PublishStatusUpdate",hasError:true});controller.cancelRepublishError({errorTableTbids:[needUpload[cnt]]});},complete:function(){mstrApp.hideProgress();}};if(needUpload.length>0){extValid=true;exceedSizeTables=[];detailErrMsg=["<ul>"];for(i=0;i<needUpload.length;i++){value=needUpload[i];fileUploader=statusBox.getFileUploader(value);source=model.getImportSource(value);name=fileUploader.getFileName?fileUploader.getFileName():source.name;if(fileUploader.getFileSize){if(fileUploader.getFileSize()>(mstrApp.diParams.UploadSizeLimit*1024*1024)){extension=fileUploader.value.substring(fileUploader.value.lastIndexOf(".")+1);exceedSizeTables.push(source.tableID);msg=mstrmojo.desc(12738,"The maximum file size for #### files is @@@@ MB. ").replace("####",extension).replace("@@@@",mstrApp.diParams.UploadSizeLimit);detailErrMsg.push("<li>");detailErrMsg.push(name+"<br>"+msg);detailErrMsg.push("</li>");}else{if(fileUploader.getFileSize()<=0){exceedSizeTables.push(source.tableID);msg=mstrmojo.desc(12510,"The import process cannot proceed with an empty file.");detailErrMsg.push("<li>");detailErrMsg.push(name+"<br>"+msg);detailErrMsg.push("</li>");}}}}detailErrMsg.push("</ul>");if(exceedSizeTables.length>0){controller.displayError(mstrmojo.desc(12900,"Error importing following files. Please check the files or delete them."),false,detailErrMsg.join(""));controller.cancelRepublishError({errorTableTbids:exceedSizeTables});return ;}mstrApp.showProgress();value=needUpload[0];fileUploader=statusBox.getFileUploader(value);params={msgID:controller.dataService.messageID,tableID:value};if(cubeID){params.reportid=cubeID;}controller.dataService.importFile(fileUploader,callback,params);}else{callback.success();}}var cnt=0;var callback={success:function(){cnt++;if(cnt>=changed.length){if(mstrApp.isSingleTier){uploadOneTierFile();}else{uploadBinary();}}},failure:function(res){controller.displayError(mstrmojo.desc(13069,"Set refresh policy error."),false,res.message);statusBox.model.raiseEvent({name:"PublishStatusUpdate",hasError:true});}};if(changed.length>0){mstrmojo.array.forEach(changed,function(value){controller.dataService.editEMMASourceTable(callback,value);});}else{callback.success();}}function showSaveAsDialog(callback,saveCubeParams){var m=this.model;var params={};params.displayMode=12;params.extParams=getExternalParametersForPublish.call();if(m.isDirectDataAccess){params.shouldRefresh=false;params.saveAsFlags=constants.saveAsFlags.saveAsDDA|constants.saveAsFlags.saveAsOverWrite;}else{params.saveAsFlags=constants.saveAsFlags.saveAsInMemory|constants.saveAsFlags.saveAsOverWrite;}if(!saveCubeParams){saveAsDialog=this.showDialog(constants.dialogType.saveAsDialog,{saveAsCallback:function(){return callback;},name:m.cubeName,desc:"",saveParams:{},retainPrevFolder:true,rootFolderID:mstrApp.cubeSaveFolderId});this.dataService.saveAndPublishEMMA(callback,params,saveAsDialog);}else{params=$HASH.copy({taskId:"saveAndPublishCube",msgID:this.dataService.messageID},params);params=$HASH.copy(saveCubeParams,params);delete params.objPath;this.dataService.saveAndPublishEMMA(callback,params,null,{showProgress:m.isDirectDataAccess});var i,tables=m.importSources;for(i in tables){tables[i].status="0";}m.cubeName=saveCubeParams.objName||"";m.raiseEvent({name:"PublishStatusUpdate"});if(!m.isDirectDataAccess){this.showDialog(constants.dialogType.publishStatusDialog,{model:m,zIndex:999});}}}function fetchFolderContents(publishCallback){var controller=this;var m=this.model;var name=getCubeName.call(controller);var params={folderID:m.folderID,searchPattern:name};var callback={success:function(res){m.cubeName=getUniqueName(res.items,name);if(m.isManagedCube===false){showSaveAsDialog.call(controller,publishCallback);}else{checkForUploadAndRefreshPolicy.call(controller,publishCallback);}},failure:function(){controller.displayError(mstrmojo.desc(13070,"Unable to fetch the content of cube folder."),false);}};this.dataService.fetchFolderContents(callback,params);}function removeEmptyTables(callback){var controller=this,m=this.model,dids=m.getAllTableID(),toRemovedDids=[],source,maps;var cb={success:function(){mstrmojo.array.forEach(toRemovedDids,function(tableID){controller.model.resetImportSource(tableID);controller.navigationController.deleteRoute(tableID);});}};mstrmojo.array.forEach(dids,function(tableID){source=m.getImportSource(tableID);if(source){maps=source.getCurrentMappings(function(map){return map.selected;});if(!maps||maps.length<=0){toRemovedDids.push(tableID);}}});if(toRemovedDids.length){var msg=mstrmojo.desc(14204,"Do you want to continue with empty tables? Continue will remove these empty tables:")+"<br><ul>";$ARR.forEach(toRemovedDids,function(id){msg+="<li>"+mstrmojo.string.encodeHtmlString(m.getImportSource(id).sourceInfo.name)+"</li>";});msg+="</ul>";mstrmojo.confirm(msg,{confirmBtn:{fn:function(){controller.dataService.removeEMMASourceTable(mstrmojo.func.wrapMethods(cb,callback),{did:toRemovedDids.join()});return true;}},cancelBtn:{fn:function(){return true;}}},{zIndex:controller.getDialogController().getNextZIndex()});}else{if(callback.success){callback.success();}if(callback.complete){callback.complete();}}}var saveAndPublishCallback={success:function(res){var controller=mstrApp.getRootController(),model=controller.getModel(),saveCubeParams=mstrApp.saveCubeParams;if(res.objectId){model.cubeID=res.objectId;}if(saveCubeParams){model.path=saveCubeParams.objPath;delete mstrApp.saveCubeParams;}else{if(saveAsDialog){model.path=saveAsDialog.getObjectPath();}}if(model.isDirectDataAccess){controller.wrapUpDataImport();}else{pollPublish.call(controller);}},failure:function(res){publishErrorHandler.call(mstrApp.getRootController(),res);}};function doSave(callback){var controller=this,model=controller.getModel(),operationMode=model.operationMode,cfg,dialog,savedAsManaged=false,params={shouldRefresh:false,displayMode:12,saveAsFlags:constants.saveAsFlags.saveAsOverWrite},cb={success:function(res){model.set("isManagedCube",savedAsManaged);controller.rootView.showFooter({managedCheckbox:{enabled:false}});if(res&&res.objectId){model.cubeID=res.objectId;}if(dialog){model.path=dialog.getObjectPath();model.folderID=dialog.folderID;model.cubeName=dialog.name||"";model.cubeDesc=dialog.desc||"";}}};function doContinueSave(){if(model.isManagedCube){return ;}if(model.isDirectDataAccess){params.saveAsFlags|=constants.saveAsFlags.saveAsDDA;}else{params.saveAsFlags|=constants.saveAsFlags.saveAsInMemory;}controller.dataService.saveAndPublishEMMA($FUNC.wrapMethods(cb,callback,{}),params,null,{showProgress:true,showProgressText:true,progressText:mstrmojo.desc(10492,"Saving...")});}function continueSave(){controller.dataService.clearRelationship({success:function(){doContinueSave();},failure:function(){doContinueSave();}});}if(model.cubeID&&model.cubeName&&!(model.isManagedCube&&!model.cubePersisted)&&!(!model.folderID&&operationMode===constants.operationMode.create)){if(!model.folderID&&model.cubeID){controller.dataService.getObjectFolder({success:function(res){if(res&&res.items&&res.items.length===1){model.folderID=res.items[0].fid;if(!model.isManagedCube&&!model.path){controller.dataService.fetchFolderContents({success:function(res){var sharedFolderId="",myReportsId="";if(res&&res.sc&&res.sc.length>1){sharedFolderId=res.sc[0].did;myReportsId=res.sc[1].did;}controller.dataService.getObjectFolder({success:function(res){if(res&&res.items&&res.items.length===1){model.path=res.items[0].path;params.folderID=model.folderID;params.objName=model.cubeName;if(model.cubeDesc!==null&&model.cubeDesc!==undefined){params.objDesc=model.cubeDesc;}continueSave();}},failure:function(res){controller.displayError(mstrmojo.desc(13071,"Error in saving the cube."),false,res.message);}},{dids:model.cubeID,types:3,sharedFolderId:sharedFolderId,myReportsId:myReportsId});},failure:function(res){controller.displayError(mstrmojo.desc(13071,"Error in saving the cube."),false,res.message);}},{includeAncestorInfo:true,includeObjectDesc:false,folderLinksContextId:1,objectType:8});}else{params.folderID=model.folderID;params.objName=model.cubeName;if(model.cubeDesc!==null&&model.cubeDesc!==undefined){params.objDesc=model.cubeDesc;}continueSave();}}},failure:function(res){controller.displayError(mstrmojo.desc(13071,"Error in saving the cube."),false,res.message);}},{dids:model.cubeID,types:3});}else{if(!model.isManagedCube&&!model.path&&model.cubeID&&model.folderID){controller.dataService.fetchFolderContents({success:function(res){var sharedFolderId="",myReportsId="";if(res&&res.sc&&res.sc.length>1){sharedFolderId=res.sc[0].did;myReportsId=res.sc[1].did;}controller.dataService.getObjectFolder({success:function(res){if(res&&res.items&&res.items.length===1){model.path=res.items[0].path;params.folderID=model.folderID;params.objName=model.cubeName;if(model.cubeDesc!==null&&model.cubeDesc!==undefined){params.objDesc=model.cubeDesc;}continueSave();}},failure:function(res){controller.displayError(mstrmojo.desc(13071,"Error in saving the cube."),false,res.message);}},{dids:model.cubeID,types:3,sharedFolderId:sharedFolderId,myReportsId:myReportsId});},failure:function(res){controller.displayError(mstrmojo.desc(13071,"Error in saving the cube."),false,res.message);}},{includeAncestorInfo:true,includeObjectDesc:false,folderLinksContextId:1,objectType:8});}else{params.folderID=model.folderID;params.objName=model.cubeName;if(model.cubeDesc!==null&&model.cubeDesc!==undefined){params.objDesc=model.cubeDesc;}continueSave();}}}else{cfg={saveAsCallback:function(){return callback;},saveCube:function(){params.folderID=this.folderID;params.objDesc=this.desc||"";params.objName=this.name||"";continueSave();this.close();},name:getCubeName.call(controller),desc:"",saveParams:params,retainPrevFolder:true,rootFolderID:mstrApp.cubeSaveFolderId};dialog=controller.showDialog(constants.dialogType.saveAsDialog,cfg);}}mstrmojo.DI.controller.DIPublishController=mstrmojo.declare(mstrmojo.Obj,null,{hasPublishStarted:false,handleMissingColumns:function handleMissingColumns(skipTables){var controller=mstrApp.getRootController();var me=this;var model=controller.model;var params={skipTables:skipTables};var tables=[],allColumnMissingTables=[],cnt=0;mstrmojo.hash.forEach(model.importSources,function(table){if(table.getMissingColumns().length>0){if(!table.areAllColumnsMissing()){tables.push(table.tableID);}else{allColumnMissingTables.push(table.tableID);}}});params.tableIds=tables;var callback={success:function(){me.refreshCubeWithoutSave();},failure:function(res){publishErrorHandler.call(controller,res);}};var cb={success:function(){cnt++;if(cnt>=allColumnMissingTables.length){if(tables.length>0){controller.dataService.handleMissingColumns(callback,params);}else{me.refreshCubeWithoutSave();}}}};if(allColumnMissingTables.length>0){$ARR.forEach(allColumnMissingTables,function(table){model.getImportSource(table).refreshType=constants.cubeRefreshType.preserve;controller.dataService.editEMMASourceTable(cb,{did:table,tp:constants.cubeRefreshType.preserve});});}else{if(tables.length>0){controller.dataService.handleMissingColumns(callback,params);}else{me.refreshCubeWithoutSave();}}},saveAndPublish:function saveAndPublish(){var controller=mstrApp.getRootController(),model=controller.model,isDDA=model.isDirectDataAccess,origIsDDA=model.origIsDirectDataAccess,canSupDDA,ddaController=controller.getDDAController();this.hasPublishStarted=true;if(model.operationMode===constants.operationMode.refresh){model.set("origIsDirectDataAccess",model.isDirectDataAccess);}if(ddaController.shouldSupportDDA()){ddaController.confirmDDA=false;model.set("isDirectDataAccess",true);}else{if(model.operationMode===constants.operationMode.refresh){model.set("isDirectDataAccess",false);}}if(ddaController.confirmDDA&&model.operationMode!==constants.operationMode.refresh){canSupDDA=ddaController.canSupportDDA();if(!origIsDDA&&canSupDDA){var config={selectedIndex:isDDA?0:1};controller.showDialog(constants.dialogType.ddaConfirmDialog,config);return ;}if(isDDA&&!canSupDDA){model.set("isDirectDataAccess",false);}}this.saveAndPublishNoConfirm();},saveAndPublishNoConfirm:function saveAndPublishNoConfirm(){var controller=mstrApp.getRootController(),model=controller.model,request=constants.requestFlag.sourceInfo|constants.requestFlag.mapping,browsetype=constants.browseFlag.dataPreview|constants.browseFlag.publish,dialog;var continuePublish=function continuePublish(){if(model.operationMode===constants.operationMode.edit){if(model.isDirectDataAccess){startSaveAndPublish.call(controller,saveAndPublishCallback);}else{controller.dataService.getImportedData({success:function(res){model.populateEMMA(res,request,null,true);dialog=openPublishStatusDialog.call(controller);if(dialog.simpleProgressMode){setExecuteFlag.call(controller,dialog,{success:function(){startSaveAndPublish.call(controller,saveAndPublishCallback);}});}else{if(dialog.checkCanRefresh()&&!dialog.checkCanChange()){dialog.okButton.onclick();}}},failure:function(res){controller.displayError(mstrmojo.desc(12624,"Error fetching information about the imported data. Please check the data being imported."),false,res.message);}},{previewflag:request,browsetype:browsetype});}}else{checkForUploadAndRefreshPolicy.call(controller,saveAndPublishCallback);}};function continueSavePublish(){if(mstrApp.isSingleTier){if(model.operationMode===constants.operationMode.create){createOneTierDoc.call(controller);}else{continuePublish();}return ;}if(model.folderID&&model.operationMode===constants.operationMode.create&&!model.cubeID){fetchFolderContents.call(controller,saveAndPublishCallback);}else{if(model.operationMode===constants.operationMode.create){if(model.isManagedCube){model.cubeName=getCubeName.call(controller,true);if(!model.isDirectDataAccess){openPublishStatusDialog.call(controller);}startSaveAndPublish.call(controller,saveAndPublishCallback);controller.enableFinishButton(false);}else{if(mstrApp.saveCubeParams){showSaveAsDialog.call(controller,saveAndPublishCallback,mstrApp.saveCubeParams);}else{if(model.cubeID&&model.cubeName&&model.folderID){startSaveAndPublish.call(controller,saveAndPublishCallback);}else{model.cubeName=getCubeName.call(controller);showSaveAsDialog.call(controller,saveAndPublishCallback);}}}}else{if((!model.isManagedCube||(model.isManagedCube&&model.cubePersisted))&&!model.folderID&&model.cubeID){controller.dataService.getObjectFolder({success:function(res){if(res&&res.items&&res.items.length===1){model.folderID=res.items[0].fid;if(!model.isManagedCube&&!model.path){controller.dataService.fetchFolderContents({success:function(res){var sharedFolderId="",myReportsId="";if(res&&res.sc&&res.sc.length>1){sharedFolderId=res.sc[0].did;myReportsId=res.sc[1].did;}controller.dataService.getObjectFolder({success:function(res){if(res&&res.items&&res.items.length===1){model.path=res.items[0].path;continuePublish();}},failure:function(res){controller.displayError(mstrmojo.desc(13071,"Error in saving the cube."),false,res.message);}},{dids:model.cubeID,types:3,sharedFolderId:sharedFolderId,myReportsId:myReportsId});},failure:function(res){controller.displayError(mstrmojo.desc(13071,"Error in saving the cube."),false,res.message);}},{includeAncestorInfo:true,includeObjectDesc:false,folderLinksContextId:1,objectType:8});}else{continuePublish();}}},failure:function(res){controller.displayError(mstrmojo.desc(13071,"Error in saving the cube."),false,res.message);}},{dids:model.cubeID,types:3});}else{if(!model.isManagedCube&&!model.path&&model.cubeID&&model.folderID){controller.dataService.fetchFolderContents({success:function(res){var sharedFolderId="",myReportsId="";if(res&&res.sc&&res.sc.length>1){sharedFolderId=res.sc[0].did;myReportsId=res.sc[1].did;}controller.dataService.getObjectFolder({success:function(res){if(res&&res.items&&res.items.length===1){model.path=res.items[0].path;continuePublish();}},failure:function(res){controller.displayError(mstrmojo.desc(13071,"Error in saving the cube."),false,res.message);}},{dids:model.cubeID,types:3,sharedFolderId:sharedFolderId,myReportsId:myReportsId});},failure:function(res){controller.displayError(mstrmojo.desc(13071,"Error in saving the cube."),false,res.message);}},{includeAncestorInfo:true,includeObjectDesc:false,folderLinksContextId:1,objectType:8});}else{continuePublish();}}}}}removeEmptyTables.call(controller,{success:function(){saveTablesPosition.call(controller,{success:function(){var callback={success:function(){if(model.operationMode!==constants.operationMode.refresh){controller.dataService.clearRelationship({success:function(){continueSavePublish();},failure:function(){continueSavePublish();}});}else{continueSavePublish();}},failure:function(res){controller.displayError(mstrmojo.desc(13071,"Error in saving the cube."),false,res.message);}};controller.dataService.toggleDatasetServeMode(callback,{serveMode:model.isDirectDataAccess?constants.datasetServeMode.dda:constants.datasetServeMode.inMemory});}});}});},save:function(){var rootController=mstrApp.getRootController();var addSaveVisual={success:function(){rootController.showSaveVisual();}};var callback={success:function(){var flags=constants.requestFlag.mapping|constants.requestFlag.sourceInfo|constants.requestFlag.relationship;rootController.model.set("isCubeSaved",true);rootController.getImportedDataEMMA(constants.actions.none,flags,undefined,undefined,undefined,undefined,addSaveVisual);},failure:function(res){rootController.displayError(mstrmojo.desc(13071,"Error in saving the cube."),false,res&&res.message);}};removeEmptyTables.call(rootController,{success:function(){saveTablesPosition.call(rootController,{success:function(){doSave.call(rootController,callback);}});}});},startSaveAndPublish:function(){this.hasPublishStarted=true;checkForUploadAndRefreshPolicy.call(mstrApp.getRootController(),saveAndPublishCallback);},refreshCubeWithoutSave:function refreshCubeWithoutSave(){var me=mstrApp.getRootController();var m=me.model;var params={objName:m.cubeName,shouldSave:false,extParams:getExternalParametersForPublish.call()};var callback={success:function(){pollPublish.call(me);},failure:function(res){publishErrorHandler.call(me,res);}};me.dataService.saveAndPublishEMMA(callback,params);},handleRepublishError:function(validateResults){var controller=mstrApp.getRootController(),model=controller.getModel(),changed=[],missingTables=validateResults.missingTableTbids,missingColumnsTables=validateResults.missingColumnTbids;var callback={success:function(){startSaveAndPublish.call(controller,saveAndPublishCallback);},failure:function(res){controller.displayError(mstrmojo.desc(13069,"Set refresh policy error."),false,res.message);}};$ARR.forEach(missingColumnsTables,function(tbid){var source=model.getImportSource(tbid);source.origRefreshType=source.refreshType;source.set("refreshType",constants.cubeRefreshType.replaceTable);if(source.refreshType!==source.origRefreshType){changed.push({did:source.tableID,tp:source.refreshType});}});$ARR.forEach(missingTables,function(tbid){var source=model.getImportSource(tbid);source.origRefreshType=source.refreshType;source.set("checked",false);source.set("refreshType",constants.cubeRefreshType.preserve);if(source.refreshType!==source.origRefreshType){changed.push({did:source.tableID,tp:source.refreshType});}});if(changed.length>0){$ARR.forEach(changed,function(value){controller.dataService.editEMMASourceTable(callback,value);});}else{callback.success();}},cancelRepublishError:function(validateResults){var controller=mstrApp.getRootController(),model=controller.getModel(),missingTables=validateResults.missingTableTbids,missingColumnsTables=validateResults.missingColumnTbids,mismatchedDatatypesTables=validateResults.mismatchedDatatypeTbids,generalErrorTables=validateResults.errorTableTbids;this.hasPublishStarted=false;model.getHistoryList().detachEventListener("canSendToHistoryListChange",this.id,"sendToHistoryList");model.getHistoryList().set("canSendToHistoryList",false);$ARR.forEach(missingColumnsTables,function(tbid){var source=model.getImportSource(tbid);source.set("hasSelectFile",false);});$ARR.forEach(mismatchedDatatypesTables,function(tbid){var source=model.getImportSource(tbid);source.set("hasSelectFile",false);});$ARR.forEach(missingTables,function(tbid){var source=model.getImportSource(tbid);source.set("hasSelectFile",false);});$ARR.forEach(generalErrorTables,function(tbid){var source=model.getImportSource(tbid);source.set("hasSelectFile",false);});model.raiseEvent({name:"PublishStatusUpdate",reset:true,errors:validateResults.errorTableErrCode});},sendToHistoryList:function sendToHistoryList(){var controller=mstrApp.getRootController();var model=controller.model;if(model.getHistoryList().canSendToHistoryList){sendToInbox.call();}else{if(this.hasPublishStarted===false){model.getHistoryList().attachEventListener("canSendToHistoryListChange",this.id,"sendToHistoryList");if(model.operationMode===constants.operationMode.refresh){this.saveAndPublish();}if(model.operationMode===constants.operationMode.edit){this.startSaveAndPublish();}}else{model.getHistoryList().attachEventListener("canSendToHistoryListChange",this.id,"sendToHistoryList");}}}});}());