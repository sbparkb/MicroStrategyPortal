(function(){mstrmojo.requiresCls("mstrmojo.Container","mstrmojo.Button","mstrmojo.MenuButton","mstrmojo.Label","mstrmojo.Image","mstrmojo.CheckBox","mstrmojo.ui.Checkbox");mstrmojo.requiresDescs(172,212,373,1059,1279,1302,2140,2400,3345,8132,9115,10236,12387,12693,12694,12695,13195,13587,13852,14417,14195,14458,14597,14598);var KEY_ENTER=13,KEY_TAB=9,$CSS=mstrmojo.css,$DOM=mstrmojo.dom,constants=mstrmojo.DI.DIConstants;var buttonStatus={UNVISIBLE:1,UNENABLED:2,ENABLED:3};function display(control,config){if(config){if(config.hasOwnProperty("visible")){control.set("visible",config.visible);}if(config.hasOwnProperty("enabled")){control.set("enabled",config.enabled);}if(config.hasOwnProperty("text")){control.set("text",config.text);}}}mstrmojo.DI.DIFooter=mstrmojo.declare(mstrmojo.Container,null,{scriptClass:"mstrmojo.DI.DIFooter",markupString:'<div id="{@id}" class="{@cssClass}" tabIndex="0"><div class="footer-buttons back"></div><div class="footer-buttons"></div><div class="footer-buttons"></div><div class="footer-buttons"></div><div class="footer-managed-checkbox"></div><div class="footer-managed-label"></div><div class="footer-dda-checkbox"></div><div class="footer-dda-label"></div><div class="footer-buttons"></div><div class="cube-quota"></div></div>',markupSlots:{containerNode:function(){return this.domNode;},backNode:function(){return this.domNode.children[0];},cancelNode:function(){return this.domNode.children[1];},saveNode:function(){return this.domNode.children[2];},nextNode:function(){return this.domNode.children[3];},managedNode:function(){return this.domNode.children[4];},managedLabelNode:function(){return this.domNode.children[5];},ddaNode:function(){return this.domNode.children[6];},ddaLabelNode:function(){return this.domNode.children[7];},finishNode:function(){return this.domNode.children[8];},cubeQuotaNode:function(){return this.domNode.children[9];}},markupMethods:{onvisibleChange:function(){this.domNode.style.display=this.visible?"block":"none";}},init:function init(props){var rtn;if(this._super){rtn=this._super(props);}this.initButtons();return rtn;},controlButtons:[],hotButtonIndex:-1,toggleButtonHOTStyle:function toggleButtonHOTStyle(index,flag){$CSS.toggleClass(this.controlButtons[index].obj.domNode,["select"],flag);},initButtons:function initButtons(){this.controlButtons=[];this.controlButtons.push({obj:this.back,status:buttonStatus.UNVISIBLE});this.controlButtons.push({obj:this.finish,status:buttonStatus.UNVISIBLE});this.controlButtons.push({obj:this.next,status:buttonStatus.UNVISIBLE});this.controlButtons.push({obj:this.save,status:buttonStatus.UNVISIBLE});this.controlButtons.push({obj:this.cancel,status:buttonStatus.UNVISIBLE});},refreshControlButtonsStatus:function refreshControlButtonsStatus(){mstrmojo.array.forEach(this.controlButtons,function(button){var obj=button.obj;if(obj&&obj.visible&&obj.visible===true){if(obj.enabled&&obj.enabled===true){button.status=buttonStatus.ENABLED;}else{button.status=buttonStatus.UNENABLED;}}else{button.status=buttonStatus.UNVISIBLE;}});},selectNextButton:function selectNextButton(){var new_index=(this.hotButtonIndex+1)%this.controlButtons.length;var end_index=this.hotButtonIndex;while(new_index!==end_index&&this.controlButtons[new_index].status!==buttonStatus.ENABLED){new_index=(new_index+1)%this.controlButtons.length;}if(new_index!==end_index){this.toggleButtonHOTStyle(this.hotButtonIndex,false);this.hotButtonIndex=new_index;this.toggleButtonHOTStyle(this.hotButtonIndex,true);}},initSelectedButton:function initSelectedButton(){var selected_index=0;while(selected_index<this.controlButtons.length&&this.controlButtons[selected_index].status!==buttonStatus.ENABLED){selected_index+=1;}if(selected_index<this.controlButtons.length){this.hotButtonIndex=selected_index;this.toggleButtonHOTStyle(this.hotButtonIndex,true);}},showControls:function show(config){if(config.next){display.call(this,this.next,config.next);}if(config.back){display.call(this,this.back,config.back);}if(config.cancel){display.call(this,this.cancel,config.cancel);}if(config.dda){display.call(this,this.ddaCheckbox,config.dda);display.call(this,this.ddaLabel,config.dda);}if(config.finish){display.call(this,this.finish,config.finish);}if(config.cubeQuota&&!mstrApp.isSingleTier){display.call(this,this.cubeQuotaLabel,config.cubeQuota);display.call(this,this.cubeQuota,config.cubeQuota);}if(config.save){display.call(this,this.save,config.save);}if(config.managedCheckbox){display.call(this,this.managedCheckbox,config.managedCheckbox);display.call(this,this.managedLabel,config.managedCheckbox);}if(config.mdxRACheckbox){display.call(this,this.mdxRA,config.mdxRACheckbox);}this.refreshControlButtonsStatus();},enableButton:function enableButton(evt){var value;if(!this.visible){return ;}switch(evt.name){case"allowSave":value=evt.value;break;case"refreshTables":value=evt.items.length>0;if(evt.hasOwnProperty("tablesEnabled")){value=value&&evt.tablesEnabled;}break;}if(value!==undefined){this.set("enabled",value);}},onQuotaChange:function(){var quota=this.model.cubesInfo;var text="";if(quota===-1){this.cubeQuotaLabel.set("text",mstrmojo.desc(14195,"We are unable to retrieve the information about your cubes."));return ;}if(!quota||!quota.cubes){return ;}if(quota.cubes.cquota===-1){this.cubeQuota.updateProgress(0);text=mstrmojo.desc(12693,"##### MB used. You have unlimited storage!").replace("#####",Math.round(quota.cubes.cusage))+" "+mstrmojo.desc(13195,"Manage Your Datasets...");this.cubeQuotaLabel.set("text",text);}else{this.cubeQuota.updateProgress(Math.round(quota.cubes.cusage/quota.cubes.cquota*10000)/100);text=mstrmojo.desc(12694,"##### MB (*****%) out of @@@@@ MB used.").replace("#####",Math.round(quota.cubes.cusage)).replace("*****",Math.round(quota.cubes.cusage/quota.cubes.cquota*10000)/100).replace("@@@@@",Math.round(quota.cubes.cquota))+" "+mstrmojo.desc(13195,"Manage Your Datasets...");this.cubeQuotaLabel.set("text",text);}},preBuildRendering:function preBuildRendering(){if(this._super){this._super();}mstrApp.getRootController().model.attachEventListener("cubesInfoChange",this.id,"onQuotaChange");if(this.model.cubesInfo){var text="";var quota=this.model.cubesInfo;if(quota.cubes.cquota===-1){this.cubeQuota.updateProgress(0);text=mstrmojo.desc(12693,"##### MB used. You have unlimited storage!").replace("#####",Math.round(quota.cubes.cusage))+" "+mstrmojo.desc(13195,"Manage Your Datasets...");this.cubeQuotaLabel.set("text",text);}else{text=mstrmojo.desc(12694,"##### MB (*****%) out of @@@@@ MB used.").replace("#####",Math.round(quota.cubes.cusage)).replace("*****",Math.round(quota.cubes.cusage/quota.cubes.cquota*10000)/100).replace("@@@@@",Math.round(quota.cubes.cquota))+" "+mstrmojo.desc(13195,"Manage Your Datasets...");this.cubeQuotaLabel.set("text",text);this.cubeQuota.updateProgress(Math.round(quota.cubes.cusage/quota.cubes.cquota*10000)/100);}}},postBuildRendering:function postBuildRendering(){if(this._super){this._super();}if(this.model.cubesInfo){var quota=this.model.cubesInfo;if(quota.cubes.cquota===-1){this.cubeQuota.updateProgress(0);}else{this.cubeQuota.updateProgress(Math.round(quota.cubes.cusage/quota.cubes.cquota*10000)/100);}}this.next.richTooltip.refNode=this.nextNode;},onkeydown:function onkeydown(event){if(event.e.keyCode===KEY_ENTER){this.controlButtons[this.hotButtonIndex].obj.onclick(event);}else{if(event.e.keyCode===KEY_TAB){this.selectNextButton();}}mstrmojo.dom.preventDefault(event.hWin,event.e);return false;},children:[{scriptClass:"mstrmojo.ui.Checkbox",slot:"ddaNode",text:mstrmojo.desc(12387,"Direct Data Connection"),alias:"ddaCheckbox",oncheckedChange:function oncheckedChange(){mstrApp.getRootController().getDDAController().onToggleDDA(this.checked);},preBuildRendering:function prebuildRendering(){if(this._super){this._super();}},bindings:{visible:function(){return !mstrApp.isSingleTier;}},postCreate:function postCreate(){if(this._super){this._super();}this.markupMethods=mstrmojo.hash.copy(this.markupMethods);this.markupMethods.onenabledChange=function(){$CSS.toggleClass(this.domNode,"disabled",!this.enabled);$CSS.toggleClass(this.parent.ddaLabel.domNode,"disabled",!this.enabled);};}},{scriptClass:"mstrmojo.Label",slot:"ddaLabelNode",text:mstrmojo.desc(12387,"Direct Data Connection"),alias:"ddaLabel",bindings:{visible:function(){return !mstrApp.isSingleTier;}}},{scriptClass:"mstrmojo.CheckBox",cssClass:"managedCheckbox",slot:"managedNode",alias:"managedCheckbox",visible:false,oncheckedChange:function oncheckedChange(){mstrApp.getRootController().model.set("isManagedCube",this.checked);},onenabledChange:function(){this.set("checked",mstrApp.getRootController().model.isManagedCube);},postBuildRendering:function(){var model=mstrApp.getRootController().model;model.attachEventListener("isManagedCubeChange",this.id,"update");},update:function(){var model=mstrApp.getRootController().model;this.set("checked",model.isManagedCube);},bindings:{enabled:function(){return mstrApp.getRootController().model.operationMode===constants.operationMode.create;},checked:function(){if(mstrApp.getRootController().model.isCalledByFlex){return false;}return mstrApp.getRootController().model.isManagedCube;}}},{scriptClass:"mstrmojo.Label",slot:"managedLabelNode",text:"Managed Cube",alias:"managedLabel",visible:false,bindings:{enabled:function(){return mstrApp.getRootController().model.operationMode===constants.operationMode.create;}}},{scriptClass:"mstrmojo.Button",cssClass:"mstrmojo-di-button mstrmojo-WebButton",text:mstrmojo.desc(2140,"Cancel"),slot:"cancelNode",alias:"cancel",onclick:function(){mstrApp.getRootController().onCancelButtonClick();}},{scriptClass:"mstrmojo.Button",cssClass:"mstrmojo-di-button mstrmojo-WebButton",text:mstrmojo.desc(2400,"Save"),slot:"saveNode",alias:"save",onclick:function(){mstrApp.getRootController().onSaveButtonClick();},bindings:{visible:function(){return !mstrApp.isSingleTier;}}},{slot:"backNode",scriptClass:"mstrmojo.Button",cssClass:"mstrmojo-di-button back mstrmojo-WebButton ",text:mstrmojo.desc(373,"Back"),alias:"back",onclick:function(){mstrApp.getRootController().onBackButtonClick();}},{scriptClass:"mstrmojo.Button",cssClass:"mstrmojo-di-button mstrmojo-WebButton",alias:"next",slot:"nextNode",text:mstrmojo.desc(212,"Continue"),useRichTooltip:true,richTooltip:{cssClass:"vi-regular vi-tooltip-V",posType:mstrmojo.tooltip.POS_TOPLEFT,top:-32},ontextChange:function(){if(this.text!==mstrmojo.desc(13852,"Prepare Data")){this.richTooltip.content="";}else{this.richTooltip.content=mstrmojo.desc(13587,"Edit data and add more tables.");}if(this.text===mstrmojo.desc(1302,"Finish")){$CSS.addClass(this.domNode,"hot");}},onclick:function(){mstrApp.getRootController().onNextButtonClick();}},{scriptClass:"mstrmojo.Button",cssClass:"mstrmojo-di-button mstrmojo-WebButton hot",alias:"finish",slot:"finishNode",text:mstrmojo.desc(1302,"Finish"),visible:false,onclick:function(){mstrApp.getRootController().onFinishButtonClick();}},{scriptClass:"mstrmojo.ProgressBar",alias:"cubeQuota",slot:"cubeQuotaNode",cssClass:"mstrmojo-di-user-quota",bindings:{visible:function(){return !mstrApp.isSingleTier;}}},{scriptClass:"mstrmojo.Label",cssClass:"mstrmojo-di-user-quota-text",alias:"cubeQuotaLabel",slot:"cubeQuotaNode",text:mstrmojo.desc(12695,"Fetching Cube Quota Information..."),bindings:{visible:function(){return !mstrApp.isSingleTier;}},onclick:function(event){mstrApp.getRootController().displayCubesInfo(event,true);}},{scriptClass:"mstrmojo.Label",allowHTML:true,cssClass:"mstrmojo-di-source-admin cf",alias:"sourceAdmin",visible:false,text:'<span class="icon"></span><span class="text">'+mstrmojo.desc(14417,"Customize")+"</span>",onclick:function(){mstrApp.getRootController().showPage(constants.pageType.sourceAdmin);}},{scriptClass:"mstrmojo.Box",alias:"mdxRA",visible:false,cssClass:"mstrmojo-di-mdx-ra-checkbox cf",useRichTooltip:true,tooltipOpenDelay:1500,updateTooltipConfig:function(){var pos=$DOM.position(this.domNode);this.set("richTooltip",{top:Math.max(pos.y+18,0),left:Math.max(pos.x+pos.w/2,0),cssClass:"vi-regular A-center vi-tooltip-V mstrmojo-di-mdx-ra-checkbox-tooltip",posType:mstrmojo.tooltip.POS_BOTTOMCENTER,content:this.content});},content:mstrmojo.desc(14598,"MicroStrategy provides two types of attributes: normal attributes and hierarchical attributes. A normal attribute represents a single hierarchy level, e.g., Month. A hierarchical attribute represents an entire hierarchy and its levels, e.g., Time. If a hierarchy is imported as a single hierarchical attribute, then the entire hierarchy can be placed on a report at once, and operations like filtering and sorting can be performed respecting the hierarchy. If a hierarchy is imported as multiple normal attributes to represent each hierarchy level, then each level can be placed on a report separately, and filters can be created on specific levels."),update:function(isVisible){this.children[0].update();this.set("visible",!!isVisible);},children:[{scriptClass:"mstrmojo.ui.Checkbox",oncheckedChange:function oncheckedChange(){mstrApp.getRootController().setRecursive(this.checked?1:0);},update:function(){var me=this,evtConfig={},listConfig=evtConfig[this.id]={};listConfig.recursiveChange=function(evt){me.set("checked",evt.value?true:false);};mstrApp.getRootController().attachDataChangeListeners(evtConfig);me.set("enabled",!mstrApp.tableID);}},{scriptClass:"mstrmojo.Label",text:mstrmojo.desc(14597,"Import hierarchy as hierarchical attribute")}]}]});}());