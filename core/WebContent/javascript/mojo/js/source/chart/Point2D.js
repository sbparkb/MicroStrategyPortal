(function(){mstrmojo.requiresCls("mstrmojo.Base");var $C=mstrmojo.chart;mstrmojo.chart.Point2D=mstrmojo.declare(mstrmojo.Base,null,{scriptClass:"mstrmojo.chart.Point2D",x:0,y:0,init:function init(props){if(props){if(props.Point2D){this.x=props.Point2D.x;this.y=props.Point2D.y;}else{this._super(props);}}},Reset:function Reset(iX,iY){this.x=iX;this.y=iY;},ResetPoint:function ResetPoint(iPoint){this.x=iPoint.x;this.y=iPoint.y;},DistanceSquared:function DistanceSquared(iPoint2D){return(this.x-iPoint2D.x)*(this.x-iPoint2D.x)+(this.y-iPoint2D.y)*(this.y-iPoint2D.y);},Distance:function Distance(iPoint2D){return Math.sqrt(this.DistanceSquared(iPoint2D));},isEqual:function isEqual(iPoint2D){return(this.x===iPoint2D.x&&this.y===iPoint2D.y);},IsInPolygon:function IsInPolygon(iPolygon){var nEdges=iPolygon.length,bResult=false,i,j;if(nEdges<3){return false;}for(i=0,j=nEdges-1;i<nEdges;j=i++){if(((iPolygon[i].y<=this.y&&this.y<iPolygon[j].y)||(iPolygon[j].y<=this.y&&this.y<iPolygon[i].y))&&this.x<=(iPolygon[j].x-iPolygon[i].x)*(this.y-iPolygon[i].y)/(iPolygon[j].y-iPolygon[i].y)+iPolygon[i].x){bResult=!bResult;}}return bResult;},IsStrictlyInPolygon:function IsStrictlyInPolygon(iPolygon){var RightEdgePoint=new $C.Point2D({x:this.x+0.1,y:this.y}),LeftEdgePoint=new $C.Point2D({x:this.x-0.1,y:this.y}),BottomEdgePoint=new $C.Point2D({x:this.x,y:this.y+0.1}),TopEdgePoint=new $C.Point2D({x:this.x,y:this.y-0.1});if(RightEdgePoint.IsInPolygon(iPolygon)){return false;}if(LeftEdgePoint.IsInPolygon(iPolygon)){return false;}if(BottomEdgePoint.IsInPolygon(iPolygon)){return false;}return !TopEdgePoint.IsInPolygon(iPolygon);},Rotate:function Rotate(iAnchor,iRadian){var xDist=this.x-iAnchor.x,yDist=this.y-iAnchor.y;this.x=iAnchor.x+Math.cos(iRadian)*xDist-Math.sin(iRadian)*yDist;this.y=iAnchor.y+Math.sin(iRadian)*xDist+Math.cos(iRadian)*yDist;},MiddleTo:function MiddleTo(iPoint2D){return new $C.Point2D({x:(this.x+iPoint2D.x)/2,y:(this.y+iPoint2D.y)/2});},Shifted:function Shifted(iPoint2D){return new $C.Point2D({x:this.x+iPoint2D.x,y:this.y+iPoint2D.y});},NegativeShifted:function NegativeShifted(iPoint2D){return new $C.Point2D({x:this.x-iPoint2D.x,y:this.y-iPoint2D.y});},swap:function swap(){var temp=this.x;this.x=this.y;this.y=temp;},swapPoints:function swapPoints(iPoint2D){var temp;temp=this.x;this.x=iPoint2D.x;iPoint2D.x=temp;temp=this.y;this.y=iPoint2D.y;iPoint2D.y=temp;},IsOnSegment:function IsOnSegment(iSegmentStart,iSegmentEnd,iExclude){var Tolerance=iExclude?0.01:-0.01;if(Math.abs(iSegmentStart.x-iSegmentEnd.x)<0.01){if((this.y-iSegmentStart.y)>Tolerance&&(iSegmentEnd.y-this.y)>Tolerance){return true;}if((this.y-iSegmentEnd.y)>Tolerance&&(iSegmentStart.y-this.y)>Tolerance){return true;}}else{if((this.x-iSegmentStart.x)>Tolerance&&(iSegmentEnd.x-this.x)>Tolerance){return true;}if((this.x-iSegmentEnd.x)>Tolerance&&(iSegmentStart.x-this.x)>Tolerance){return true;}}return false;},IsOnVerOrHorSegment:function IsOnVerOrHorSegment(iSegmentStart,iSegmentEnd){if(this.y===iSegmentStart.y&&this.y===iSegmentEnd.y){return(((this.x-iSegmentStart.x)>=0&&(iSegmentEnd.x-this.x)>=0)||((this.x-iSegmentStart.x)<=0&&(iSegmentEnd.x-this.x)<=0));}if(this.x===iSegmentStart.x&&this.x===iSegmentEnd.x){return(((this.y-iSegmentStart.y)>=0&&(iSegmentEnd.y-this.y)>=0)||((this.y-iSegmentStart.y)<=0&&(iSegmentEnd.y-this.y)<=0));}return false;},DistanceToLine:function DistanceToLine(iLineStart,iLineEnd){var pointToStart2=this.DistanceSquared(iLineStart),pointToEnd2=this.DistanceSquared(iLineEnd),startToEnd2=iLineStart.DistanceSquared(iLineEnd),tolerance=0.01,startToPoint,startToEnd,crossProduct;if(pointToStart2<tolerance||pointToEnd2<tolerance){return 0;}if(startToEnd2<tolerance){return Math.sqrt(pointToStart2);}if(pointToStart2>=pointToEnd2+startToEnd2){return Math.sqrt(pointToEnd2);}if(pointToEnd2>=pointToStart2+startToEnd2){return Math.sqrt(pointToStart2);}startToPoint=new $C.Point2D({x:this.x-iLineStart.x,y:this.y-iLineStart.y});startToEnd=new $C.Point2D({x:iLineEnd.x-iLineStart.x,y:iLineEnd.y-iLineStart.y});crossProduct=startToPoint.x*startToEnd.y-startToPoint.y*startToEnd.x;return(crossProduct<0?-crossProduct:crossProduct)/Math.sqrt(startToEnd2);},DistanceToPolygon:function DisanceToPolygon(iPolygon){var nEdges=iPolygon.length,nDistance=this.DistanceToLine(iPolygon[0],iPolygon[nEdges-1]),nNewDistance,i;if(this.IsInPolygon(iPolygon)){return 0;}for(i=0;i+1<nEdges;++i){nNewDistance=this.DistanceToLine(iPolygon[i],iPolygon[i+1]);if(nDistance>nNewDistance){nDistance=nNewDistance;}}return nDistance;},rotateAndClone:function rotateAndClone(iAnchor,iRadian){this.Rotate(iAnchor,iRadian);return this;},clone:function clone(){return new $C.Point2D({Point2D:this});}});}());