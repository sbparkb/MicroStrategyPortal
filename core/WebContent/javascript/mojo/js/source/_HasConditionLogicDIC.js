(function(){mstrmojo.requiresCls("mstrmojo.array");var $A=mstrmojo.array;mstrmojo._HasConditionLogicDIC=mstrmojo.provide("mstrmojo._HasConditionLogicDIC",{_mixinName:"mstrmojo._HasConditionLogicDIC",target:null,owner:null,applyChanges:function(){this._super&&this._super();var target=this.target||[],len=target.length,i;for(i=0;i<len;i++){target[i].triggerValidateCondition();}},onvisibleChange:function(){this._super&&this._super();var target=this.target||[],len=target.length,i;for(i=0;i<len;i++){target[i].triggerValidateCondition();}},updateCellsMap:function(show){var lv="",v=this.getCurValue?this.getCurValue():this.value,dv=this.getDisplayValue?this.getDisplayValue():v,k=this.k,owner=this.owner;if(show){owner.updatedCellsMap[k]={r:lv,v:{dv:dv,v:v}};}else{if(owner.updatedCellsMap[k]){delete owner.updatedCellsMap[k];}}}});mstrmojo._CanRespondConditionChange=mstrmojo.provide("mstrmojo._CanRespondConditionChange",{_mixinName:"mstrmojo._CanRespondConditionChange",src:null,childDICs:null,owner:null,postBuildRendering:function(){var owner=this.owner;if(owner){owner.buildConditions(this);}if(this.src){this.childDICs=[];getChildrenDIC.call(this,this.childDICs);this.triggerValidateCondition();}this._super();},onvisibleChange:function(){this._super&&this._super();var childDICs=this.childDICs||[],len=childDICs.length,dics,k,mdf,idx,i;for(i=0;i<len;i++){dics=childDICs[i].owner.dics;k=childDICs[i].k;idx=$A.find(dics,"k",k);if(idx>-1){mdf=dics[idx].mdf;if(mdf){childDICs[i].updateCellsMap(this.visible);}}childDICs[i].set("visible",this.visible);}},triggerValidateCondition:function(){var isValidCondition=true;$A.forEach(this.src,function(srcdic){if(!checkRegExp(srcdic)){isValidCondition=false;}});this.applyConditionAction(isValidCondition);},applyConditionAction:mstrmojo.emptyFn});function getChildrenDIC(childDICs){var ch=this.children||[],len=ch.length,i;for(i=0;i<len;i++){if(ch[i].dic){childDICs.push(ch[i]);}else{getChildrenDIC.call(ch[i],childDICs);}}}function checkRegExp(srcdic){var dic=srcdic.dic,srcValue=dic.value,srcVisible=dic.visible,logic=srcdic.logic,arr=[],m,p,regExp=null;try{if(logic[0]==="/"){arr=logic.split("/");m=arr.pop();arr.shift();p=arr.join("/");regExp=new RegExp(p,m);}else{regExp=new RegExp(logic);}if(!srcVisible||!regExp.test(srcValue)){return false;}}catch(e){return false;}return true;}})();