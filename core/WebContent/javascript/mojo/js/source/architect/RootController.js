(function(){mstrmojo.requiresCls("mstrmojo.array","mstrmojo.Button","mstrmojo.func","mstrmojo.hash","mstrmojo.architect.ArchitectDataService","mstrmojo.architect.EnumDataChangeEvents","mstrmojo.warehouse.EnumObjectTypes","mstrmojo.architect.ui.EnumViewTypes","mstrmojo.architect.ui.editors.DBRolePicker","mstrmojo.architect.ui.editors.LinksEditor","mstrmojo.architect.ui.editors.TablePreview","mstrmojo.warehouse.WHController","mstrmojo.architect.ui.ElementSelector");var $ENUM_OT=mstrmojo.warehouse.EnumObjectTypes,ENUM_OT_ATTRIBUTE=$ENUM_OT.ATTRIBUTE,ENUM_OT_COLUMN=$ENUM_OT.COLUMN,ENUM_OT_FACT=$ENUM_OT.FACT,ENUM_OT_METRIC=$ENUM_OT.METRIC,$ENUM_VIEW_TYPES=mstrmojo.architect.ui.EnumViewTypes,ENUM_VIEW_LAYER=$ENUM_VIEW_TYPES.LAYER,$ENUM_DATA_CHANGE_EVENTS=mstrmojo.architect.EnumDataChangeEvents,$M=mstrmojo,$A=$M.array,$H=$M.hash,$FUNC=$M.func,$WRAP=$FUNC.wrapMethods,saveCallbacks=[],preSaveCallbacks=[],preSwitchViewCallbacks=[],STR_SAVE_PROJECT=$M.desc(11459,"Project saved."),STR_SAVE_SCHEMA=$M.desc(11460,"Project saved and Schema updated.");function functionAlert(msg,fn,title){var id="mojoArchitectAlert";try{if(mstrmojo.all[id]){mstrmojo.all[id].destroy();}}catch(e){}mstrmojo.insert({scriptClass:"mstrmojo.Dialog",id:id,title:title||mstrmojo.desc(3610,"MicroStrategy Web"),width:"475px",height:"200px",buttons:[mstrmojo.Button.newInteractiveButton(mstrmojo.desc(1442,"ok"),function(){mstrmojo.all.mojoArchitectAlert.destroy();if(fn){fn();}},"#666666")],children:[{scriptClass:"mstrmojo.Label",cssClass:"labelAlert",text:msg}]}).render();}function saveChanges(update){var $this=this,modelFn=update?"AndUpdate":"SchemaInstance",canProceed=true,preSaveCount=preSaveCallbacks.length,preSaveComplete=0,preCheck={},objects,newMetrics="",confirmationMsg=update?STR_SAVE_SCHEMA:STR_SAVE_PROJECT;var preSaveCB={success:function success(){preSaveComplete++;if(canProceed&&((preSaveCount===0)||(preSaveCount>0&&(preSaveComplete===preSaveCount)))){$A.forEach(saveCallbacks,function(onSaveCallback){onSaveCallback();});$this.model["save"+modelFn]({success:function success(res){if(res.mi){objects=res.mi["in"].oi;if(objects){objects=objects.length?objects:[objects];if(objects){$H.forEach(objects,function(object){if(object.tp===ENUM_OT_METRIC){newMetrics=newMetrics+object.n+"<br />";}});if(newMetrics!==""){confirmationMsg=confirmationMsg+"<br /><br /> <b> The following metrics were created: </b><br /><br />"+newMetrics;}}}}functionAlert(confirmationMsg,update?function(){location.reload();}:null,"MicroStrategy Architect");}});}else{if(preCheck.msg){mstrmojo.alert(preCheck.msg);}}}};if(preSaveCount>0){$A.forEach(preSaveCallbacks,function(onPreSaveCallback){preCheck=onPreSaveCallback(preSaveCB);canProceed=canProceed&&preCheck.canProceed;return canProceed;});}else{preSaveCB.success();}if(!canProceed){mstrmojo.alert(preCheck.msg);}}function raiseTableSelectionEvent(tableItems,add){this.model.raiseEvent({name:$ENUM_DATA_CHANGE_EVENTS.TABLES_SELECTED,tableItems:tableItems,toAdd:add});}function raiseTableStructureChangeEvent(tableId){var model=this.model,table=model.getTable(tableId);model.raiseTableChangeEvent(table);}function createGraphicalTable(tableData,callback){var model=this.model,rootController=this,tableId=tableData.did;if(model.autoMap){model.autoRecognizeTable(tableId,{success:function success(){if(callback&&callback.success){callback.success(tableData);}}});}else{rootController.loadTableContents(tableData,{success:function success(){if(callback&&callback.success){callback.success(tableData);}}});}}function getCurrentLayer(){var model=this.model;return model.getLayer(model.currentlayerID);}function updateTablePosition(tableData){var posData=getCurrentLayer.call(this).tablePositions[tableData.did];if(posData){tableData.x=posData.x;tableData.y=posData.y;tableData.w=posData.w;tableData.h=posData.h;}}mstrmojo.architect.RootController=mstrmojo.declare(mstrmojo.warehouse.WHController,null,{start:function start(){var rootView=this.rootView,model=this.model,wls=window.localStorage,$this=this,browserSettings=(wls&&wls.getItem("initialSettings"))||null,settings=JSON.parse(browserSettings);var dataService=$this.dataService=new mstrmojo.architect.ArchitectDataService();model.attachEventListener("schemaInstanceIDChange",dataService.id,function(){dataService.schemaInstanceID=model.schemaInstanceID;});rootView.render();if(settings&&settings.showDatabaseView&&settings.showProjectTableView){$this.showDatabaseView=(settings.showDatabaseView==="1");$this.showProjectTableView=(settings.showProjectTableView==="1");var cv=settings.cv||$ENUM_VIEW_TYPES.LAYER;model.currentView=cv;model.currentLogicalViewID=settings.logicalview||"";model.currentTransformationId=settings.transformation||"";model.currentlayerID=settings.layer||"";model.forceReloadLayer=true;model.currentHierarchyID=settings.userhierarchy||"";}model.createSchemaInstance();window.setInterval(function(){dataService.pingServer();},150000);},model:undefined,rootView:undefined,showDatabaseView:false,showProjectTableView:false,projectPrimaryDBroleSet:false,dbRolesLoaded:false,onCloseArchitect:function onCloseArchitect(){var splittersLayouts={},$this=mstrApp.rootController,model=$this.model,wls=window.localStorage;if($this.rootView&&$this.rootView.children[1]&&$this.rootView.children[1].getSplitterLayout){$this.rootView.children[1].getSplitterLayout(splittersLayouts);if(wls){wls.setItem("initialSettings",JSON.stringify({cv:model.currentView,splittersLayouts:splittersLayouts,showDatabaseView:$this.showDatabaseView?"1":"0",showProjectTableView:$this.showProjectTableView?"1":"0",logicalview:model.currentLogicalViewID,transformation:model.currentTransformationId,layer:model.currentlayerID,userhierarchy:model.currentHierarchyID}));}}$this.model.onCloseArchitect();},getDataService:function getDataService(){if(!this.dataService){this.dataService=new mstrmojo.architect.ArchitectDataService();}return this.dataService;},toggleDatabaseView:function toggleDatabaseView(show){if(!this.rootView){return ;}var model=this.model;this.showDatabaseView=show;if(show&&!model.SelDBRoleID){model.set("SelDBRoleID",model.projPrimaryDBRoleID);this.projectPrimaryDBroleSet=true;}this.rootView.toggleDatabaseView(show);if(show&&!this.loaded){this.loaded=true;this.loadDBRoles();this.dbRolesLoaded=true;}},toggleProjectTableView:function toggleProjectTableView(show){this.rootView.toggleProjectTableView(show);this.showProjectTableView=show;if(show){this.model.getProjectTables();}},preSwitchView:function preSwitchView(){var canProceed=true,preCheck={canProceed:true},oldView=this.model.currentView||ENUM_VIEW_LAYER;$A.forEach(preSwitchViewCallbacks,function preSwitchViewCallback(onSwitchViewCallbacks){preCheck=onSwitchViewCallbacks(oldView);canProceed=canProceed&&preCheck.canProceed;return canProceed;});return preCheck;},switchView:function switchView(newViewType,show){var root=this,model=this.model,preCheck=this.preSwitchView(),oldView=model.currentView||ENUM_VIEW_LAYER,newView=(show?newViewType:oldView);if(preCheck.canProceed){model.targetView=newView;this.rootView.switchView(newView);model.currentView=newView;switch(newViewType){case $ENUM_VIEW_TYPES.SYS_HIERARCHY:model.getRelations({success:function success(evt){model.raiseEvent({name:$ENUM_DATA_CHANGE_EVENTS.RELATIONSHIP_CHANGED,relations:evt.relations,positions:evt.attributePositions,viewType:newViewType});model.raiseEvent({name:$ENUM_DATA_CHANGE_EVENTS.ATTRIBUTES_CHANGED,relations:evt.relations});}});break;case $ENUM_VIEW_TYPES.TRANSFORMATION:model.getRelations({success:function success(evt){model.raiseEvent({name:$ENUM_DATA_CHANGE_EVENTS.RELATIONSHIP_CHANGED,relations:evt.relations,positions:evt.attributePositions,viewType:newViewType});model.loadTransformations({success:function success(){root.editTransformation(model.currentTransformationId);}});}});break;case $ENUM_VIEW_TYPES.USER_HIERARCHY:root.switchUserHierarchy(model.currentHierarchyID);break;case $ENUM_VIEW_TYPES.LOGICAL_VIEWS:this.switchLogicalView(model.currentLogicalViewID);break;case $ENUM_VIEW_TYPES.LAYER:this.model.getProjectTables();this.model.loadLayers({success:function success(){root.switchLayer(model.currentlayerID);}});break;}}else{mstrmojo.alert(preCheck.msg);}},saveProject:function saveProject(){this.model.isDirty=false;saveChanges.call(this,false);},saveAndUpdate:function saveAndUpdate(){this.model.isDirty=false;saveChanges.call(this,true);},registerSaveCallback:function registerSaveCallbacks(onSaveCallback){saveCallbacks.push(onSaveCallback);},registerPreSaveCallback:function registerSaveCallbacks(onPreSaveCallback){preSaveCallbacks.push(onPreSaveCallback);},registerPreSwitchViewCallback:function registerPreSwitchViewCallback(onPreSwitchViewCallback){preSwitchViewCallbacks.push(onPreSwitchViewCallback);},getSettings:function getSettings(){return{autoMap:this.model.autoMap};},setSettingValue:function setSettingValue(name,value){var model=this.model;model.isDirty=true;model.set(name,value);},getProjects:function getProjects(params,callback){this.model.getProjects(params,callback);},addTables:function addTables(tableInfo){var model=this.model;model.isDirty=true;model.addTables(tableInfo);},createAttribute:function createAttribute(data){var model=this.model,rootController=this;model.isDirty=true;model.createAttribute(data);rootController.addToCurrentLayer(model.getTable(data.pdid).getTableData(true));},autoMapTable:function autoMapTable(tableItems){var model=this.model,rootController=this;model.isDirty=true;$A.forEach(tableItems,function(tableObj){model.autoRecognizeTable(tableObj.did,{success:function success(tableData){rootController.addToCurrentLayer(model.getTable(tableData.id).getTableData(true));}});});},addOrRemoveTables:function addOrRemoveTables(tableItems,isAddTable){var model=this.model,rootController=this,tableData,positionsX=[],positionsY=[],callback={success:function success(tableObj){createGraphicalTable.call(rootController,tableObj,{success:function success(tableObj){tableObj.x=positionsX[tableObj.n];tableObj.y=positionsY[tableObj.n];rootController.addToCurrentLayer(tableObj);}});}};model.isDirty=true;if(getCurrentLayer.call(this)){var newTableItems=[];$A.forEach(tableItems,function(tableObj){if(tableObj.x){positionsX[tableObj.n]=tableObj.x+"px";}if(tableObj.y){positionsY[tableObj.n]=tableObj.y+"px";}if(isAddTable){if(rootController.model.getTable(tableObj.did)){callback.success(tableObj);}else{if(!tableObj.dbrole){model.addTables([tableObj],callback);}else{callback.success(tableObj);}}}else{tableData=rootController.model.getTable(tableObj.did).getTableData();tableData.bold=false;newTableItems.push(tableData);}});if(!isAddTable){raiseTableSelectionEvent.call(this,newTableItems);}}},createFact:function createFact(data){var model=this.model,rootController=this;model.isDirty=true;model.createFact(data);rootController.addToCurrentLayer(model.getTable(data.pdid).getTableData(true));},getTablePositions:function getTablePositions(){var items=[],rootController=this,model=this.model,layer=getCurrentLayer.call(this),tableData;if(!layer){return[];}$H.forEach(layer.tables,function(table){tableData=table.getTableData(true);updateTablePosition.call(rootController,tableData);items.push(tableData);model.getAttributesFactsInTable(table.id,{success:function success(evt){if(evt&&evt.items&&evt.items.items&&evt.items.items.length){tableData=evt.items.items[0];updateTablePosition.call(rootController,tableData);model.raiseTableChangeEvent(table);}}});});return items;},setLayerTablePositions:function setLayerTablePositions(items){var layer=getCurrentLayer.call(this);$H.forEach(items,function(tbl){layer.updateTablePositions(tbl,{x:tbl.x,y:tbl.y,w:tbl.w,h:tbl.h});});if(layer&&items.length){this.model.updateLayer(layer,mstrmojo.emptyFn);}},getCurrentHierarchyID:function getCurrentHierarchyID(){return this.model.currentHierarchyID;},isSystemDimensionView:function isSystemDimensionView(){var model=this.model;return(model.currentView===$ENUM_VIEW_TYPES.SYS_HIERARCHY||model.currentView===$ENUM_VIEW_TYPES.LAYER);},isTargetSystemDimensionView:function isTargetSystemDimensionView(){var model=this.model;return(model.targetView===$ENUM_VIEW_TYPES.SYS_HIERARCHY||model.targetView===$ENUM_VIEW_TYPES.LAYER);},addAttributeToHierarchy:function addAttributeToHierarchy(attributeID,attributeName,callback){var model=this.model;model.isDirty=true;if(model.currentView===$ENUM_VIEW_TYPES.USER_HIERARCHY){model.addAttributeToHierarchy(attributeID,attributeName,callback);}else{if(callback&&callback.success){callback.success();}}},addEntryPoint:function addEntryPoint(attributeID){var model=this.model;model.isDirty=true;if(model.currentView===$ENUM_VIEW_TYPES.USER_HIERARCHY){model.addEntryPoint(attributeID);}},editFilters:function editFilters(attributeID,attributeName,callback){var model=this.model,availableFilters,selectedFilters=[],selFilterIds,selectedElement,selectedElementIndex,cb={success:function success(availableList,selectedList){model.setHierarchyAttributeFilters(attributeID,selectedList,{success:function success(){if(callback&&callback.success){callback.success(selectedList);}}});}},elementSelector=new mstrmojo.architect.ui.ElementSelector({title:{text:attributeName,icon:"attribute"},availableTitle:"Available Filters",selectedTitle:"Selected Filters"});model.isDirty=true;model.searchFilters({success:function success(res){availableFilters=res.oi||[];selFilterIds=model.getHierarchyAttributeFilters(attributeID)||[];$H.forEach(selFilterIds,function(filter){selectedElementIndex=$A.find(availableFilters,"did",filter.did);selectedElement=availableFilters[selectedElementIndex];selectedFilters.push(selectedElement);availableFilters.splice(selectedElementIndex,1);});elementSelector.availableList=availableFilters;elementSelector.selectedList=selectedFilters||[];elementSelector.availableTitle=mstrmojo.desc(12242,"Available filters");elementSelector.selectedTitle=mstrmojo.desc(12243,"Selected filters");elementSelector.callback=cb;elementSelector.open();}});},removeEntryPoint:function removeEntryPoint(attributeID){var model=this.model;model.isDirty=true;if(model.currentView===$ENUM_VIEW_TYPES.USER_HIERARCHY){model.removeEntryPoint(attributeID);}},setHierarchyAttributeLockProperty:function setHierarchyAttributeLockProperty(attributeID,lockStatus,lockLimit,callback){var model=this.model;model.isDirty=true;model.setHierarchyAttributeLockProperty(attributeID,lockStatus,lockLimit,callback);},updateHiearchySubtype:function updateHiearchySubtype(userDrillHierarchy,callback){var model=this.model;model.isDirty=true;model.updateHiearchySubtype(userDrillHierarchy,callback);},setTransformationCardinality:function setTransformationCardinality(transformationID,onetoOneMappingType){var model=this.model;model.isDirty=true;model.setTransformationCardinality(transformationID,onetoOneMappingType);},setTransformationAllAttributes:function setTransformationAllAttributes(transformationID,transformationAllAttributes){var model=this.model;model.isDirty=true;model.setTransformationAllAttributes(transformationID,transformationAllAttributes);},editTransformation:function editTransformation(transformationId){var model=this.model;if(transformationId){model.isDirty=true;}model.editTransformation(transformationId);},updateRelationPositions:function updateRelationPositions(positions,hierarchyId){var model=this.model;model.updateRelationPositions(positions,hierarchyId);},addTransformation:function addTransformation(useDefaultName,transformationName){var model=this.model;model.isDirty=true;model.addTransformation(useDefaultName,transformationName);},renameTransformation:function renameTransformation(transformationId,newTransforationName){this.model.isDirty=true;return this.getTransformation(transformationId).rename(newTransforationName);},addTransformationElement:function addTransformationElement(id,attributeID,expression,tableID,attributeName,tableName,source){var model=this.model;model.isDirty=true;model.addTransformationElement(id,attributeID,expression,tableID,attributeName,tableName,source);},selectTransformationElement:function selectTransformationElement(id,attribute,table,expression,source){var model=this.model;model.raiseEvent({name:$ENUM_DATA_CHANGE_EVENTS.TRANSFORMATION_SELECTED,value:{id:id,attribute:attribute,table:table,expression:expression},source:source});},removeTransformationElement:function removeTransformationElement(id,attributeID){var model=this.model;model.isDirty=true;model.removeTransformationElement(id,attributeID);},commitTransformation:function commitTransformation(transformationID,callback){var transformation=this.getTransformation(transformationID);if(transformation){transformation.commit(callback);}},addLogicalView:function addLogicalView(useDefaultName,logicalViewIdName){var model=this.model;model.isDirty=true;model.addLogicalView(useDefaultName,logicalViewIdName);},renameLogicalView:function renameLogicalView(viewId,newName,callback){var model=this.model;model.isDirty=true;return model.logicalViews[viewId].rename(newName,callback);},addToCurrentLayer:function addToCurrentLayer(tableData){var rootController=this,model=this.model,layer=getCurrentLayer.call(this),tableId=tableData.id||tableData.did,tblData,table=model.getTable(tableId);model.isDirty=true;if(!layer){return ;}var isTableNotInLayer=!layer.tables[tableId];if(isTableNotInLayer){layer.addTable(table);}if(tableData.x){layer.updateTablePositions(tableData,{x:tableData.x,y:tableData.y,w:tableData.w,h:tableData.h});}if(isTableNotInLayer){tblData=table.getTableData(true);tblData.x=tableData.x;tblData.y=tableData.y;raiseTableSelectionEvent.call(rootController,[tblData],true);raiseTableStructureChangeEvent.call(rootController,tableId);}else{raiseTableStructureChangeEvent.call(rootController,tableId);}},removeFromCurrentLayer:function removeFromCurrentLayer(tdata){this.model.isDirty=true;getCurrentLayer.call(this).removeTable(tdata);},renameLayer:function renameLayer(layerId,newLayerName){var model=this.model;model.isDirty=true;return model.getLayer(layerId).rename(newLayerName);},addLayer:function addLayer(callback,useDefaultName,layerName){var model=this.model;model.raiseEvent({name:$ENUM_DATA_CHANGE_EVENTS.BEFORE_LAYER_CHANGE});model.isDirty=true;model.addLayer(callback,useDefaultName,layerName);},deleteLayer:function deleteLayer(layerId){var model=this.model;model.isDirty=true;model.deleteLayer(layerId);},switchLayer:function switchLayer(layerID){var model=this.model;model.raiseEvent({name:$ENUM_DATA_CHANGE_EVENTS.BEFORE_LAYER_CHANGE});model.switchLayer(layerID);},setTableDBRoles:function setTableDBRoles(data){var model=this.model;model.isDirty=true;model.setTableDBRoles(data);},getTableDBRoles:function getTableDBRoles(data){return this.model.getTableDBRoles(data);},loadTableContents:function loadTableContents(tableData,callback){var layer=getCurrentLayer.call(this);this.model.getAttributesFactsInTable(tableData.did,$WRAP({success:function success(){if(layer){layer.tableLoaded();}}},callback));},populateTableContents:function populateTableContents(tableID,callback){this.model.getAttributesFactsInTable(tableID,callback);},getTable:function getTable(tableId){return this.model.getTable(tableId);},getColumns:function getColumn(){return this.model.columns;},getAttribute:function getAttribute(attributeId){return this.model.getAttribute(attributeId);},getFormCategories:function getFormCategories(){return this.model.formCategories;},addJointChildren:function addJointChildren(relation,secondChildAttributeID){var model=this.model;model.isDirty=true;model.addJointChildren(relation,secondChildAttributeID);},getJointChildrenCandidates:function getJointChildrenCandidates(relation){return this.model.getJointChildrenCandidates(relation);},getTransformation:function getTransformation(transformationId){return this.model.transformations[transformationId];},getHierarchy:function getHierarchy(hierarchyId){return this.model.userHierarchies[hierarchyId];},addUserHierarchy:function addUserHierarchy(callback){var model=this.model;model.isDirty=true;model.addUserHierarchy("",callback);},renameUserHierarchy:function renameUserHierarchy(userHierarchyID,newName,callback){var model=this.model;model.isDirty=true;model.userHierarchies[userHierarchyID].rename(newName,callback);},dimensions:undefined,switchUserHierarchy:function switchUserHierarchy(hierarchyId){this.model.loadUserHierarchies(hierarchyId);},switchLogicalView:function switchLogicalView(viewId){var model=this.model;if(!model.logicalViews[viewId]){viewId="";}model.currentLogicalViewID=viewId;model.raiseEvent({name:$ENUM_DATA_CHANGE_EVENTS.LOGICALVIEWS_CHANGED,views:model.logicalViews,value:viewId});},getUserHierarchy:function getUserHierarchy(userHierarchyID){return this.model.userHierarchies[userHierarchyID];},autoArray:function autoArray(){var model=this.model;model.autoArrange();},getHierarchyAttributeName:function getHierarchyAttributeName(userHierarchyID,attributeId){var $this=this,attribute,hierarchy=this.model.userHierarchies[userHierarchyID];if(hierarchy){attribute=hierarchy.attributes[attributeId];if(attribute){return attribute.n;}}else{attribute=$this.model.getAttribute(attributeId);if(attribute){return attribute.name;}}return"";},updateRelation:function updateRelationType(parentAttributeId,childAttributeId,relationType,relationTableId){var model=this.model;model.isDirty=true;model.updateRelation(parentAttributeId,childAttributeId,relationType,relationTableId);},addRelation:function addRelation(parentAttributeId,childAttributeId,relationTableId){var model=this.model;model.isDirty=true;model.addRelation(parentAttributeId,childAttributeId,relationTableId);},removeRelation:function removeRelation(parentAttributeId,childAttributeId){var model=this.model;model.isDirty=true;model.removeRelation(parentAttributeId,childAttributeId);},removeFromHierarchy:function removeFromHierarchy(attributeId){var model=this.model;model.isDirty=true;model.removeFromHierarchy(attributeId);},getRelation:function getRelation(parentAttributeId,childAttributeId){return this.model.getRelation(parentAttributeId,childAttributeId);},invalidateRelations:function invalidateRelations(attributesChanged){this.model.invalidateRelations(attributesChanged);},removeAttributeFromRelation:function removeAttributeFromRelation(data){var model=this.model;model.isDirty=true;return model.removeAttributeFromRelation(data);},addTableInfo:function addTableInfo(sourceData,destinationData){if(!sourceData||!destinationData){return ;}var model=this.model,isSameTable=(sourceData.pdid===destinationData.pdid),temp=(destinationData.tp===ENUM_OT_COLUMN)?sourceData:undefined;model.isDirty=true;if(sourceData.did===destinationData.did){return ;}if(temp){sourceData=destinationData;destinationData=temp;}var stp=sourceData.tp,dtp=destinationData.tp,sourceTable=model.getTable(sourceData.pdid);if((stp===ENUM_OT_FACT||dtp===ENUM_OT_FACT)&&isSameTable){return ;}if(stp===ENUM_OT_ATTRIBUTE&&dtp===ENUM_OT_ATTRIBUTE){if(isSameTable&&(model.getFormCount(sourceData.did)===1)){model.convertAttributeToForm(sourceData.did,destinationData.did,sourceData.pdid);}}else{if(((stp===ENUM_OT_COLUMN)&&!isSameTable)||((dtp===ENUM_OT_ATTRIBUTE)&&isSameTable)){if(((dtp===ENUM_OT_ATTRIBUTE)&&(!sourceTable.attributeInfos[destinationData.did]))||isSameTable||((dtp===ENUM_OT_FACT)&&(!sourceTable.factInfos[destinationData.did]))){model.addTableInfo(sourceData,destinationData);}}}},showSampleData:function showSampleData(tbl){var model=this.model,table=model.getTable(tbl.did),e=mstrmojo.all.TablePreview||new mstrmojo.architect.ui.editors.TablePreview(),toDelete=false;e.dbtn=tbl.dbtn;if(!table){table=new mstrmojo.architect.obj.Table({isNew:false,primaryDBRole:model.SelDBRoleID,nameSpace:tbl.ns,dbtn:tbl.dbtn,id:tbl.did});toDelete=true;}table.getSampleData({success:function success(res){e.cols=res.cols;e.dbTableInfo=res.dbt;e.open();},complete:function complete(){if(toDelete){delete mstrmojo.all[tbl.did];}}});},showLinks:function showLinks(obj){this.model.getLinks(obj,{success:function success(res){var e=mstrmojo.all.LinksEditor;if(!e){e=new mstrmojo.architect.ui.editors.LinksEditor({obj:obj,data:res});}else{e.obj=obj;e.data=res;}e.open();}});},renameObject:function renameObject(data){var model=this.model,renameEditor=new mstrmojo.architect.ui.editors.NameEditor({data:data,onOK:function onOK(newName){model.renameObject(data.did,data.tp,newName,data.bfIdx,data.sid);}});renameEditor.open();},removeFromTable:function removeFromTable(data){var model=this.model;model.isDirty=true;model.removeInfoFromTable(data);},convertAttributeToFact:function convertAttributeToFact(data){var model=this.model;model.isDirty=true;model.convertAttributeToFact(data.bfIdx,data.did,null,data.pdid);},convertFactToAttribute:function convertFactToAttribute(data){var model=this.model;model.isDirty=true;model.convertFactToAttribute(data.did,null,"3",true,true,data.n,data.pdid);},convertAttributeToForm:function convertAttributeToForm(data,menuItem){var model=this.model;model.isDirty=true;model.convertAttributeToForm(data.did,menuItem.did,data.pdid);},convertColumnToForm:function convertColumnToForm(data,menuItem){var model=this.model;model.isDirty=true;model.convertColumnToForm(data.did,menuItem.did,data.pdid);},setAsLookup:function setAsLookup(data){var model=this.model;model.isDirty=true;model.setAsLookup(data.pdid,data.sid,data.bfIdx);},updateAggregation:function updateAggregation(data,menuItem){var model=this.model;model.isDirty=true;model.updateAggregation(data,menuItem);},updateMappingMethod:function updateMappingMethod(data,menuItem){var model=this.model;model.isDirty=true;model.updateMappingMethod(data,menuItem);},updateFormFormat:function updateFormFormat(data,menuItem){var model=this.model;model.isDirty=true;model.updateFormFormat(data,menuItem);},updateFormCategory:function updateFormCategory(data,menuItem){var model=this.model;model.isDirty=true;model.updateFormCategory(data,menuItem);},unGroupForms:function unGroupForms(data,menuItem){var model=this.model;model.isDirty=true;model.unGroupForms(data,menuItem);},groupForms:function groupForms(source,target){var model=this.model;model.isDirty=true;model.groupForms(source,target);},openExpressionEditor:function openExpressionEditor(data,menuItem){var model=this.model,tableId=menuItem.isNew?data.did:data.pdid,table=model.getTable(tableId);if(table&&(table.isPopulated||table.isNew)){model.openExpressionEditor(data,menuItem);}else{model.getAttributesFactsInTable(tableId,{success:function success(){model.openExpressionEditor(data,menuItem);}});}},loadFunctions:function loadFunctions(callback){this.model.loadFunctions(callback);},getFunctions:function getFunctions(){return this.model.functions;},getTransformationTables:function getTransformationTables(attributeID,callback){var model=this.model;model.searchAttributeTables(attributeID,$WRAP({success:function success(res){var tables=[];$A.forEach([].concat(res.oi),function(table){tables.push({did:table.did,n:table.n});});res.tables=tables;}},callback));},deleteObject:function deleteObject(data){var rootController=this;rootController.model.isDirty=true;data=[].concat(data);$A.forEach(data,function(dataObj){rootController.model.deleteObject(dataObj);});},validateExpr:function validateExpr(params,callback){this.model.validateExpr(params,callback);},handleUpdateStructures:function handleUpdateStructures(data){var model=this.model;model.isDirty=true;if(data){$A.forEach(data,function(dataObj){model.updateTableStructure(dataObj.did);});}else{$H.forEach(model.tables,function(table){if(!table.isView){model.updateTableStructure(table.id);}});}},changeLayerTableColumnView:function changeLayerTableColumnView(tableItems,menuItem){$A.forEach(tableItems,function(tableObj){this.model.changeLayerTableColumnView(tableObj,menuItem);},this);},showDBRolePicker:function showDBRolePicker(callback){var rootController=this;this.loadDBRoles({success:function success(){var e=mstrmojo.all.DBRolePicker;if(!e){e=new mstrmojo.architect.ui.editors.DBRolePicker({callback:callback,model:rootController.model});}e.open();}});},trimTokenEnds:function trimTokenEnds(tokens){this.model.trimTokenEnds(tokens);},tokenizeExpression:function tokenizeExpression(expr,tableId,callback){this.model.tokenizeExpression(expr,tableId,callback);},getTablesForRelationship:function getTablesForRelationship(attId1,attId2){return this.model.getTablesForRelationship(attId1,attId2);},prePopulateRelationMenu:function prePopulateRelationMenu(relation,callback){this.model.prePopulateRelationMenu(relation,callback);},findDependentsByNameSearch:function findDependentsByNameSearch(name){this.model.findDependentsByNameSearch(name);},loadSearchObjectContents:function loadSearchObjectContents(item,callback){this.model.loadSearchObjectContents(item,callback);},createTableAlias:function createTableAlias(tableItems){this.model.isDirty=true;$A.forEach(tableItems,function(table){this.model.createTableAlias(table);},this);},getSameTableAttributes:function getSameTableAttributes(tableData){var model=this.model,table=model.getTable(tableData.pdid),items=[];if(tableData.items.length>1){return items;}$H.forEach(table.attributeInfos,function(item){if(item.attributeId!==tableData.did){items.push(model.getAttribute(item.attributeId));}});return items;},updateColumn:function updateColumn(column,colData,callback){var model=this.model;model.isDirty=true;model.updateColumn(column,colData,callback);},setAsMultiLingual:function setAsMultiLingual(data){var model=this.model;model.isDirty=true;model.setAsMultiLingual(data.pdid,data.sid,data.bfIdx);},setTableLogicalSize:function setTableLogicalSize(data){var model=this.model;model.isDirty=true;model.setTableLogicalSize(data);},setTableMenuContext:function setTableMenuContext(context){this.model.setTableMenuContext(context);},raiseExecuteSQLEvent:function raiseExecuteSQLEvent(sqlData){this.model.raiseEvent({name:$ENUM_DATA_CHANGE_EVENTS.LOGICALVIEW_SQLEXECUTED,data:sqlData});},searchTables:function searchTables(attrId1,attrId2,callback){this.model.submitRequest(callback,{objecttypes:15,uses:attrId1+",12;"+attrId2+",12;",flags:1+2+256+512,xmlflags:1,specialparse:"relationTables"},"search");},closeViewObject:function closeViewObject(){this.rootView.closeViewObject();},toggleViewList:function toggleViewList(){this.rootView.toggleViewList();},updateViewListItem:function updateViewListItem(itemID,itemName){this.rootView.updateViewObjectName(itemID,itemName);this.model.raiseEvent({name:$ENUM_DATA_CHANGE_EVENTS.VIEW_ITEM_RENAMED,itemID:itemID,itemName:itemName});},preSwitchCheck:function preSwitchCheck(object,invalidMsg,nameProp){var canProceed=true,msg="";if(object){canProceed=canProceed&&object.isValid();msg=invalidMsg.replace("%1",object[nameProp]);}return{canProceed:canProceed,msg:msg};}});}());