(function(){mstrmojo.requiresCls("mstrmojo.hash");var $H=mstrmojo.hash,PENDING="pending",FAILED="failed";function getOfflineTransactions(callback){if(mstrApp.isHosted()){callback.success({});}else{mstrApp.serverRequest({taskId:"getOfflineTransaction"},callback,{noTaskURL:true,skipLogin:true});}}function noPendingQueue(list){var noPending=true;$H.forEach(list,function(o){if(o.pending&&o.pending.length>0){noPending=false;}});return noPending;}function setBoardModel(){var me=this;getOfflineTransactions({success:function(res){var updated=false,po,docs,list;me.emptyTransactionQueue=$H.isEmpty(res);$H.forEach(me.prjModel,function(v,k){if(!res[k]){po=me.prjModel[k];if(po&&po.list){delete me.prjModel[k];updated=true;}}});$H.forEach(res,function(v,k){var p=mstrApp.getConfiguration().getProjectByRealPid(k);if(!p){return ;}po=me.prjModel[k];if(!po){po=me.prjModel[k]={pid:p.pid,realPid:k,pn:p.pn,list:v};updated=true;}else{if(!$H.equals(po.list,v)){po.list=v;updated=true;}}});if(updated){list={};$H.forEach(me.prjModel,function(v){if(v){docs=$H.clone(v.list);$H.copy(docs,list);$H.forEach(docs,function(o){o.p=v;});}});me.ntfBoardModel.docsTx=list;me.ntfBoardModel.raiseEvent({name:"recordChanged",data:me.ntfBoardModel.docsTx});}}});}mstrmojo.OfflineTransactionModel=mstrmojo.declare(mstrmojo.Obj,null,{scriptClass:"mstrmojo.OfflineTransactionModel",lastSubmission:false,emptyTransactionQueue:true,ntfBoardModel:null,prjModel:null,init:function init(props){this._super(props);this.prjModel={};this.ntfBoardModel=new mstrmojo.Obj({docsTx:{},getOfflineRecords:function getOfflineRecords(did){return did?this.docsTx[did]:this.docsTx;}});setBoardModel.call(this);},getBoardModel:function getBoardModel(){return this.ntfBoardModel;},hasOfflineTransactions:function hasOfflineTransactions(){return !this.emptyTransactionQueue;},editTransactionRecord:function editOfflineTransactionRecord(documentId,isPending,timeStamp,callback){var bm=this.ntfBoardModel,p=bm.docsTx[documentId].p,dim=mstrApp.getContentDimensions();mstrApp.serverRequest({taskId:"editOfflineTransaction",projectId:p.realPid,documentId:documentId,isPending:isPending,timeStamp:timeStamp,availableWidth:dim.w,availableHeight:dim.h},callback,{projectId:p.pid,skipLogin:true});},deleteTransactionRecord:function deleteTransactionRecord(documentId,isPending,timeStamp,callback){var bm=this.ntfBoardModel,rec=bm.docsTx[documentId],p=rec.p,d=rec[isPending?PENDING:FAILED],idx,prjList,me=this;mstrApp.serverRequest({taskId:"deleteOfflineTransaction",projectId:p.realPid,documentId:documentId,isPending:isPending,timeStamp:timeStamp},{success:function(){idx=mstrmojo.array.find(d,"timestamp",timeStamp);if(idx!==-1){d.splice(idx,1);}if(rec.pending.length===0&&rec.failed.length===0){delete bm.docsTx[documentId];if($H.isEmpty(bm.docsTx)){me.emptyTransactionQueue=true;}prjList=me.prjModel[p.realPid];if(prjList){delete prjList.list[documentId];if($H.isEmpty(prjList.list)){delete me.prjModel[p.realPid];}}bm.raiseEvent({name:"recordChanged",data:bm.docsTx});}if(callback.success){callback.success(d);}}},{noTaskURL:true,skipLogin:true});},submitOfflineTransaction:function submitOfflineTransaction(){if(!this.lastSubmission||!this.emptyTransactionQueue){$H.forEach(this.prjModel,function(v,k){if(v&&v.list&&!$H.isEmpty(v.list)&&!noPendingQueue(v.list)){mstrApp.submitTransactionQueue(k,"submitOfflineTransaction");}});}},onSubmitDone:function onSubmitDone(status){this.lastSubmission=status;this.refresh();},refresh:function refresh(){setBoardModel.call(this);}});mstrmojo.OfflineTransactionModel.PENDING=PENDING;mstrmojo.OfflineTransactionModel.FAILED=FAILED;}());