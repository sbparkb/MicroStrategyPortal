if(typeof (mstrmojo.gmaps)=="undefined"){mstrmojo.gmaps={};}(function(){mstrmojo.requiresCls("mstrmojo.css","mstrmojo.dom","mstrmojo.hash","mstrmojo.VisTooltip","mstrmojo.VisUtility","mstrmojo.gmaps._MapDataLabel","mstrmojo.gmaps.MapDataViewer","mstrmojo.models.template.DataInterface","mstrmojo.gmaps.MapPropertiesHelper","mstrmojo.gmaps.MapEnums");var $MOJO=mstrmojo,$CSS=$MOJO.css,$DOM=$MOJO.dom,$HASH=$MOJO.hash,$GMAPS=$MOJO.gmaps,$MDV=$GMAPS.MapDataViewer,$EnumMarkerType=$GMAPS.EnumMapType,$EnumClusterMode=$GMAPS.EnumClusterMode,$EnumGeographicRole=$GMAPS.EnumGeographicRole,VisUtil=mstrmojo.VisUtility,propHelper=$GMAPS.MapPropertiesHelper;var FEATURE_LAYER_QUERY_LIMIT=500;var _steps;var ATTRIBUTE_DELIMITER=",";var MIN_INFO_WINDOW_WIDTH=100,MAX_INFO_WINDOW_WIDTH=600,MIN_INFO_WINDOW_HEIGHT=50,MAX_INFO_WINDOW_HEIGHT=600,CONTENT_WIDTH_PADDING=26,CONTENT_HEIGHT_PADDING=20,MIN_LATITUDE=-90,MAX_LATITUDE=90;var INFO_WINDOW_CONTENT_NODE="esri-info-content-";function getInfoWindowId(){return INFO_WINDOW_CONTENT_NODE+this.id;}function isTextGraphic(g){if(g.symbol&&g.symbol.declaredClass=="esri.symbol.TextSymbol"){return true;}else{return false;}}function isClusteredGraphic(g){var isTextGraphic=g.symbol&&g.symbol.declaredClass==="esri.symbol.TextSymbol",isClusteredGraphic=false;if(!isTextGraphic){if(g.attributes.clusterCount){isClusteredGraphic=true;}}return isClusteredGraphic;}function isOneTierMac(){return mstrApp.isSingleTier&&mstrmojo.dom.getOSInfo().name.toLowerCase().indexOf("mac")>=0;}function getInfoWindowTitle(ifw){if(ifw&&ifw.children[0]){return ifw.children[0].title;}return"";}function blinkGraphic(graphic){var count=0,me=this,status=graphic.isHighlighted,interval=setInterval(function(){count++;me[status?"clearHighlight":"highlightGraphic"](graphic);status=!status;if(count===8){clearInterval(interval);}},200);}function verifyProtocol(m){if("https:"===window.location.protocol&&(-1!==m.search(/^http\:\/\/server\.arcgisonline\.com/i)||-1!==m.search(/^http\:\/\/services\.arcgisonline\.com/i)||-1!==m.search(/^http\:\/\/.+\.arcgis\.com/i))){m=m.replace(/http:/i,"https:");}return m;}function verifyGeoRole(attribute,skipNone){var _rtn=false,forms=attribute.fs,index,form,geoRole;for(index=0;index<forms.length;index++){form=forms[index];geoRole=form.fgr.toString();if((skipNone||geoRole!==$EnumGeographicRole.EnumGeographicRoleNone)&&geoRole!==$EnumGeographicRole.EnumGeographicRoleLatitiude&&geoRole!==$EnumGeographicRole.EnumGeographicRoleLongitude){_rtn=true;break;}}return _rtn;}function formatAttribute(attributes,rowIndex){var rowTitles=this.data.gts.row,rowHeaders=this.data.ghs.rhs.items[rowIndex].items,attrTitle,k,rowCell,rowCellTitle,rowCellValue;for(k=0;k<rowHeaders.length;k++){rowCell=rowHeaders[k];rowCellTitle=rowTitles[k].n;rowCellValue=this.parent.trimString(rowTitles[k].es[rowCell.idx].n);attrTitle=this.parent.replaceSpace(rowCellTitle);if(!attributes[attrTitle]){attributes[attrTitle]=rowCellValue;}}return attributes;}function getSymbolColor(rowIndex,defaultcolor){var colorString=this.getThresholdString(rowIndex,this.selectedMetricIndex,defaultcolor||this.DEFAULT_COLOR,true),dojoColor=new dojo.Color(colorString);dojoColor.a=0.75;return dojoColor;}function getHoverColor(color){var DELTA=25,minchn=Math.min(Math.min(color.r,color.g),color.b),maxchn=Math.max(Math.max(color.r,color.g),color.b),isDarker=minchn>255-maxchn;["r","g","b"].forEach(function(channel){if(isDarker){color[channel]=color[channel]-DELTA<0?0:color[channel]-DELTA;}else{color[channel]=color[channel]+DELTA<0?0:color[channel]+DELTA;}});color.a=0.7;return color;}mstrmojo.esrimap.ESRIMapViewer=mstrmojo.declare(mstrmojo.gmaps.MapDataViewer,[mstrmojo.gmaps._MapDataLabel],{scriptClass:"mstrmojo.esrimap.ESRIMapViewer",wpMapSizingStyle:"0",columnIndices:{state:-1,zip:-1},densityLayer:null,densityLocations:null,enableSelect:false,enableMarker:false,enablePolygon:false,enableDensity:false,_extent:null,geoElements:{},secondaryGeoElements:{},geoPosition:-1,geoSecondaryRolePosition:-1,infoWindowUseGrid:true,infoWindowVisible:false,previousTooltip:null,latIndex:-1,longIndex:-1,_markerElementIDs:null,markerLayer:null,markerLayerWrapper:null,polygonLayer:null,rowIndex2Graphics:null,useIncremetalFetch:false,points:null,previousState:null,savedSliceInfo:null,validBubble:false,viewCache:null,webmapConfig:null,basemapConfig:null,wpDensityTheme:null,wpDisPlayAffinityLines:false,clusterMode:$EnumClusterMode.OFF,clusterThreshold:500,isClustered:false,useCustomShape:false,useAttribute:false,viewerEventListeners:null,DEFAULT_COLOR:"#81BEF7",_features:[],_returnedQuery:0,_shapeToRowIndexMap:null,unrenderred:false,convertedNameMap:null,maxScale:0,minScale:0,tooltipWin:null,init:function init(props){this._super(props);this.primaryModel=this.addDisposable(new mstrmojo.models.template.DataInterface(this.data));this.loadWidgetProps();this.initMapDisplayMetrics();if(!this.tooltipWin){this.tooltipWin=new $MOJO.VisTooltip({widgetClass:"esriMap"});this.tooltipWin.render();}},loadWidgetProps:function loadWidgetProps(){this.viewerEventListeners=[];this.enableMarker=false;this.enablePolygon=false;this.enableDensity=false;this.bubbleMode=false;var props=this.widgetProps;if(!props){return false;}if($HASH.keyarray(props).length===0){props.sm="0";props.sa="1";}if(props.iwd){this.infoWindowHTML=unescape(props.iwd);this.parseInfoWindowHTML();}var property=props.at;if(property){this.applyThreshold=(property==="1");}if(!props.sa&&!props.mtp&&!props.sm){var rowCount=this.primaryModel.getTotalRows();props.mtp=this.widgetProps.mtp=(rowCount>500?$EnumMarkerType.Density:$EnumMarkerType.Marker);}if(!!props.mtp){if(props.mtp===$EnumMarkerType.Marker){this.enableMarker=true;}else{if(props.mtp===$EnumMarkerType.Bubble){this.enableMarker=true;this.bubbleMode=true;property=props.mbs;if(property){this.maxRadius=parseInt(property,10)/2;}property=props.mss;if(property){this.wpMapSizingStyle=property;}}else{if(props.mtp===$EnumMarkerType.Area){this.enablePolygon=true;}else{if(props.mtp===$EnumMarkerType.Density){if(this.parent.isCanvasSupported()){this.enableDensity=true;this.wpDensityTheme=parseInt(props.dms,10);}else{this.enableMarker=true;this.enableDensity=false;var property=props.at;if(property){this.applyThreshold=(property==="1");}mstrmojo.alert(mstrmojo.desc(9281,"Density Maps is not supported on this Browser version."));}}}}}}else{if(!!props.sm&&props.sm=="1"){this.enableMarker=true;}else{if(!!props.sa&&props.sa=="1"){this.enablePolygon=true;}}}if(this.enableMarker&&!(this.dropZones.latitude&&this.dropZones.longitude)&&!!props.sa&&props.sa=="1"){this.enablePolygon=true;this.enableMarker=false;}if(props.aff==="1"){this.wpDisPlayAffinityLines=true;}if(props.mc){this.clusterMode=props.mc;switch(this.clusterMode){case $EnumClusterMode.ON:case $EnumClusterMode.PIE:case $EnumClusterMode.MOBILE_ON:this.isClustered=true;break;case $EnumClusterMode.OFF:case $EnumClusterMode.MOBILE_OFF:default:this.isClustered=false;break;}}if(props.af&&parseInt(props.af,10)===0){this.useAttribute=true;}},handleMetricSelectionChange:function handleMetricSelectionChange(){if(this.enableMarker){this.adjustMarkerColor();}if(this.enablePolygon){this.adjustPolygonColor();}},addDensity:function addDensity(point,attributes,simpleHTML,geoPosition){if(this.densityLocations===null){this.densityLocations=[];}this.densityLocations.push({position:point,attributes:attributes,geoPosition:geoPosition,infoWindowContent:simpleHTML});},adjustMarkerColor:function adjustMarkerColor(){var g;if(this.markerLayer===null){return ;}this.populateBubbleVariables();var defaultSymbol=new esri.symbol.SimpleFillSymbol(esri.symbol.SimpleFillSymbol.STYLE_SOLID,new esri.symbol.SimpleLineSymbol(esri.symbol.SimpleLineSymbol.STYLE_SOLID,new dojo.Color([255,255,255,0.35]),1),new dojo.Color([125,125,125,0.35]));var graphics=this.markerLayer.graphics;var numGraphics=graphics.length;var symbol;for(g=0;g<numGraphics;g++){var graphic=graphics[g];if(isTextGraphic(graphic)||isClusteredGraphic(graphic)){continue;}symbol=graphic.symbol;var rowIndex=graphic.attributes.rowIndex;var rowValue=this.data.gvs.items&&this.data.gvs.items[rowIndex].items;var rowCell;var type=this.enumNumber;if(rowValue!=undefined&&rowValue instanceof Array){rowCell=rowValue[this.selectedMetricIndex];type=rowCell.ty;}var colorString,dojoColor;if(!this.bubbleMode){switch(type){case this.enumImage:case this.enumUrl:var imageString=this.getThresholdString(rowIndex,this.selectedMetricIndex,"no",false);if(imageString!="no"){if(symbol instanceof esri.symbol.PictureMarkerSymbol){symbol.setUrl(imageString);}else{symbol=new esri.symbol.PictureMarkerSymbol(imageString,20,20);}}break;case this.enumText:case this.enumQuickSymbol:colorString=this.getThresholdString(rowIndex,this.selectedMetricIndex,"#ffffff",false);dojoColor=new dojo.Color(colorString);dojoColor.a=0.75;symbol=new esri.symbol.TextSymbol(this.parent.getQuickSymbol(rowCell.v)).setColor(dojoColor).setAlign(esri.symbol.Font.ALIGN_START).setFont(new esri.symbol.Font("12pt").setWeight(esri.symbol.Font.WEIGHT_BOLD));break;case this.enumNumber:default:colorString=this.getThresholdString(rowIndex,this.selectedMetricIndex,this.DEFAULT_COLOR,true);dojoColor=new dojo.Color(colorString);dojoColor.a=0.75;if(symbol instanceof esri.symbol.SimpleMarkerSymbol){symbol=graphic.symbol.setColor(dojoColor);}else{symbol=new esri.symbol.SimpleMarkerSymbol();symbol.setColor(dojoColor);}symbol.setStyle(esri.symbol.SimpleMarkerSymbol.STYLE_DIAMOND);symbol.setOutline(this.parent.regularStroke);break;}}else{colorString=this.getThresholdString(rowIndex,this.selectedMetricIndex,this.DEFAULT_COLOR,true);dojoColor=new dojo.Color(colorString);dojoColor.a=0.75;symbol=new esri.symbol.SimpleMarkerSymbol();symbol.setColor(dojoColor);symbol.setStyle(esri.symbol.SimpleMarkerSymbol.STYLE_CIRCLE);var size=this.calculateBubbleSize(rowIndex);symbol.setSize(size);symbol.setOutline(this.parent.regularStroke);}graphic.setSymbol(symbol);}this.markerLayer.refresh();},adjustPolygonColor:function adjustPolygonColor(){var g;if(this.polygonLayer===null){return ;}var graphics=this.polygonLayer.graphics;var numGraphics=graphics.length;for(g=0;g<numGraphics;g++){var graphic=graphics[g];var rowIndex=graphic.attributes.rowIndex;var colorString=this.getThresholdString(rowIndex,this.selectedMetricIndex,this.DEFAULT_COLOR,true);var dojoColor=new dojo.Color(colorString);dojoColor.a=0.75;graphic.setSymbol(graphic.symbol.setColor(dojoColor));}this.polygonLayer.refresh();},calculateBubbleSize:function calculateBubbleSize(rowIndex){var radius=this._super(rowIndex);return 2*radius;},clearPoints:function clearPoints(){this.points=new esri.geometry.Multipoint(this.parent.esriMap.spatialReference);},clearAllHighlight:function clearAllHighlight(){var i,j,highlightedGraphics,hilightCount,g;for(i in this.highlightedGraphics){if(this.highlightedGraphics[i] instanceof Array){highlightedGraphics=this.highlightedGraphics[i];hilightCount=highlightedGraphics.length;for(j=0;j<hilightCount;j++){g=highlightedGraphics[j];g.isSelected=false;this.clearHighlight(g);}}}},createDensityMap:function createDensityMap(){this.cleanDensityMap();var parent=this.parent;this.densityLayer=new mstrmojo.esrimap.ESRIDensityLayer({width:parseInt(parent.width),height:parseInt(parent.height),map:parent.esriMap,mapViewer:this,themeId:this.wpDensityTheme,bounds:this._extent,locations:this.densityLocations,originalzIndex:this.layerIndex,visible:false});this.densityLayer.addLayer(parent.esriMap);},cleanDensityMap:function cleanDensityMap(){if(this.densityLayer){this.densityLayer.removeLayer(this.parent.esriMap);this.densityLayer.destroy();this.densityLayer=null;}},createGridInfoWindow:function createGridInfoWindow(div,dataRows,geoColumnIndices){var table=div.childNodes[0],data=this.data,parent=this.parent,cell,header,tui,idx,td,titleSpan,i,j,k,tr,cssStyle,thead,numRowAttributes,numColAttributes,tbody,numRows,metricValues,numMetrics,numAttributes,rowIndex,rowHeaders,attributeName,metricValue,thresholdType;if(!table){table=parent.createEmptyGridInfoWindowTable();div.appendChild(table);cssStyle=parent.createInfoTabDivCSSStyle();if(cssStyle!==null){div.appendChild(cssStyle);}}table.id=getInfoWindowId.call(this);while(!!table&&table.rows.length>0){table.deleteRow(table.rows.length-1);}if(table.tHead){thead=table.tHead;while(thead.rows.length>0){thead.deleteRow(thead.rows.length-1);}tr=thead.insertRow(thead.rows.length);numRowAttributes=data.ghs.rhs.items&&data.ghs.rhs.items.length>0?data.ghs.rhs.items[0].items.length:0;numColAttributes=data.ghs.chs.items&&data.ghs.chs.items.length>0?data.ghs.chs.items[0].items.length:0;for(i=0;i<numRowAttributes;i++){if(this.canSkipItem(i,geoColumnIndices)){continue;}td=tr.insertCell(tr.cells.length);titleSpan=document.createElement("span");titleSpan.innerHTML=parent.getAttributeName(i);td.appendChild(titleSpan);}for(i=0;i<numColAttributes;i++){td=tr.insertCell(tr.cells.length);cell=data.ghs.chs.items[0].items[i];tui=cell.tui;idx=cell.idx;header=data.gts.col[tui].es[idx];titleSpan=document.createElement("span");titleSpan.innerHTML=header.n;td.appendChild(titleSpan);}}tbody=table.tBodies[0];numRows=dataRows.length;metricValues=data.gvs.items;numMetrics=!!metricValues?metricValues[0].items.length:0;numAttributes=data.ghs.rhs.items[0].items.length;for(i=0;i<numRows;i++){rowIndex=dataRows[i];tr=tbody.insertRow(tbody.rows.length);rowHeaders=data.ghs.rhs.items[rowIndex].items;for(j=0;j<numAttributes;j++){if(this.canSkipItem(j,geoColumnIndices)){continue;}cell=rowHeaders[j];if(!cell||cell.idx<0){td=tr.insertCell(tr.cells.length);td.innerHTML=" ";continue;}idx=cell.idx;td=tr.insertCell(tr.cells.length);attributeName=data.gts.row[j].es[idx].n;if(j===this.geoPosition&&i>0){td.innerHTML="    ";}else{td.innerHTML="    "+attributeName+"    ";}}for(k=0;k<numMetrics;k++){metricValue=metricValues[rowIndex].items[k].v;thresholdType=metricValues[rowIndex].items[k].ty;td=tr.insertCell(tr.cells.length);if(thresholdType===this.enumImage){td.innerHTML='    <img src="'+metricValue+'"/>    ';}else{td.innerHTML="    "+metricValue+"    ";}}}},createLookup:function createLookup(){var dataLookup={},rowIndex,rowHeader=this.data.ghs.rhs.items,rowGeoHeader,name;for(rowIndex=0;rowIndex<rowHeader.length;rowIndex++){rowGeoHeader=rowHeader[rowIndex].items[this.geoPosition];name=this.data.gts.row[this.geoPosition].es[rowGeoHeader.idx].n;name=this.parent.trimString(name);name=name.toLowerCase?name.toLowerCase():name;if(!!dataLookup[name]){continue;}dataLookup[name]={rowIndex:rowIndex,geoIndex:rowGeoHeader.idx};}return dataLookup;},getCssClass:function getCssClass(cssIndex){if(cssIndex<0||cssIndex>this.data.css.length){return"";}return this.data.css[cssIndex].n;},canSkipItem:function canSkipItem(idx,skipIndices){var rowTitles=this.data.gts.row,tooltipElements=this.dropZones.tooltips,unitId=rowTitles[idx].id,rowHeaders=this.data.ghs.rhs.items[0].items,rowCell=rowHeaders[idx],titleLength=rowTitles.length,headerLength=rowHeaders.length,rowCellTitle=titleLength<headerLength?rowTitles[rowCell.tui].n:rowTitles[idx].n;if(!tooltipElements||mstrmojo.array.indexOf(tooltipElements,unitId)<0){if(!!this.dropZones.geoAttribute&&(this.isIndexGeoPosition(idx,skipIndices)||this.strContainsLatLng(rowCellTitle))){return true;}}return false;},showMetric:function showMetric(){if(this.data.gts.col.length===1&&this.data.gts.col[0].otp===-1){return true;}return false;},getDefaultInfoWindowTemplate:function getDefaultInfoWindowTemplate(skipIndices){var contentHTML='<table id="'+getInfoWindowId.call(this)+'" class="nonGridInfoWindow">',rowHeaders=this.data.ghs.rhs.items[0].items,rowTitles=this.data.gts.row,rowCell,rowCellTitle,j,k,lastAttrIdx,attIdx,titleLength=rowTitles.length,headerLength=rowHeaders.length,keepCheck=true,parent=this.parent,showMetric=this.showMetric(),itemSkip=[];if(!showMetric&&skipIndices.length===headerLength){keepCheck=false;}for(k=0;k<headerLength&&keepCheck;k++){if(this.canSkipItem(k,skipIndices)){itemSkip[k]=true;}}for(k=headerLength-1;k>=0;k--){if(!itemSkip[k]){break;}}lastAttrIdx=k;for(k=0;k<headerLength;k++){if(itemSkip[k]){continue;}if(!showMetric&&(k===lastAttrIdx)){contentHTML+='<tr class="lastRow">';}else{contentHTML+="<tr>";}rowCell=rowHeaders[k];attIdx=titleLength<headerLength?rowCell.tui:k;rowCellTitle=rowTitles[attIdx].n;contentHTML+="<th>"+parent.getAttributeName(attIdx)+":</th><td> ${"+parent.replaceSpace(rowCellTitle)+"}</td>";contentHTML+="</tr>";}if(showMetric){rowHeaders=this.data.gts.col[0].es;for(j=0;j<rowHeaders.length;j++){contentHTML+=j<rowHeaders.length-1?"<tr>":'<tr class="lastRow">';rowCellTitle=rowHeaders[j].n;contentHTML+="<th>"+rowCellTitle+":</th><td>${"+parent.replaceSpace(rowCellTitle)+"}</td>";contentHTML+="</tr>";}}contentHTML+="</table>";return contentHTML;},getExtent:function getExtent(){return this._extent;},getGeoColumnIndex:function getGeoColumnIndex(){if(this.enablePolygon){return this.geoPosition;}if(this.enableMarker||this.enableDensity){return this.latIndex;}},getGraphics:function getGraphics(){if(this.enablePolygon===true){return this.polygonLayer&&this.polygonLayer.graphics;}else{return null;}},handleClickEvent:function handleClickEvent(evt){if(this.parent.enableClickSelect){this.handleSelection(evt.graphic,evt.ctrlKey);this.parent.handleSingleSelection(true);if(VisUtil.isOnExpressMode()){this.handlePanelStackInfoWindow(evt.graphic,null,evt.screenPoint);}}dojo.stopEvent(evt);},handleMouseMoveEvent:function handleMouseMoveEvent(evt){evt.graphic.isHover=true;if(this.parent.enablePopup){this.parent.set("infoWindowVisible",true);this.showTooltip(evt);}},handleMouseOutEvent:function handleMouseOutEvent(evt){evt.graphic.isHover=false;if(this.parent.enablePopup){this.clearHighlight(evt.graphic);if(this.infoWindowVisible){this.hideTooltip(evt);}}},handleMouseUpEvent:function handleMouseUpEvent(evt){if(!this.parent.toolbarStateChanged&&this.parent.isRightClick(evt)){var evtGraphic=evt.graphic;if(evtGraphic&&!evtGraphic.isSelected){this.handleSelection(evt.graphic,evt.ctrlKey);}}this.parent.handleMouseUp(evt);},handleDensitySelection:function handleDensitySelection(cluster){if(!this.parent.enableClickSelect){return ;}var geoIndex,rowIndex,columnIndices=cluster[0].attributes.columnIndices,columnIndex=columnIndices[0],geoCount=cluster.length,index;var currentSelections=this.getCurrentSelections(columnIndex);var selectedRowIndices=this.getSelectedRowIndices(columnIndex);if(!this.previousState){this.previousState={};this.previousState.columnIndex=columnIndex;this.previousState.currentSelections=currentSelections.slice(0);this.previousState.selectedRowIndices=selectedRowIndices.slice(0);this.previousState.highlightedGraphics=[];this.previousState.mapObjectsState={selectedObj:[],unselectedObj:[]};this.previousState.stateChangedMarker=[];}var isAdd=true;var map=this.parent.esriMap;for(index=0;index<geoCount;index++){geoIndex=cluster[index].attributes.geoIndex;rowIndex=cluster[index].attributes.rowIndex;var i=mstrmojo.array.indexOf(selectedRowIndices,rowIndex);if(i!=-1){if(this.parent.isCtrl||selectedRowIndices.length<=1){currentSelections.splice(i,1);selectedRowIndices.splice(i,1);this.removeVisSelection(rowIndex);}else{this.removeVisSelection(selectedRowIndices);selectedRowIndices.splice(0,selectedRowIndices.length,rowIndex);currentSelections.splice(0,currentSelections.length,geoIndex);this.addVisSelection(rowIndex);}}else{if(this.parent.isCtrl){currentSelections.push(geoIndex);selectedRowIndices.push(rowIndex);this.addVisSelection(rowIndex);}else{this.removeVisSelection(selectedRowIndices);selectedRowIndices.splice(0,selectedRowIndices.length,rowIndex);currentSelections.splice(0,currentSelections.length,geoIndex);this.addVisSelection(rowIndex);}}}this.savedSliceInfo={pos:columnIndices,elementIndex:currentSelections,setViewDataFlag:false,applyControl:true,beanPath:this.beanPath};},handleDensityExtentDraw:function handleDensityExtentDraw(geometry){var map=this.parent.esriMap,columnIndex=this.latIndex,currentSelections,selectedRowIndices,point,i,j,selection=[],location;currentSelections=this.getCurrentSelections(columnIndex);selectedRowIndices=this.getSelectedRowIndices(columnIndex);for(i=0,len=this.densityLocations.length;i<len;i++){location=this.densityLocations[i];j=mstrmojo.array.indexOf(selectedRowIndices,location.attributes.rowIndex);if(j==-1&&geometry.contains(location.position)){currentSelections.push(location.attributes.geoIndex);selectedRowIndices.push(location.attributes.rowIndex);this.addVisSelection(location.attributes.rowIndex);}}if(this.enableSelect){var sliceInfo={pos:[this.latIndex,this.longIndex],elementIndex:currentSelections,setViewDataFlag:false,applyControl:true,beanPath:this.beanPath};this.command.applySelection(sliceInfo);}this.parent.markerSelected=((currentSelections.length>0)?true:false);},handleExtentDraw:function handleExtentDraw(geometry){if(this.enableMarker&&this.markerLayer){this.handleMarkerExtentDraw(geometry);}if(this.enablePolygon){this.handlePolygonExtentDraw(geometry);}if(this.enableDensity){this.handleDensityExtentDraw(geometry);}this.endSelections();},handleMarkerExtentDraw:function handleMarkerExtentDraw(geometry){var map=this.parent.esriMap,columnIndex=this.latIndex,highlightedGraphics=this.getHighlightedGraphics(columnIndex),currentSelections=this.getCurrentSelections(columnIndex),selectedRowIndices=this.getSelectedRowIndices(columnIndex),graphics=this.markerLayer.graphics,numGraphics=graphics.length;var geoIndices,rowIndices,geoCount,rowCount,g,i,j;for(i=0;i<numGraphics;i++){g=graphics[i];if(isTextGraphic(g)){continue;}j=mstrmojo.array.indexOf(selectedRowIndices,g.attributes.rowIndex);if(j==-1&&geometry.contains(g.geometry)){if(isClusteredGraphic(g)){geoIndices=g.attributes.geoIndices;rowIndices=g.attributes.rowIndices;geoCount=geoIndices.length;rowCount=rowIndices.length;for(j=0;j<geoCount;j++){currentSelections.push(geoIndices[j]);}for(j=0;j<rowCount;j++){selectedRowIndices.push(rowIndices[j]);}this.addVisSelection(rowIndices);}else{currentSelections.push(g.attributes.geoIndex);selectedRowIndices.push(g.attributes.rowIndex);this.addVisSelection(g.attributes.rowIndex);}g.isSelected=true;this.highlightGraphic(g);highlightedGraphics.push(g);}}if(this.enableSelect){var sliceInfo={pos:[this.latIndex,this.longIndex],elementIndex:currentSelections,setViewDataFlag:false,applyControl:true,beanPath:this.beanPath};this.command.applySelection(sliceInfo);}this.parent.markerSelected=((currentSelections.length>0)?true:false);},handlePolygonExtentDraw:function handlePolygonExtentDraw(geometry){var i,j;var graphic;var map=this.parent.esriMap;var highlightOutline=new esri.symbol.SimpleLineSymbol(esri.symbol.SimpleLineSymbol.STYLE_SOLID,new dojo.Color([0,0,255],0.35),2);var columnIndex=this.geoPosition;var highlightedGraphics=this.getHighlightedGraphics(columnIndex);var currentSelections=this.getCurrentSelections(columnIndex);var selectedRowIndices=this.getSelectedRowIndices(columnIndex);var graphics=this.polygonLayer.graphics;var numGraphics=graphics.length;var isIntersected=false;for(i=0;i<numGraphics;i++){var g=graphics[i];j=mstrmojo.array.indexOf(selectedRowIndices,g.attributes.rowIndex);if(j===-1){isIntersected=this.intersects(geometry,g.geometry);}if(isIntersected){this.updatePolygonGraphicInfo(g);currentSelections.push(g.attributes.geoIndex);selectedRowIndices.push(g.attributes.rowIndex);this.addVisSelection(g.attributes.rowIndex);g.isSelected=true;this.highlightGraphic(g);highlightedGraphics.push(g);}}if(this.enableSelect){var sliceInfo={pos:[this.geoPosition],elementIndex:currentSelections,setViewDataFlag:false,applyControl:true,beanPath:this.beanPath};this.command.applySelection(sliceInfo);}this.parent.markerSelected=((currentSelections.length>0)?true:false);},intersects:function intersects(geometry1,geometry2){var isIntersected=false,rings,ring,ringNumber,i,j,pointNumber,point,mapPoint;if(!geometry1||!geometry2){return false;}if(geometry1.getExtent().intersects(geometry2.getExtent())){rings=geometry2.rings;ringNumber=rings?rings.length:0;for(i=0;i<ringNumber;i++){ring=rings[i];pointNumber=ring?ring.length:0;for(j=0;j<pointNumber;j++){point=ring[j];mapPoint=new esri.geometry.Point(point[0],point[1],geometry2.spatialReference);if(geometry1.contains(mapPoint)){isIntersected=true;break;}}if(isIntersected){break;}}if(!isIntersected){rings=geometry1.rings;ringNumber=rings?rings.length:0;for(i=0;i<ringNumber;i++){ring=rings[i];pointNumber=ring?ring.length:0;for(j=0;j<pointNumber;j++){point=ring[j];mapPoint=new esri.geometry.Point(point[0],point[1],geometry1.spatialReference);if(geometry2.contains(mapPoint)){isIntersected=true;break;}}if(isIntersected){break;}}}}return isIntersected;},handleSelection:function handleSelection(evtGraphic,isCtrl,isAdd){if(!this.parent.enableClickSelect){return ;}var geoIndices,rowIndices,geoIndex,rowIndex,columnIndices=evtGraphic.attributes.columnIndices,columnIndex=columnIndices[0],highlightedGraphics=this.getHighlightedGraphics(columnIndex),currentSelections=this.getCurrentSelections(columnIndex),selectedRowIndices=this.getSelectedRowIndices(columnIndex),hgLen=highlightedGraphics.length,geoCount,sliceInfo,sliceGraphic,i,il,j,isRemove,isClear,isClustered;if(isTextGraphic(evtGraphic)){evtGraphic=evtGraphic.refGraphic;}isClustered=isClusteredGraphic(evtGraphic);if(isClustered){geoIndices=evtGraphic.attributes.geoIndices;rowIndices=evtGraphic.attributes.rowIndices;}else{geoIndices=[evtGraphic.attributes.geoIndex];rowIndices=[evtGraphic.attributes.rowIndex];}geoCount=geoIndices.length;if(!this.previousState){this.previousState={};this.previousState.columnIndex=columnIndex;this.previousState.currentSelections=currentSelections.slice(0);this.previousState.selectedRowIndices=selectedRowIndices.slice(0);this.previousState.highlightedGraphics=highlightedGraphics.slice(0);this.previousState.mapObjectsState={selectedObj:[],unselectedObj:[]};this.previousState.stateChangedMarker=[];}isRemove=!!evtGraphic.isSelectionItem&&(isCtrl||(!isCtrl&&selectedRowIndices.length===geoCount));isClear=!isCtrl&&(!evtGraphic.isSelectionItem||(evtGraphic.isSelectionItem&&selectedRowIndices.length!==geoCount));if((!isAdd)&&isRemove){for(i=0;i<geoCount;i++){geoIndex=geoIndices[i];rowIndex=rowIndices[i];j=mstrmojo.array.indexOf(selectedRowIndices,rowIndex);if(j!==-1){currentSelections.splice(j,1);selectedRowIndices.splice(j,1);this.removeVisSelection(rowIndex);}}for(i=0;i<hgLen;i++){rowIndex=highlightedGraphics[i].attributes.rowIndex;j=mstrmojo.array.indexOf(rowIndices,rowIndex);if(j!==-1){highlightedGraphics.splice(i--,1);hgLen--;}}evtGraphic.isSelected=false;this.clearHighlight(evtGraphic);}else{if((!isAdd)&&isClear){this.removeVisSelection(selectedRowIndices);selectedRowIndices.splice(0,selectedRowIndices.length);currentSelections.splice(0,currentSelections.length);this.previousState.mapObjectsState.unselectedObj.splice(0,this.previousState.mapObjectsState.unselectedObj.length);this.clearAllHighlight();highlightedGraphics.splice(0,hgLen);}for(i=0;i<geoCount;i++){geoIndex=geoIndices[i];rowIndex=rowIndices[i];j=mstrmojo.array.indexOf(selectedRowIndices,rowIndex);if(j===-1){currentSelections.push(geoIndex);selectedRowIndices.push(rowIndex);this.addVisSelection(rowIndex);}}if(evtGraphic.isPieCluster){for(i=0,il=evtGraphic.sliceGraphics.length;i<il;i++){sliceGraphic=evtGraphic.sliceGraphics[i];if(!sliceGraphic.isSelectionItem){highlightedGraphics.push(sliceGraphic);}}}else{highlightedGraphics.push(evtGraphic);}this.previousState.mapObjectsState.unselectedObj.push(evtGraphic);evtGraphic.isSelected=true;this.highlightGraphic(evtGraphic);}sliceInfo={pos:columnIndices,elementIndex:currentSelections,setViewDataFlag:false,applyControl:true,beanPath:this.beanPath};this.savedSliceInfo=sliceInfo;},onMapClick:function onMapClick(evt){var map=this.parent,clearAllIsDisabled=map.isClearAllDisabled();if(map.enablePopup&&!clearAllIsDisabled){map.clearAllLayerSelections();}},hideInfoWindow:function hideInfoWindow(){if(this.parent.enablePopup){this.parent.esriMap.infoWindow.hide();this.infoWindowVisible=false;}},hideTooltip:function hideTooltip(){if(this.parent.enablePopup){var win=this.tooltipWin.domNode;if(win&&win.parentNode){this.tooltipWin.toggle(false);win.parentNode.removeChild(win);win.innerHTML="";this.previousTooltip=null;}this.infoWindowVisible=false;}},strContainsLatLng:function strContainsLatLng(str){if(!!str&&(str.toLowerCase().indexOf("latitude")>-1||str.toLowerCase().indexOf("longitude")>-1)){return true;}return false;},findMappableAttributes:function findMappableAttributes(rowAttributes,geoAttrIndics){var numTemplateUnits=rowAttributes.length,latFormId=this.dropZones.latitude,longFormId=this.dropZones.longitude,attrId=this.dropZones.geoAttribute,formId,i;function findGeo(attrId){for(i=0;i<numTemplateUnits;i++){if(!this.useAttribute){if(rowAttributes[i].id===attrId){formId=rowAttributes[i].fid;if(formId===latFormId){this.latIndex=i;}else{if(formId===longFormId){this.longIndex=i;}else{geoAttrIndics.push(i);}}}}else{if(rowAttributes[i].id===latFormId){this.latIndex=i;}else{if(rowAttributes[i].id===longFormId){this.longIndex=i;}}}}if(this.latIndex<0||this.longIndex<0){return false;}return true;}function findGeoOnTemplate(){var numTemplateUnits=rowAttributes.length,i,tmpLatIdx=-1,tmpLongIdx=-1,tmpAttrId={};for(i=0;i<numTemplateUnits;i++){if(!this.useAttribute){formId=rowAttributes[i].fid;if(formId===latFormId){tmpLatIdx=i;tmpAttrId[rowAttributes[i].id]=true;}else{if(formId===longFormId){tmpLongIdx=i;tmpAttrId[rowAttributes[i].id]=true;}}}}if(tmpLatIdx>=0&&tmpLongIdx>=0&&$HASH.keyarray(tmpAttrId).length===1){return $HASH.keyarray(tmpAttrId)[0];}return null;}if(findGeo.call(this,attrId)){return true;}var tmpGeoAttrId=findGeoOnTemplate.call(this);if(tmpGeoAttrId){return findGeo.call(this,tmpGeoAttrId);}return false;},initMarkerMap:function initMarkerMap(createMode){if(!createMode){if(this.enableMarker){this.markerLayer.show();this.showDataLabelLayer();}if(this.enableDensity){this.densityLayer.showLayer();}this.parent.hideWait();return ;}var i,rowIndex,columnHeaderColumnIndex,columnHeaderRowIndex,validSymbol,symbol,pointInfo,graphic,infoTemplate,formId,rowHeaderElements,rowHeaderElement,latitudeElement,longitudeElement,latitude,longitude,latitudeId,longitudeId,geoIndex,longGeoIndex,attributes,elementValue,values,columnHeaderName,thresholdType,type,dojoColor,cell,cellName,cellElement,fnCreateSymbol,textSybmolText,symbolSize,bubbleSize,colorString,imageString,point,idkey,dlTextName,me=this,textSymbolStyle={fontFamily:"Serif",fontSize:"12pt",fontWeight:"bold",fontStyle:"normal"},geoAttrIndics=[],dataLabelsConfig=this.dataLabelsConfig=[],rowHeaders=this.data.ghs.rhs.items,columnHeaders=this.data.ghs.chs.items,pointsData=[],graphicsData=[],map=this.parent.esriMap,data=this.data.gvs.items,rowCount=this.primaryModel.getTotalRows(),rowAttributes=this.data.gts.row,columnMetrics=this.data.gts.col;this.clearPoints();this.idMarkerMap={};this._markerElementIDs={};this.parent.populateOriginalPosition();this.populateBubbleVariables();this.longIndex=-1;this.latIndex=-1;this.rowIndex2Graphics={};if(!this.findMappableAttributes(rowAttributes,geoAttrIndics)){this.parent.hideWait();this.parent.updateMapExtent();if(console&&console.log){console.log("No Mappable attributes present on the report.");}return ;}infoTemplate=this.populateInfoTemplate(" ",[this.latIndex,this.longIndex]);if(!this.enableDensity&&this.isClustered){try{mstrmojo.requiresCls("mstrmojo.esrimap.ClusterLayerWrapper");}catch(e){this.parent.hideWait();this.isClustered=false;}}else{if(this.enableDensity){try{mstrmojo.requiresCls("mstrmojo.esrimap.ESRIDensityLayer");}catch(e){this.parent.hideWait();mstrmojo.alert("Unable to load ESRIDensityLayer.");}}}fnCreateSymbol=function(rowIndex,style,size){var colorStr=me.getThresholdString(rowIndex,me.selectedMetricIndex,me.DEFAULT_COLOR,true),color=new dojo.Color(colorStr),markerSymbol=new esri.symbol.SimpleMarkerSymbol();color.a=0.75;markerSymbol.setStyle(style);markerSymbol.setColor(color);markerSymbol.setOutline(me.parent.regularStroke);if(style===esri.symbol.SimpleMarkerSymbol.STYLE_CIRCLE&&size){markerSymbol.setSize(size);}return markerSymbol;};for(rowIndex=rowCount-1;rowIndex>=0;rowIndex--){validSymbol=true;rowHeaderElements=rowHeaders[rowIndex].items;latitudeElement=rowHeaderElements[this.latIndex];if(!latitudeElement||latitudeElement.idx<0){continue;}latitude=this.parent.stripNumberFormat(rowAttributes[this.latIndex].es[latitudeElement.idx].n);latitudeId=rowAttributes[this.latIndex].es[latitudeElement.idx].id;if(latitudeId.indexOf("DB:")===0||this.parent.trimString(latitude)===""){continue;}longitudeElement=rowHeaderElements[this.longIndex];if(!longitudeElement||longitudeElement.idx<0){continue;}longitude=this.parent.stripNumberFormat(rowAttributes[this.longIndex].es[longitudeElement.idx].n);longitudeId=rowAttributes[this.longIndex].es[longitudeElement.idx].id;if(longitudeId.indexOf("DB:")===0||this.parent.trimString(longitude)===""){continue;}if(!this.isValidLatLng(latitude,longitude)){continue;}if(latitudeId===longitudeId){idkey=latitudeId;}else{idkey=latitudeId+"|"+longitudeId;}if(this.idMarkerMap[idkey]){continue;}attributes={};dlTextName="";for(i=0;i<rowHeaderElements.length;i++){rowHeaderElement=rowHeaderElements[i];if(rowHeaderElement.idx<0){continue;}if(i===this.latIndex){geoIndex=rowHeaderElement.idx;}if(i===this.longIndex){longGeoIndex=rowHeaderElement.idx;}elementValue=rowAttributes[i].es[rowHeaderElement.idx].n;attributes[this.parent.replaceSpace(rowAttributes[i].n)]=elementValue;if(geoAttrIndics.indexOf(i)>=0){dlTextName+=!dlTextName?elementValue:" "+elementValue;}}values=!!data?data[rowIndex].items:[];for(columnHeaderColumnIndex=0;columnHeaderColumnIndex<values.length;columnHeaderColumnIndex++){columnHeaderName=null;for(columnHeaderRowIndex=0;columnHeaderRowIndex<columnHeaders.length;columnHeaderRowIndex++){cellElement=columnHeaders[columnHeaderRowIndex].items[columnHeaderColumnIndex];cellName=columnMetrics[cellElement.tui].es[cellElement.idx].n;if(columnHeaderName===null){columnHeaderName=cellName;}else{columnHeaderName+=" "+cellName;}}if(!columnHeaderName){continue;}thresholdType=values[columnHeaderColumnIndex].ty;if(!thresholdType||thresholdType===this.enumNumber){attributes[this.parent.replaceSpace(columnHeaderName)]=values[columnHeaderColumnIndex].v;}else{attributes[this.parent.replaceSpace(columnHeaderName)]=values[columnHeaderColumnIndex].rv;}}attributes.rowIndex=rowIndex;attributes.geoIndex=geoIndex;attributes.longGeoIndex=longGeoIndex;attributes.columnIndices=[this.latIndex,this.longIndex];attributes.layerKey=this.k;cell=values[this.selectedMetricIndex];type=!!cell&&this.applyThreshold?cell.ty:this.enumDefault;if(!this.enableDensity){if(!this.bubbleMode){switch(type){case this.enumText:case this.enumQuickSymbol:colorString=this.getThresholdString(rowIndex,this.selectedMetricIndex,"#ffffff",false);dojoColor=new dojo.Color(colorString);dojoColor.a=0.75;textSybmolText=this.parent.getQuickSymbol(cell.v);symbol=new esri.symbol.TextSymbol(textSybmolText).setColor(dojoColor).setFont(new esri.symbol.Font("12pt").setWeight(esri.symbol.Font.WEIGHT_BOLD));symbolSize=VisUtil.measureTextSize(textSybmolText,textSymbolStyle);break;case this.enumImage:case this.enumUrl:imageString=this.getThresholdString(rowIndex,this.selectedMetricIndex,"no",false);if(imageString!=="no"){symbol=new esri.symbol.PictureMarkerSymbol(imageString,20,20);symbolSize={width:20,height:20};}else{validSymbol=false;}break;default:symbol=fnCreateSymbol(rowIndex,esri.symbol.SimpleMarkerSymbol.STYLE_DIAMOND);symbolSize={width:16,height:16};break;}}else{bubbleSize=this.calculateBubbleSize(rowIndex);symbol=fnCreateSymbol(rowIndex,esri.symbol.SimpleMarkerSymbol.STYLE_CIRCLE,bubbleSize);symbolSize={width:bubbleSize,height:bubbleSize};}}if(validSymbol){point=new esri.geometry.Point(longitude,latitude,this.parent.esriMap.spatialReference);if(this.isWebMercator(map.spatialReference)){point=esri.geometry.geographicToWebMercator(point);}if(point){this.points.addPoint(point);}if(!this.enableDensity){if(this.isClustered){pointInfo={x:parseFloat(point.x),y:parseFloat(point.y),attributes:attributes,infoWindowContent:this.infoWindowHTML,singleSymbol:symbol,dlTextName:dlTextName,symbolSize:symbolSize};if(this.dropZones.angle){pointInfo.absAngleMetricVal=Math.abs(this.getAngleMetricValue(rowIndex));}pointsData.push(pointInfo);this.idMarkerMap[idkey]=symbol;}else{graphic=new esri.Graphic(point,symbol,attributes,infoTemplate);graphicsData.push(graphic);this.idMarkerMap[idkey]=graphic;this.rowIndex2Graphics[rowIndex]=graphic;dataLabelsConfig.push({text:dlTextName,rowIndex:rowIndex,mapPoint:point,symbolSize:symbolSize});}}else{this.addDensity(point,attributes,this.infoWindowHTML,this.geoPosition);}this._markerElementIDs[this.parent.getElementIdWithoutAttributeID(idkey)]=point;}}var markerLayer=this.markerLayer,markerType=1,markerLayerWrapper=this.markerLayerWrapper;if(!this.enableDensity){if(!markerLayer){if(this.isClustered){if(this.bubbleMode){markerType=2;}if(markerLayerWrapper){markerLayerWrapper.destroy();}markerLayerWrapper=new mstrmojo.esrimap.ClusterLayerWrapper({clusterData:pointsData,clusterTolerance:50,clusterLabelColor:"#fff",singleTemplate:infoTemplate,sr:map.spatialReference,markerType:markerType,visible:true,mapViewer:this});markerLayer=markerLayerWrapper.clusterLayer;this.markerLayerWrapper=markerLayerWrapper;}else{markerLayer=new esri.layers.GraphicsLayer({visible:true});try{for(i=0;i<graphicsData.length;i++){markerLayer.add(graphicsData[i]);}}catch(evt){this.parent.hideWait();console.log("error adding marker to layer:"+evt.name+":"+evt.description);}}if(!!markerLayer){this.markerLayer=markerLayer;}}try{map.addLayer(markerLayer,this.layerIndex);this.viewerEventListeners.push(dojo.connect(this.markerLayer,"onClick",this,this.handleClickEvent));this.viewerEventListeners.push(dojo.connect(this.markerLayer,"onMouseMove",this,this.handleMouseMoveEvent));this.viewerEventListeners.push(dojo.connect(this.markerLayer,"onMouseOut",this,this.handleMouseOutEvent));this.viewerEventListeners.push(dojo.connect(this.markerLayer,"onMouseUp",this,this.handleMouseUpEvent));this.viewerEventListeners.push(dojo.connect(map,"onClick",this,this.onMapClick));this.viewerEventListeners.push(dojo.connect(map.infoWindow,"onHide",this,this.onHideInfoWindow));}catch(e){this.parent.hideWait();console.log("error adding layer to map:"+e.name+":"+e.description);}}else{try{this.createDensityMap();this.markerLayer=null;}catch(e){this.parent.hideWait();console.log("error adding density layer to map:"+e.name+":"+e.description);}}if(this.points&&this.points.points.length>0){if(this.points.points.length===1){this._extent=this.getExtentForSingleMarker(latitude,longitude);}else{this._extent=this.points.getExtent();}if(createMode){this.parent.updateMapExtent();}}else{this.parent.hideWait();this.parent.showMapLayer();}if(!this.enableDensity&&this.isClustered){markerLayerWrapper.renderClusterLayer(map);}this.populateDataLabelMetricValues();this.buildDataLabelLayer();},escapeSingleQuote:function escapeSingleQuoate(str){return str.replace("'","''");},failToLoadPolygon:function failToLoadPolygon(errMsg){this.parent.hideWait();if(console&&console.log&&!!errMsg){console.log(errMsg);}this.polygonLayer=null;this.removeDataLabelLayer();this.parent.showMapLayer();},initPolygonMap:function initPolygonMap(createMode){if(!createMode){this.polygonLayer.show();this.showDataLabelLayer();this.parent.hideWait();return ;}if(isOneTierMac()){FEATURE_LAYER_QUERY_LIMIT=50;}this._shapeToRowIndexMap={};this.rowIndex2Graphics={};var i,j,k;this.parent.populateOriginalPosition();this.initMapProperty();var map=this.parent.esriMap;var me=this;var rowAttributes=this.data.gts.row;var numAttributes=rowAttributes.length;var geoAttributeName,geoRole;var geoAttributeID,attribute;for(i=0;i<numAttributes;i++){attribute=rowAttributes[i];if(this.geoPosition<0){if((!this.parent.useESRICloud&&this.parent.esriAttributeMapping[attribute.id])||(this.parent.useESRICloud&&this.dropZones.geoAttribute===attribute.id)){if(verifyGeoRole(attribute)){this.geoPosition=i;}}}if(this.geoPosition>=0){geoAttributeName=attribute.n;geoAttributeID=attribute.id;this.geoElements=this.data.ghs.rhs.items;break;}}if(this.geoPosition<0){for(i=0;i<numAttributes;i++){attribute=rowAttributes[i];if(this.dropZones.geoAttribute==attribute.id&&!!this.widgetProps.lid){if(verifyGeoRole(attribute,true)){this.geoPosition=i;}}if(this.geoPosition>=0){geoAttributeName=attribute.n;geoAttributeID=attribute.id;this.geoElements=this.data.ghs.rhs.items;break;}}}if(this.geoPosition<0){this.parent.updateMapExtent();this.failToLoadPolygon("No Mappable attributes present on the report.");return ;}var mappedValue=null,queryTask,geoGraphicsLayer=null;this.polygonLayer=null;if(this.parent.useESRICloud){this.initWebMapConfig();mappedValue=this.webmapConfig;if(!mappedValue||!mappedValue.ml){this.failToLoadPolygon();return ;}dojo.map(this.parent.operationalLayers,function(layer,index){if(layer.url==mappedValue.ml){geoGraphicsLayer=layer.layerObject;}});}else{this.basemapConfig=this.parent.esriAttributeMapping[geoAttributeID];if(this.basemapConfig){this.basemapConfig.ml=verifyProtocol(this.basemapConfig.ml);}mappedValue=this.basemapConfig;if(mappedValue!==undefined&&mappedValue.ml!==undefined){queryTask=new esri.tasks.QueryTask(""+mappedValue.ml);}else{this.failToLoadPolygon();return ;}}var sf=this.parent.trimString(mappedValue.sf);if(sf&&sf.length>0){this.secondField=sf;}this.outFieldsArr=eval(mappedValue.qf);if(!!this.secondField){this.outFieldsArr.push(this.secondField);}this.esriField=mappedValue.ea;this.convertedNameMap={};if(this.geoElements.length>FEATURE_LAYER_QUERY_LIMIT){this.useIncremetalFetch=true;_steps=Math.ceil(this.geoElements.length/FEATURE_LAYER_QUERY_LIMIT);try{this.createShapesUsingIncrementFetching();}catch(err){this.failToLoadPolygon();console.log("error : "+err);}return ;}if(!geoGraphicsLayer){geoGraphicsLayer=new esri.layers.FeatureLayer(mappedValue.ml,{outFields:["*"]});map.addLayer(geoGraphicsLayer,this.layerIndex);}if(!geoGraphicsLayer){this.failToLoadPolygon();return ;}var queryWhere=this.buildQueryWhere(0,this.geoElements.length,geoRole);geoGraphicsLayer.setDefinitionExpression(queryWhere);geoGraphicsLayer.mode=esri.layers.FeatureLayer.MODE_SNAPSHOT;geoGraphicsLayer.setVisibility(false);this.addPolygonListeners(geoGraphicsLayer,true);this.polygonLayer=geoGraphicsLayer;var query=new esri.tasks.Query();query.returnGeometry=true;query.outFields=this.outFieldsArr;query.outSpatialReference=this.parent.esriMap.spatialReference;var idString,rowGeoHeader,rowHeaders=this.data.ghs.rhs.items;query.where="1=1";this.polygonLayer.queryFeatures(query,function(featureSet){me.updateScales(geoGraphicsLayer.minScale,geoGraphicsLayer.maxScale);me.onQueryFeatureLayerComplete.call(me,featureSet.features);},function(error){me.failToLoadPolygon("queryTask error:"+error.name+":"+error.description);if(!!error.description&&error.description.indexOf("esri.config.defaults.io.proxyUrl is not set")>-1){mstrmojo.alert("Query request too large. Please configure proxy setting in the esriconfig.xml and try again");}else{mstrmojo.alert("queryTask error:"+error.name+":"+error.description);}});},updateScales:function updateScales(minScale,maxScale){if(this.destroyed){return ;}this.minScale=minScale;this.maxScale=maxScale;console&&console.log("ESRIMAPViewer: minScale = "+this.minScale+":maxScale = "+this.maxScale);this.parent.updateScales(minScale,maxScale);},convertName:function convertName(s,geoRole){var map=this.parent,names=map.getEsriConfig().nameConversions;if(!names){return s;}var i,name,value,role,convertedName=s;for(i=0;i<names.length;i++){conversion=names[i];name=map.trimString(names[i].n);role=names[i].georole;value=map.trimString(names[i].value);if(name===s&&(!role||geoRole===role)){convertedName=value;this.convertedNameMap[value]=name;}}return map.trimString(convertedName);},checkName:function checkName(i,georole){return this.escapeSingleQuote(this.convertName(this.getElementValue(i,this.geoPosition),georole));},buildQueryWhere:function buildQueryWhere(start,end,geoRole){var idString,rowGeoHeader,rowHeaders=this.data.ghs.rhs.items,queryWhere,firstOne=true;queryWhere=this.esriField+" in (";for(var i=start;i<end;i++){idString=this.getIdStringForRow(i);idString=idString.toLowerCase?idString.toLowerCase():idString;if(!!this._shapeToRowIndexMap[idString]){continue;}rowGeoHeader=rowHeaders[i].items[this.geoPosition];this._shapeToRowIndexMap[idString]={rowIndex:i,geoIndex:rowGeoHeader.idx};if(firstOne){queryWhere+="'"+this.checkName(i,geoRole)+"'";firstOne=false;}else{queryWhere+=", '"+this.checkName(i,geoRole)+"'";}}queryWhere+=")";return queryWhere;},getGeoObjectExt:function getGeoObjectExt(rowIndex,blink){var graphics=this.rowIndex2Graphics[rowIndex];if(graphics&&blink){blinkGraphic.call(this,graphics);}if(this.enableMarker){return{center:new esri.geometry.Point(graphics.geometry.getLongitude(),graphics.geometry.getLatitude()),type:$EnumMarkerType.Marker};}else{if(this.enablePolygon){return{center:graphics.geometry.getCentroid(),bound:graphics.geometry.getExtent(),type:$EnumMarkerType.Area};}}},setVisibility:function setVisibility(visible){if(!this.visible){return ;}if(this.enablePolygon&&!!this.polygonLayer){this.polygonLayer.setVisibility(visible);}else{if(this.enableMarker&&!!this.markerLayer){this.markerLayer.setVisibility(visible);}else{if(this.enableDensity&&!!this.densityLayer){if(visible){this.densityLayer.showLayer();}else{this.densityLayer.hideLayer();}}}}},getElementValue:function getElementValue(row,col){var rowGeoHeader=this.data.ghs.rhs.items[row].items[col];return this.parent.trimString(this.data.gts.row[col].es[rowGeoHeader.idx].n);},getIdStringForRow:function getIdStringForRow(rowIndex){var idString="";idString+=this.getElementValue(rowIndex,this.geoPosition);if(this.geoSecondaryRolePosition!=-1){idString+=ATTRIBUTE_DELIMITER+this.getElementValue(rowIndex,this.geoSecondaryRolePosition);}return idString;},getMapType:function getMapType(){if(this.enableDensity){return $EnumMarkerType.Density;}else{if(this.enableMarker){if(this.bubbleMode){return $EnumMarkerType.Bubble;}else{return $EnumMarkerType.Marker;}}else{if(this.enablePolygon){return $EnumMarkerType.Area;}}}return -1;},getMapConfigVal:function getMapConfigVal(){return this.parent.useESRICloud?this.webmapConfig:this.basemapConfig;},createShapesUsingIncrementFetching:function createShapesUsingIncrementFetching(){var map=this.parent.esriMap,me=this,mappedValue=this.getMapConfigVal(),queryTask=new esri.tasks.QueryTask(mappedValue.ml);this._returnedQuery=0;this._features=[];var firstOne,idString,rowGeoHeader,rowHeaders=this.data.ghs.rhs.items;for(var step=0;step<_steps;step++){var start=step*FEATURE_LAYER_QUERY_LIMIT;var end=Math.min(start+FEATURE_LAYER_QUERY_LIMIT,this.geoElements.length);var query=new esri.tasks.Query();query.returnGeometry=true;query.outFields=this.outFieldsArr;query.outSpatialReference=this.parent.esriMap.spatialReference;query.where=this.buildQueryWhere(start,end);queryTask.execute(query,function onQueryComplete(featureSet){me.onIncrementalQueryFeaturesComplete.call(me,featureSet.features);},function onQueryError(err){console&&console.log("Error incremental fetching :");me.onIncrementalQueryFeaturesComplete.call(me,[]);});}},onIncrementalQueryFeaturesComplete:function onIncrementalQueryFeaturesComplete(features){this._returnedQuery++;if(features.length>0){this._features=this._features.concat(features);}if(this._returnedQuery==_steps){var finalFeatures=this._features;var mappedValue=this.getMapConfigVal(),outFieldsArr=eval(mappedValue.qf);var fields=[];fields.push({name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID"});mstrmojo.array.forEach(outFieldsArr,function(field){fields.push({name:field,alias:field,type:"esriFieldTypeString"});});var sf=this.parent.trimString(mappedValue.sf);if(sf&&sf.length>0){fields.push({name:sf,alias:sf,type:"esriFieldTypeString"});}var layerDefinition={geometryType:"esriGeometryPolygon",objectIdField:"ObjectID",drawingInfo:{renderer:{type:"simple",symbol:{color:[255,255,255,125],outline:{color:[255,255,255,255],width:1,type:"esriSLS",style:"esriSLSSolid"},type:"esriSFS",style:"esriSFSSolid"}}},fields:fields};var featureCollection={layerDefinition:layerDefinition,featureSet:{features:finalFeatures,geometryType:"esriGeometryPolygon"}};try{var geoGraphicsLayer=new esri.layers.FeatureLayer(featureCollection,{mode:esri.layers.FeatureLayer.MODE_SNAPSHOT});geoGraphicsLayer.setVisibility(false);}catch(e){console.log("Error creating feature layer : "+e);return ;}this.parent.esriMap.addLayer(geoGraphicsLayer,this.layerIndex);this.addPolygonListeners(geoGraphicsLayer);this.polygonLayer=geoGraphicsLayer;var me=this;if(finalFeatures.length<1){this.failToLoadPolygon("Returned featureSet is empty.");return ;}me.polygonLayer.applyEdits(finalFeatures,null,null,function onApplyEditComplete(evt){me.onQueryFeatureLayerComplete(finalFeatures);},function onApplyEditError(e){console.log("Error adding features to feature layer : "+e);});}},onQueryFeatureLayerComplete:function onQueryFeatureLayerComplete(features){if(this.unrenderred){return ;}if(typeof (console)!="undefined"){console.log("queryTask complete");}if(features.length<1){this.failToLoadPolygon("Returned featureSet is empty.");return ;}var mappedValue=this.getMapConfigVal(),defaultSymbol=new esri.symbol.SimpleFillSymbol(esri.symbol.SimpleFillSymbol.STYLE_NULL,new esri.symbol.SimpleLineSymbol(esri.symbol.SimpleLineSymbol.STYLE_SOLID,new dojo.Color([255,255,255,0]),0),new dojo.Color([255,255,255,0])),infoTemplate=this.populateInfoTemplate((this.parent.replaceSpace(mappedValue.ea)).toUpperCase()),i,il,renderer=null,me=this,map=me.parent.esriMap,dataLabelsConfig=this.dataLabelsConfig=[],newExtent=null,lastExtent,dataLookup=me._shapeToRowIndexMap,esriGeoName,geoName,secondaryFieldName,idString,geometry,sf,rowIndex,graphic,attributes,colorString,dojoColor,symbol;map.graphics.clear();console.log("featureSet size="+features.length);for(i=0,il=features.length;i<il;i++){graphic=features[i];attributes=graphic.attributes;esriGeoName=attributes[me.esriField]||attributes[me.esriField=me.esriField.toLowerCase()]||attributes[me.esriField=me.esriField.toUpperCase()];if(this.convertedNameMap[esriGeoName]){geoName=this.convertedNameMap[esriGeoName];}else{geoName=esriGeoName;}if(!geoName){this.failToLoadPolygon("Warning: "+me.esriField+" not found in featureSet from ESRI server! Please ensure the field "+me.esriField+" is present in FeatureLayer specified by  <ml> value in esriConfig.xml");return ;}idString=geoName;sf=this.parent.trimString(mappedValue.sf);if(this.geoSecondaryRolePosition!==-1&&sf&&sf.length>0){secondaryFieldName=attributes[sf]||attributes[mappedValue.sf=sf.toLowerCase()]||attributes[mappedValue.sf=sf.toUpperCase()];idString+=ATTRIBUTE_DELIMITER+secondaryFieldName;}idString=this.parent.trimString(idString);if(idString.length===0||!this._shapeToRowIndexMap[idString.toLowerCase?idString.toLowerCase():idString]){console.log("skipping "+idString);continue;}if(!renderer){if(this.geoSecondaryRolePosition===-1||this.secondField.length===0){renderer=new esri.renderer.UniqueValueRenderer(defaultSymbol,me.esriField);}else{renderer=new esri.renderer.UniqueValueRenderer(defaultSymbol,me.esriField,this.secondField);renderer.fieldDelimiter=ATTRIBUTE_DELIMITER;}}if(dataLookup){rowIndex=dataLookup[idString.toLowerCase?idString.toLowerCase():idString].rowIndex;geometry=graphic.geometry;this.populateGraphicAttributes(dataLookup,attributes,idString);if(rowIndex!==undefined){colorString=me.getThresholdString(rowIndex,me.selectedMetricIndex,me.DEFAULT_COLOR,true);dojoColor=new dojo.Color(colorString);dojoColor.a=0.75;if(geometry instanceof esri.geometry.Polyline){symbol=new esri.symbol.SimpleLineSymbol(esri.symbol.SimpleLineSymbol.STYLE_SOLID,dojoColor,1);}else{if(geometry instanceof esri.geometry.Polygon){symbol=new esri.symbol.SimpleFillSymbol(esri.symbol.SimpleFillSymbol.STYLE_SOLID,new esri.symbol.SimpleLineSymbol(esri.symbol.SimpleLineSymbol.STYLE_SOLID,new dojo.Color([255,255,255,0.35]),1),dojoColor);}}if(this.geoSecondaryRolePosition===-1||this.secondField.length===0){renderer.addValue(esriGeoName,symbol);}else{renderer.addValue(esriGeoName+ATTRIBUTE_DELIMITER+secondaryFieldName,symbol);}attributes=formatAttribute.call(this,attributes,rowIndex);graphic.setInfoTemplate(infoTemplate);graphic.setSymbol(symbol);graphic.setAttributes(attributes);if(newExtent===null){newExtent=geometry.getExtent();}else{newExtent=newExtent.union(geometry.getExtent());}}else{console.log("Missing..."+geoName);}dataLabelsConfig.push({text:esriGeoName,rowIndex:rowIndex,mapPoint:this.getMapPoint(geometry.rings,geometry.spatialReference)});this.rowIndex2Graphics[rowIndex]=graphic;}}this.populateDataLabelMetricValues();me.polygonLayer.setRenderer(renderer);me.polygonLayer.redraw();me._extent=newExtent;me.parent.updateMapExtent();lastExtent=me.polygonLayer.lastExtent;if(!!lastExtent&&!!newExtent&&lastExtent.xmin===newExtent.xmin&&lastExtent.xmax===newExtent.xmax&&lastExtent.ymin===newExtent.ymin&&lastExtent.ymax===newExtent.ymax){me.polygonLayer.setVisibility(true);}me.polygonLayer.lastExtent=newExtent;map.graphics.enableMouseEvents();this.buildDataLabelLayer();},isIndexGeoPosition:function isIndexGeoPosition(index,geoColumnIndices){var i;if(!(geoColumnIndices instanceof Array)){return false;}if(index<0){return false;}var results=false;for(i=0;i<geoColumnIndices.length;i++){if(index==geoColumnIndices[i]){results=true;break;}}return results;},populateMinMax:function populateMinMax(metricColumnIndex){if(!this.minMaxMap){this.minMaxMap={};}if(this.minMaxMap.hasOwnProperty(metricColumnIndex)){return ;}var rowHeaders=this.data.ghs.rhs.items;var data=this.data.gvs.items?this.data.gvs.items:[];var rowIndex=0;var minValue=Infinity;var maxValue=-Infinity;for(rowIndex=0;rowIndex<data.length;rowIndex++){var values=data[rowIndex].items;var cell=values[metricColumnIndex];if(!cell){continue;}var type=cell.ty;if(!type||type===this.enumNumber){var cellNumber=parseFloat(!cell.rv?this.parent.stripNumberFormat(cell.v):cell.rv);maxValue=(cellNumber>maxValue)?cellNumber:maxValue;minValue=(cellNumber<minValue)?cellNumber:minValue;}}if(this.wpMapSizingStyle==="0"){this.minMaxMap[metricColumnIndex]={min:Math.min(Math.abs(minValue),Math.abs(maxValue)),max:Math.max(Math.abs(minValue),Math.abs(maxValue))};}else{this.minMaxMap[metricColumnIndex]={min:minValue,max:maxValue};}},processDrill:function processDrillRequest(){if(this.enablePolygon){this.performDrill(this.geoPosition);}if(this.enableMarker||this.enableDensity){this.performDrill(this.latIndex);}},getShapeAttributeGeoRole:function getShapeAttributeGeoRole(){var geoAttrID=this.dropZones.geoAttribute,gts=this.data.gts,form,geoRole,rowItem;if(!gts.row){return -1;}if(!!geoAttrID){for(var row=0;row<gts.row.length;row++){rowItem=gts.row[row];if(rowItem.id==geoAttrID){forms=rowItem.fs;for(index=0;index<forms.length;index++){form=forms[index];geoRole=form.fgr;if(geoRole!=$EnumGeographicRole.EnumGeographicRoleNone&&geoRole!=$EnumGeographicRole.EnumGeographicRoleLatitiude&&geoRole!=$EnumGeographicRole.EnumGeographicRoleLongitude){return geoRole;}}}}}else{for(row=0;row<gts.row.length;row++){rowItem=gts.row[row];forms=rowItem.fs;for(index=0;index<forms.length;index++){form=forms[index];geoRole=form.fgr;if(geoRole!=$EnumGeographicRole.EnumGeographicRoleNone&&geoRole!=$EnumGeographicRole.EnumGeographicRoleLatitiude&&geoRole!=$EnumGeographicRole.EnumGeographicRoleLongitude){return geoRole;}}return geoRole;}}return -1;},getSecondaryFieldRoleAttributeIndex:function getSecondaryFieldRoleAttributeIndex(){var gts=this.data.gts,form,geoRole,rowItem;if(!this.webmapConfig||!gts.row){return -1;}for(row=0;row<gts.row.length;row++){rowItem=gts.row[row];if(rowItem.otp!=12){continue;}forms=rowItem.fs;for(index=0;index<forms.length;index++){form=forms[index];geoRole=form.fgr;if(isNaN(geoRole)||parseInt(geoRole,10)<0||parseInt(geoRole,10)>parseInt($EnumGeographicRole.EnumGeographicRoleLastOne,10)){continue;}if(geoRole==this.webmapConfig.sfr){this.secondaryGeoElements=rowItem.es;return row;}}}console&&console.log("Secondary geo role attribute not found ");return -1;},initWebMapConfig:function initWebMapConfig(){var shapes=this.parent.getEsriConfig().shapes,vp=this.widgetProps,shape=null,i;if(!!vp.lid&&!!shapes){for(i=0;i<shapes.length;i++){if(shapes[i].id==vp.lid){shape=shapes[i];break;}}}else{if(!!shapes){var geoRole=this.getShapeAttributeGeoRole();if(geoRole==-1&&console&&console.log){console.log("Geo role not found in the GeoAttribute. Can not render area.");}for(i=0;i<shapes.length;i++){if(shapes[i].roleId==geoRole&&!!shapes[i]["default"]&&(shapes[i]["default"]+"").toLowerCase()=="true"){shape=shapes[i];break;}}}}if(!!shape){var layers=this.parent.getEsriConfig().layers;var layer=null;this.webmapConfig={};this.webmapConfig.qf=eval(shape.qf);this.webmapConfig.ea=shape.ea;this.webmapConfig.ml=null;this.webmapConfig.sf=shape.sf;this.webmapConfig.sfr=shape.sfr;for(i=0;i<layers.length;i++){if(shape.layerId==layers[i].id){this.webmapConfig.ml=verifyProtocol(layers[i].ml);break;}}}this.geoSecondaryRolePosition=this.getSecondaryFieldRoleAttributeIndex();if(mstrApp&&mstrApp.isVI&&this.geoSecondaryRolePosition==-1&&!!shape&&shape.roleId==$EnumGeographicRole.EnumGeographicRoleCounty){mstrmojo.toast(mstrmojo.desc(13835,"County names are not necessarily unique. Please add State as an attribute in the tooltip drop zone."),300000000,null,{id:this.parent.id,dom:this.parent.domNode,cssClass:"mapToastCss"});}},render:function renderGridLayer(createMode){this.parent.totalLayersRendered++;this.unrenderred=false;this.visible=true;if(this.primaryModel.getTotalRows()==0){this.parent.showMapLayer();if(console&&console.log){console.log("No rows returned for this dataset.");}this.parent.hideWait();return ;}if(this.enableMarker||this.enableDensity){this.initMarkerMap(createMode);if(this.postBuildRendering){this.postBuildRendering();}}else{if(this.enablePolygon){this.useCustomShape=this.isCustomShape();if(this.parent.useESRICloud&&this.useCustomShape){this.initCustomShape(createMode);}else{this.initPolygonMap(createMode);}}else{this.parent.showMapLayer();this.parent.hideWait();if(this.postBuildRendering){this.postBuildRendering();}}}},initCustomShape:function initCustomShape(createMode){if(!createMode){this.polygonLayer.show();this.showDataLabelLayer();this.parent.hideWait();return ;}var me=this,i;var rowAttributes=this.data.gts.row,numAttributes=rowAttributes.length;this.rowIndex2Graphics={};for(i=0;i<numAttributes;i++){var attribute=rowAttributes[i];if(this.dropZones.geoAttribute==attribute.id&&this.geoPosition<0){if(verifyGeoRole(attribute)){this.geoPosition=i;}}}var geoAttributeName,geoAttributeID;if(this.geoPosition<0){for(i=0;i<numAttributes;i++){var attribute=rowAttributes[i];if(this.dropZones.geoAttribute==attribute.id&&!!this.widgetProps.lid){if(verifyGeoRole(attribute,true)){this.geoPosition=i;}}if(this.geoPosition>=0){geoAttributeName=attribute.n;geoAttributeID=attribute.id;this.geoElements=this.data.ghs.rhs.items;break;}}}if(this.geoPosition<0){this.parent.hideWait();this.parent.updateMapExtent();if(console&&console.log){console.log("No Mappable attributes present on the report.");}return ;}var dataLookup=this.createLookup();this.polygonLayer=new esri.layers.GraphicsLayer();this.parent.esriMap.addLayer(this.polygonLayer);var params={taskId:"getESRIKMLConfig",shapeId:this.widgetProps.lid,queryField:Object.keys(dataLookup).join("\u001E").toLowerCase()};var callback={success:function(response){if(me.destroyed){return ;}me.parent.showMapLayer();me.buildCustomShapes(response);if(this.postBuildRendering){this.postBuildRendering();}},failure:function(response){me.parent.showMapLayer();me.parent.hideWait();mstrmojo.alert("KML file request failed! "+response.getResponseHeader("X-MSTR-TaskFailureMsg"));return ;}};var xhr=new mstrmojo.SimpleXHR({isTask:true,async:true});mstrmojo.xhr.request("POST",mstrConfig.taskURL,callback,params);},buildCustomShapes:function buildCustomShapes(shapeDef){if(!this.polygonLayer){this.parent.hideWait();return ;}if(shapeDef.length<1){this.failToLoadPolygon("No custom kml shapes were fetched.");return ;}var i,coordArray,geometry,graphic,shapeItem,name,newExtent=null;this.esriField=this.data.gts.row[this.geoPosition].n;var infoTemplate=this.populateInfoTemplate(this.esriField);var dataLookup=this.createLookup(),colorString,dojoColor,symbol;var dataLabelsConfig=this.dataLabelsConfig=[];for(i=0;i<shapeDef.length;i++){coordArray=[];shapeItem=shapeDef[i];var attributes={};name=shapeItem.name;attributes[this.esriField]=name;this.populateGraphicAttributes(dataLookup,attributes,name);colorString=this.getThresholdString(attributes.rowIndex,this.selectedMetricIndex,this.DEFAULT_COLOR,true);dojoColor=new dojo.Color(colorString);dojoColor.a=0.75;symbol=new esri.symbol.SimpleFillSymbol(esri.symbol.SimpleFillSymbol.STYLE_SOLID,new esri.symbol.SimpleLineSymbol(esri.symbol.SimpleLineSymbol.STYLE_SOLID,new dojo.Color([255,255,255,0.35]),1),dojoColor);if(shapeItem.type=="polygon"||shapeItem.type=="multiPolygon"){if(shapeItem.type=="polygon"){this.getCoordinateArr(shapeItem.data,coordArray);}else{var shapeData=shapeItem.data;for(var j=0;j<shapeData.length;j++){this.getCoordinateArr(shapeData[j],coordArray);}}geometry=new esri.geometry.Polygon(coordArray);graphic=new esri.Graphic(geometry,symbol,attributes,infoTemplate);graphic.isUpdated=true;this.polygonLayer.add(graphic);if(newExtent===null){newExtent=graphic.geometry.getExtent();}else{newExtent=newExtent.union(graphic.geometry.getExtent());}dataLabelsConfig.push({text:name,rowIndex:attributes.rowIndex,mapPoint:this.getMapPoint(coordArray,geometry.spatialReference)});this.rowIndex2Graphics[attributes.rowIndex]=graphic;}}this.populateDataLabelMetricValues();this.initShapeInteraction();this.parent.hideWait();var me=this,fnProceed=function(extent){me._extent=extent;me.parent.updateMapExtent();me.buildDataLabelLayer();};if(newExtent.spatialReference.equals(me.parent.esriMap.extent.spatialReference)){fnProceed(newExtent);}else{require(["esri/tasks/ProjectParameters"],function(ProjectParameters){var geometryService=new esri.tasks.GeometryService(me.parent.getProtocol()+"//tasks.arcgisonline.com/ArcGIS/rest/services/Geometry/GeometryServer"),prjParams=new ProjectParameters();prjParams.geometries=[newExtent,newExtent.getCenter()];prjParams.outSR=me.parent.esriMap.extent.spatialReference;geometryService.project(prjParams,function(outputs){fnProceed(outputs[0].centerAt(outputs[1]));},function(errorMsg){console.log(errorMsg);fnProceed(newExtent);});});}},populateInfoTemplate:function populateInfoTemplate(title,skipIndices){var skip=!!skipIndices?skipIndices:[];this.defaultInfoWindowHTML=this.getDefaultInfoWindowTemplate(skip);if(this.infoWindowHTML===""){this.infoWindowHTML=this.defaultInfoWindowHTML;}var infoTemplate=new esri.InfoTemplate();infoTemplate.setTitle("${"+title+"}");infoTemplate.setContent(this.infoWindowHTML);return infoTemplate;},populateGraphicAttributes:function populateGraphicAttributes(dataLookup,attributes,name){if(!!dataLookup){var rowIndex,dataRow,rowHeaders,rowCell,rowCellTitle,rowCellValue,thresholdType;name=name.toLowerCase?name.toLowerCase():name;rowIndex=attributes.rowIndex=dataLookup[name].rowIndex;attributes.geoIndex=dataLookup[name].geoIndex;attributes.columnIndices=[this.geoPosition];attributes.layerKey=this.k;if(rowIndex!==undefined){attributes=formatAttribute.call(this,attributes,rowIndex);if(this.data.gts.col.length===1&&this.data.gts.col[0].otp===-1){dataRow=this.data.gvs.items[rowIndex].items;rowHeaders=this.data.gts.col[0].es;for(var j=0;j<dataRow.length;j++){rowCell=dataRow[j];rowCellTitle=rowHeaders[j].n;rowCellValue=dataRow[j].v;thresholdType=dataRow[j].ty;if(!thresholdType||thresholdType==this.enumNumber){attributes[this.parent.replaceSpace(rowCellTitle)]=rowCellValue;}else{attributes[this.parent.replaceSpace(rowCellTitle)]=dataRow[j].rv;}}}}}},initShapeInteraction:function initShapeInteraction(){this.addPolygonListeners(this.polygonLayer);},addPolygonListeners:function addPolygonListeners(polygonLayer,useUpdateEnd){var me=this,map=this.parent.esriMap;this.viewerEventListeners.push(dojo.connect(map,"onClick",this,this.onMapClick));this.viewerEventListeners.push(dojo.connect(map.infoWindow,"onHide",this,this.onHideInfoWindow));this.viewerEventListeners.push(polygonLayer.on("mouse-move",function(evt){if(!me.enableSelect){var highlightGraphic=me.updatePolygonGraphicInfo(evt.graphic);if(!!highlightGraphic){me.handleMouseMoveEvent(evt);}}}));this.viewerEventListeners.push(polygonLayer.on("click",function(evt){me.handleClickEvent.call(me,evt);}));this.viewerEventListeners.push(polygonLayer.on("mouse-out",function(evt){if(!me.enableSelect){me.handleMouseOutEvent(evt);}}));this.viewerEventListeners.push(polygonLayer.on("mouse-up",function(evt){me.handleMouseUpEvent(evt);}));if(this.postBuildRendering&&!this.postBldRdrEvent){this.postBldRdrEvent=polygonLayer.on(useUpdateEnd?"update-end":"update",function(){me.postBldRdrEvent.remove();delete me.postBldRdrEvent;me.postBuildRendering();});}},getCoordinateArr:function getCoordinateArr(arr,coorArr){if(Array.isArray(arr)&&Array.isArray(arr[0])&&Array.isArray(arr[0][0])){for(var index=0;index<arr.length;index++){getCoordinateArr(arr[index],coorArr);}}else{if(Array.isArray(arr)&&Array.isArray(arr[0])){coorArr.push(arr);}else{if(Array.isArray(arr)){coorArr.push([arr]);}else{}}}},isCustomShape:function isCustomShape(){var shapes=this.parent.getEsriConfig().shapes,props=this.widgetProps,shapeId,shape,geoRole;if(!!props){shapeId=props.lid;}if(!!shapeId){shape=propHelper.getMatchingShape(shapes,shapeId,null);}else{geoRole=this.getShapeAttributeGeoRole();shape=propHelper.getMatchingShape(shapes,null,geoRole==-1?null:geoRole);}if(!!shape&&shape.custom&&shape.custom==true){if(!shapeId){props.lid=shape.id;}return true;}return false;},resolveCustomizedInfoWindow:function resolveCustomizedInfoWindow(attributes){var input=this.infoWindowHTML;var result="";var baseIndex=0;var startIndex=input.indexOf("${",baseIndex);var endIndex=input.indexOf("}",startIndex+1);var macroName;var transformedMacroName;var replaceValue;while(startIndex>=0&&endIndex>startIndex){macroName=input.substring(startIndex+2,endIndex);var colonIndex=macroName.indexOf(":");if(colonIndex>=0){transformedMacroName=macroName.substring(0,colonIndex)+" "+macroName.substring(colonIndex+1);}else{transformedMacroName=macroName;}transformedMacroName=this.parent.replaceSpace(transformedMacroName);if(attributes.hasOwnProperty(transformedMacroName)){result+=input.substring(baseIndex,startIndex)+attributes[transformedMacroName];}else{result+=input.substring(baseIndex,endIndex+1);}baseIndex=endIndex+1;startIndex=input.indexOf("${",baseIndex);endIndex=input.indexOf("}",startIndex+1);}result+=input.substring(baseIndex,input.length);return result;},retrieveDataRows:function retrieveDataRows(sliceInfo){var dataRows=[],i,k,geoElementIndices,longGeoElementIndices,geoElementCount,pos,longPos,elementDataRows,geoElemIdx,longGeoElemIdx,generatedGeoElementIndices={};if(sliceInfo){geoElementIndices=sliceInfo.elementIndex;geoElementCount=geoElementIndices.length;longGeoElementIndices=sliceInfo.longElementIndex;pos=parseInt(sliceInfo.pos[0],10);longPos=parseInt(sliceInfo.pos[1],10);for(i=0;i<geoElementCount;i++){if(generatedGeoElementIndices.hasOwnProperty(geoElementIndices[i])){continue;}generatedGeoElementIndices[geoElementIndices[i]]=geoElementIndices[i];geoElemIdx=parseInt(geoElementIndices[i],10);longGeoElemIdx=parseInt(longGeoElementIndices[i],10);elementDataRows=[];if(!this.viewCache){this.viewCache={};}if(this.viewCache[pos]===undefined||this.viewCache[pos]===null){this.viewCache[pos]={};}if(this.viewCache[pos]&&this.viewCache[pos][geoElemIdx+"#"+longGeoElemIdx]){elementDataRows=this.viewCache[pos][geoElemIdx+"#"+longGeoElemIdx];}else{var rowHeaders=this.data.ghs.rhs.items;var numRows=rowHeaders.length;for(k=0;k<numRows;k++){var rowHeader=rowHeaders[k].items;var cellHeader=rowHeader[pos];var longCellHeader=rowHeader[longPos];if(cellHeader&&cellHeader.idx==geoElemIdx&&longCellHeader&&longCellHeader.idx==longGeoElemIdx){if(!!sliceInfo.sfv&&sliceInfo.sfv!=this.getElementValue(k,this.geoSecondaryRolePosition)){continue;}elementDataRows.push(k);}}this.viewCache[pos][geoElemIdx+"#"+longGeoElemIdx]=elementDataRows;}dataRows=dataRows.concat(elementDataRows);}}return dataRows;},onInfoWindowRendered:function onInfoWindowRendered(evt,pt,ifw){var map=this.parent.esriMap,id=evt.id,w=mstrmojo.all[id],title=getInfoWindowTitle(w),newDiv=this.generateSelectorControlInfoWindowContent(w);ifw.setContent(newDiv);ifw.setTitle(title);ifw.show(pt,map.getInfoWindowAnchor(pt));ifw.resize(newDiv.clientWidth,newDiv.clientHeight);},showInfoWindow:function showInfoWindow(evt,locationObject){if(!this.parent.enablePopup){return ;}var map=this.parent.esriMap,ifw=map.infoWindow;var geoIndices,evtGraphic,columnIndices,infoWindowContent,columnIndex,highlightedGraphics,highlightSymbol,div,content,title="",highlightGraphic,p,dataRows,sliceInfo,secondaryFieldValue=null,longGeoIndices=null;if(!ifw.defaultWidth){ifw.defaultWidth=ifw.domNode.firstChild.scrollWidth||MIN_INFO_WINDOW_WIDTH;}if(!ifw.defaultHeight){ifw.defaultHeight=ifw.domNode.firstChild.scrollHeight||MIN_INFO_WINDOW_HEIGHT;}$CSS.removeClass(ifw.domNode,"mstrmojo-ESRIMap");if(!this.enableDensity){evtGraphic=evt.graphic;columnIndices=evtGraphic.attributes.columnIndices;if(isTextGraphic(evtGraphic)||isClusteredGraphic(evtGraphic)){geoIndices=evtGraphic.attributes.geoIndices;if(evtGraphic.attributes.longGeoIndices){longGeoIndices=evtGraphic.attributes.longGeoIndices;}}else{geoIndices=[evtGraphic.attributes.geoIndex];longGeoIndices=[evtGraphic.attributes.longGeoIndex];}if(this.enablePolygon){var wc,sf;wc=this.getMapConfigVal();sf=wc&&this.parent.trimString(wc.sf);if(this.geoSecondaryRolePosition!=-1&&sf&&sf.length>0){secondaryFieldValue=evtGraphic.attributes[sf]||evtGraphic.attributes[sf.toLowerCase()]||evtGraphic.attributes[sf.toUpperCase()];}longGeoIndices=geoIndices;if(columnIndices.length==1){columnIndices.push(columnIndices[0]);}}this.highlightGraphic(evtGraphic);}else{columnIndices=locationObject.attributes.columnIndices;geoIndices=[locationObject.attributes.geoIndex];if(locationObject.attributes.longGeoIndex){longGeoIndices=[locationObject.attributes.longGeoIndex];}}sliceInfo={pos:columnIndices,elementIndex:geoIndices,longElementIndex:longGeoIndices,setViewDataFlag:false,applyControl:false,sfv:secondaryFieldValue};dataRows=this.retrieveDataRows(sliceInfo);p=evt.screenPoint;if(this.infoWindowHTML!==undefined&&(this.infoWindowHTML!=""&&this.infoWindowHTML!=this.defaultInfoWindowHTML)){if(!!evtGraphic){content=this.resolveCustomizedInfoWindow(evtGraphic.attributes);}else{content=this.resolveCustomizedInfoWindow(locationObject.attributes);}}else{if(dataRows.length==1){if(!!evtGraphic){if(evtGraphic.infoTemplate&&evtGraphic.infoTemplate.content){content=evtGraphic.getContent();}else{content=this.resolveCustomizedInfoWindow(evtGraphic.attributes);}}else{content=this.resolveCustomizedInfoWindow(locationObject.attributes);}}else{if(this.infoWindowUseGrid){content=this.parent.infoTabDiv.cloneNode(true);this.createGridInfoWindow(content,dataRows,columnIndices);div=content;}else{content='<div id="chartDiv" style="width: 300px; height: 150px;" />';}}}if(!!content.innerHTML){ifw.setContent(content.innerHTML);}else{ifw.setContent(content);}ifw.setTitle();ifw.show(p,map.getInfoWindowAnchor(p));infoWindowContent=document.getElementById(getInfoWindowId.call(this));if(infoWindowContent){ifw.resize(ifw.defaultWidth,ifw.defaultHeight);ifw.resize(Math.min(MAX_INFO_WINDOW_WIDTH,Math.max(MIN_INFO_WINDOW_WIDTH,infoWindowContent.scrollWidth+CONTENT_WIDTH_PADDING)),Math.min(MAX_INFO_WINDOW_HEIGHT,Math.max(MIN_INFO_WINDOW_HEIGHT,infoWindowContent.scrollHeight+CONTENT_HEIGHT_PADDING)));}},handlePanelStackInfoWindow:function handlePanelStackInfoWindow(evtGraphic,locationObject,screenPos){if(!this.parent.enablePopup){return ;}var map=this.parent,ifw=map.esriMap.infoWindow,me=this,columnIndex,sc,ifws,attributes;if(evtGraphic.isSelected===false){ifw.hide();map.set("infoWindowVisible",false);this.infoWindowVisible=false;return ;}map.set("infoWindowVisible",true);this.infoWindowVisible=true;if(!ifw.defaultWidth){ifw.defaultWidth=ifw.domNode.firstChild.scrollWidth||MIN_INFO_WINDOW_WIDTH;}if(!ifw.defaultHeight){ifw.defaultHeight=ifw.domNode.firstChild.scrollHeight||MIN_INFO_WINDOW_HEIGHT;}columnIndex=this.getGeoColumnIndex();sc=this.primaryModel.getRowTitles().getTitle(columnIndex).getSelectorControl();ifws=$MDV.findPanelStackAsInfoWindowSelectorTarget(sc);if(ifws){attributes=(!this.enableDensity)?evtGraphic.attributes:locationObject.attributes;$CSS.addClass(ifw.domNode,"mstrmojo-ESRIMap");$MDV.showPanelStackInfoWindows(me,ifws,sc,columnIndex,attributes.rowIndex,function(e){me.onInfoWindowRendered(e,screenPos,ifw);});}},getTooltipContent:function getTooltipContent(evtGraphic,locationObject){var geoIndices,columnIndices,div,content,dataRows,sliceInfo,secondaryFieldValue=null,longGeoIndices=null;if(!this.enableDensity){columnIndices=evtGraphic.attributes.columnIndices;if(isTextGraphic(evtGraphic)||isClusteredGraphic(evtGraphic)){geoIndices=evtGraphic.attributes.geoIndices;if(evtGraphic.attributes.longGeoIndices){longGeoIndices=evtGraphic.attributes.longGeoIndices;}}else{geoIndices=[evtGraphic.attributes.geoIndex];longGeoIndices=[evtGraphic.attributes.longGeoIndex];}if(this.enablePolygon){var wc,sf;wc=this.getMapConfigVal();sf=wc&&this.parent.trimString(wc.sf);if(this.geoSecondaryRolePosition!==-1&&sf&&sf.length>0){secondaryFieldValue=evtGraphic.attributes[sf]||evtGraphic.attributes[sf.toLowerCase()]||evtGraphic.attributes[sf.toUpperCase()];}longGeoIndices=geoIndices;if(columnIndices&&columnIndices.length===1){columnIndices.push(columnIndices[0]);}}}else{columnIndices=locationObject.attributes.columnIndices;geoIndices=[locationObject.attributes.geoIndex];if(locationObject.attributes.longGeoIndex!==undefined){longGeoIndices=[locationObject.attributes.longGeoIndex];}}if(columnIndices==undefined){return ;}sliceInfo={pos:columnIndices,elementIndex:geoIndices,longElementIndex:longGeoIndices,setViewDataFlag:false,applyControl:false,sfv:secondaryFieldValue};dataRows=this.retrieveDataRows(sliceInfo);if(this.infoWindowHTML!==undefined&&(this.infoWindowHTML!==""&&this.infoWindowHTML!==this.defaultInfoWindowHTML)){if(!!evtGraphic){content=this.resolveCustomizedInfoWindow(evtGraphic.attributes);}else{content=this.resolveCustomizedInfoWindow(locationObject.attributes);}}else{if(dataRows.length===1){if(!!evtGraphic){if(evtGraphic.infoTemplate&&evtGraphic.infoTemplate.content){content=evtGraphic.getContent();}else{content=this.resolveCustomizedInfoWindow(evtGraphic.attributes);}}else{content=this.resolveCustomizedInfoWindow(locationObject.attributes);}}else{if(dataRows.length>1){content=this.parent.infoTabDiv.cloneNode(true);this.createGridInfoWindow(content,dataRows,columnIndices);content=content.innerHTML;}else{content='<div id="chartDiv" style="width: 300px; height: 150px;" />';}}}return content;},showTooltip:function showTooltip(evt,locationObject){if(!this.parent.enablePopup||!evt){return ;}if(!evt.graphic&&!locationObject){return ;}var tooltipWin=this.tooltipWin,TOOLTIP_DOM=tooltipWin.domNode,tooltipContent;if(this.previousTooltip===(locationObject||evt.graphic)){tooltipWin.moveTo(evt.pageX,evt.pageY);return ;}if(!this.enableDensity){this.highlightGraphic(evt.graphic);this.previousTooltip=evt.graphic;}else{this.previousTooltip=locationObject;}if(!TOOLTIP_DOM.parentNode){document.body.appendChild(TOOLTIP_DOM);}tooltipContent=this.getTooltipContent(evt.graphic,locationObject);if(tooltipContent==undefined){return ;}TOOLTIP_DOM.innerHTML=tooltipContent;tooltipWin.moveTo(evt.pageX,evt.pageY);tooltipWin.toggle(true);this.infoWindowVisible=true;},onHideInfoWindow:function onHideInfoWindow(){},removePolygonLayer:function removePolygonLayer(){var me=this,map=this.parent.esriMap,layerId,layer,shouldReuseLayer=false;if(!!this.polygonLayer){if(!!map.graphics){map.graphics.clear();}layerId=this.polygonLayer.id;if(!!layerId){layer=map.getLayer(layerId);if(!!layer){if(!!layer.getNode()){dojo.map(me.parent.operationalLayers,function(operationalLayer,index){if(operationalLayer.layerObject===layer){shouldReuseLayer=true;}});if(shouldReuseLayer){layer.hide();}else{map.removeLayer(layer);this.polygonLayer=null;}}else{layer.on("update-end",function(evt){if(!!layerId&&!!map.getLayer(layerId)){map.removeLayer(map.getLayer(layerId));me.polygonLayer=null;}var layerIds=map.graphicsLayerIds,layer;for(var i=2;i<layerIds.length;i++){layer=map.getLayer(layerIds[i]);if(!!layer.getNode()&&layerIds[i]!="drawingLayer"){map.removeLayer(layer);}}});}}}}},getAllGraphics:function getAllGraphics(){if(this.enableMarker&&this.markerLayer){return this.markerLayer.graphics;}if(this.enablePolygon&&this.polygonLayer){return this.polygonLayer.graphics;}},updatePolygonGraphicInfo:function updatePolygonGraphicInfo(graphic){if(graphic.isUpdated){return graphic;}var mappedValue=this.getMapConfigVal(),infoTemplate=this.populateInfoTemplate((this.parent.replaceSpace(mappedValue.ea)).toUpperCase()),dataLookup=this._shapeToRowIndexMap,attributes=graphic.attributes,esriGeoName=attributes[this.esriField]||attributes[this.esriField=this.esriField.toLowerCase()]||attributes[this.esriField=this.esriField.toUpperCase()],secondaryFieldName,idString,colorString,dojoColor,symbol,rowIndex;idString=this.convertedNameMap[esriGeoName]?this.convertedNameMap[esriGeoName]:esriGeoName;if(!idString){this.failToLoadPolygon("Warning: "+this.esriField+" not found in featureSet from ESRI server! Please ensure the field "+this.esriField+" is present in FeatureLayer specified by  <ml> value in esriConfig.xml");return ;}var sf=this.parent.trimString(mappedValue.sf);if(this.geoSecondaryRolePosition!=-1&&sf&&sf.length>0){secondaryFieldName=attributes[sf]||attributes[mappedValue.sf=sf.toLowerCase()]||attributes[mappedValue.sf=sf.toUpperCase()];idString+=ATTRIBUTE_DELIMITER+secondaryFieldName;}idString=this.parent.trimString(idString);if(idString.length==0||!this._shapeToRowIndexMap[idString.toLowerCase?idString.toLowerCase():idString]){console.log("skipping "+idString);return ;}if(dataLookup){rowIndex=dataLookup[idString.toLowerCase?idString.toLowerCase():idString].rowIndex;this.populateGraphicAttributes(dataLookup,attributes,idString);if(rowIndex!==undefined){colorString=this.getThresholdString(rowIndex,this.selectedMetricIndex,this.DEFAULT_COLOR,true);dojoColor=new dojo.Color(colorString);dojoColor.a=0.75;if(graphic.geometry instanceof esri.geometry.Polyline){symbol=new esri.symbol.SimpleLineSymbol(esri.symbol.SimpleLineSymbol.STYLE_SOLID,dojoColor,1);}else{if(graphic.geometry instanceof esri.geometry.Polygon){symbol=new esri.symbol.SimpleFillSymbol(esri.symbol.SimpleFillSymbol.STYLE_SOLID,new esri.symbol.SimpleLineSymbol(esri.symbol.SimpleLineSymbol.STYLE_SOLID,new dojo.Color([255,255,255,0.35]),1),dojoColor);}}attributes=formatAttribute.call(this,attributes,rowIndex);graphic.setInfoTemplate(infoTemplate);graphic.setSymbol(symbol);graphic.setAttributes(attributes);graphic.isUpdated=true;}else{console.log("Missing..."+idString);}}return graphic;},highlightGraphic:function highlightGraphic(graphic){var symbol,shape,labelGraphic,width,height,isSlice;if(graphic.symbol instanceof esri.symbol.TextSymbol){graphic=graphic.refGraphic;}if(graphic.isPieCluster){this.highlightPieClusters(graphic);return ;}symbol=graphic.symbol;if(graphic.geometry instanceof esri.geometry.Polyline){symbol.width=5;graphic.setSymbol(symbol);}else{if(symbol instanceof esri.symbol.PictureMarkerSymbol){if(graphic.isSelected&&!graphic.isSelectionItem){shape=graphic.getShape();if(shape){shape.moveToFront();}labelGraphic=graphic.labelGraphic;if(labelGraphic&&labelGraphic.getShape()){labelGraphic.getShape().moveToFront();}graphic.isSelectionItem=true;}if(!!graphic.isHighlighted){return ;}width=symbol.width;height=symbol.height;symbol.originalWidth=width;symbol.originalHeight=height;symbol.width=width+15;symbol.height=height+15;graphic.setSymbol(symbol);}else{if(!!symbol){isSlice=graphic.isSlice;if(!isSlice&&graphic.geometry instanceof esri.geometry.Polygon){symbol.setOutline(this.parent.selectionStrokePolygon);}else{if(graphic.isSelected&&!graphic.isSelectionItem){if(symbol.style===esri.symbol.SimpleMarkerSymbol.STYLE_DIAMOND){symbol.setSize(32);}else{if(!!symbol.setOutline){symbol.setOutline(this.parent.selectionStroke);}}shape=graphic.getShape();if(!isSlice&&shape){shape.moveToFront();}}}if(graphic.isHover){symbol.color.a=0.4;}graphic.setSymbol(symbol);}}}graphic.isHighlighted=true;if(graphic.isSelected){graphic.isSelectionItem=true;}},highlightPieClusters:function highlightPieClusters(graphic){var symbol,shape,sliceGraphics=graphic.sliceGraphics,sliceGraphic,labelGraphic=graphic.labelGraphic,flag=graphic.isSelected&&!graphic.isSelectionItem,i,il=sliceGraphics.length;for(i=0;i<il;i++){sliceGraphic=sliceGraphics[i];symbol=sliceGraphic.symbol;if(flag){symbol.setOutline(this.parent.selectionStroke);shape=sliceGraphic.getShape();if(shape){shape.moveToFront();}sliceGraphic.isSelected=true;sliceGraphic.isSelectionItem=true;}symbol.color.a=0.4;sliceGraphic.setSymbol(symbol);sliceGraphic.isHighlighted=true;}if(flag){shape=graphic.getShape();if(shape){shape.moveToFront();}if(labelGraphic&&labelGraphic.getShape()){labelGraphic.getShape().moveToFront();}graphic.isSelectionItem=true;}graphic.isHighlighted=true;},clearHighlight:function clearHighlight(graphic){var symbol,width,height;if(graphic.symbol instanceof esri.symbol.TextSymbol){graphic=graphic.refGraphic;}if(graphic.isPieCluster){this.clearHighlightPieClusters(graphic);return ;}symbol=graphic.symbol;if(!symbol){return ;}if(graphic.geometry instanceof esri.geometry.Polyline){symbol.width=1;}else{if(symbol instanceof esri.symbol.PictureMarkerSymbol){if(!!graphic.isSelected){return ;}width=symbol.width;height=symbol.height;symbol.width=symbol.hasOwnProperty("originalWidth")?symbol.originalWidth:width;symbol.height=symbol.hasOwnProperty("originalHeight")?symbol.originalHeight:height;}else{if(!!symbol){if(!graphic.isSelected){if(symbol.style===esri.symbol.SimpleMarkerSymbol.STYLE_DIAMOND){symbol.setSize(16);}else{if(!!symbol.setOutline){symbol.setOutline(this.parent.regularStroke);}}if(graphic.isSlice){graphic.refGraphic.isSelected=false;graphic.refGraphic.isSelectionItem=false;graphic.refGraphic.isHighlighted=false;}}symbol.color.a=0.75;}}}graphic.setSymbol(symbol);graphic.isHighlighted=false;if(!graphic.isSelected){graphic.isSelectionItem=false;}},clearHighlightPieClusters:function clearHighlightPieClusters(graphic){var sliceGraphics=graphic.sliceGraphics,flag=!graphic.isSelected&&graphic.isSelectionItem,sliceGraphic,symbol,i,il=sliceGraphics.length;for(i=0;i<il;i++){sliceGraphic=sliceGraphics[i];symbol=sliceGraphic.symbol;if(flag){symbol.setOutline(this.parent.regularStroke);sliceGraphic.isSelected=false;sliceGraphic.isSelectionItem=false;}symbol.color.a=0.75;sliceGraphic.setSymbol(symbol);sliceGraphic.isHighlighted=false;}if(flag){graphic.isSelectionItem=false;}graphic.isHighlighted=false;},setInfoWindowHTML:function setInfoWindowHTML(value){this.infoWindowHTML=value;this.widgetProps.iwd=escape(this.replaceInfoWindowHTMLMacros());},parseInfoWindowHTML:function parseInfoWindowHTML(){var input=this.infoWindowHTML,result="",baseIndex=0,startIndex=input.indexOf("${",baseIndex),endIndex=input.indexOf("}",startIndex+1),macroName,transformedMacroName,dataIDNameTable={},rows=this.data.gts.row,cols=this.data.gts.col,index,row,col,es,colElement,j;for(index=0;index<rows.length;index++){row=rows[index];dataIDNameTable[row.id+"|"+row.fid]=row.n;}for(index=0;index<cols.length;index++){col=cols[index];if(col.otp===-1){es=col.es;for(j=0;j<es.length;j++){colElement=es[j];dataIDNameTable[colElement.id]=colElement.n;}break;}}while(startIndex>=0&&endIndex>startIndex){macroName=input.substring(startIndex+2,endIndex);if(dataIDNameTable.hasOwnProperty(macroName)){result+=input.substring(baseIndex,startIndex+2)+dataIDNameTable[macroName];}else{result+=input.substring(baseIndex,endIndex);}baseIndex=endIndex;startIndex=input.indexOf("${",baseIndex);endIndex=input.indexOf("}",startIndex+1);}result+=input.substring(baseIndex);this.infoWindowHTML=result;},replaceInfoWindowHTMLMacros:function replaceInfoWindowHTMLMacros(){var input=this.infoWindowHTML,result="",baseIndex=0,startIndex=input.indexOf("${",baseIndex),endIndex=input.indexOf("}",startIndex+1),macroName,transformedMacroName,dataNameIDTable={},rows=this.data.gts.row,cols=this.data.gts.col,row,col,index,es,colElement,j;for(index=0;index<rows.length;index++){row=rows[index];dataNameIDTable[this.parent.replaceSpace(row.n)]=row.id+"|"+row.fid;}for(index=0;index<cols.length;index++){col=cols[index];if(col.otp===-1){es=col.es;for(j=0;j<es.length;j++){colElement=es[j];dataNameIDTable[this.parent.replaceSpace(colElement.n)]=colElement.id;}break;}}while(startIndex>=0&&endIndex>startIndex){macroName=input.substring(startIndex+2,endIndex);var colonIndex=macroName.indexOf(":");if(colonIndex>=0){macroName=macroName.substring(0,colonIndex)+" "+macroName.substring(colonIndex+1);}macroName=this.parent.replaceSpace(macroName);if(dataNameIDTable.hasOwnProperty(macroName)){result+=input.substring(baseIndex,startIndex+2)+dataNameIDTable[macroName];}else{result+=input.substring(baseIndex,endIndex);}baseIndex=endIndex;startIndex=input.indexOf("${",baseIndex);endIndex=input.indexOf("}",startIndex+1);}result+=input.substring(baseIndex);return result;},isWebMercator:function(spatialReference){var wkid=spatialReference.wkid;return wkid===102100||wkid===102113||wkid===3857||wkid===3785;},getExtentForSingleMarker:function getExtentForSingleMarker(latitude,longitude){latitude=parseFloat(latitude);longitude=parseFloat(longitude);var minLat,maxLat,minLon,maxLon,parent=this.parent,pntSpaRef=parent.esriMap.spatialReference,deltaDegree=10;minLat=Math.max(latitude-deltaDegree,MIN_LATITUDE+0.1);maxLat=Math.min(latitude+deltaDegree,MAX_LATITUDE-0.1);minLon=longitude-deltaDegree;maxLon=longitude+deltaDegree;var bottomLeft=new esri.geometry.Point(minLon,minLat,pntSpaRef);var topRight=new esri.geometry.Point(maxLon,maxLat,pntSpaRef);if(this.isWebMercator(pntSpaRef)){bottomLeft=esri.geometry.geographicToWebMercator(bottomLeft);topRight=esri.geometry.geographicToWebMercator(topRight);}var points=new esri.geometry.Multipoint(pntSpaRef);points.addPoint(bottomLeft);points.addPoint(topRight);return points.getExtent();},unrender:function unrender(deepClean){if(this.unrenderred){return ;}this.parent.totalLayersRendered--;if(this._super){this._super();}var map=this.parent.esriMap,layerId,listeners=this.viewerEventListeners;if(!!this.densityLayer){this.cleanDensityMap();delete this.densityLocations;}this.clearAllHighlight();if(this.infoWindowVisible){this.hideInfoWindow();}this.rowIndex2Graphics=null;if(deepClean){if(!!this.markerLayer){layerId=this.markerLayer.id;if(!!layerId&&!!map.getLayer(layerId)){map.removeLayer(map.getLayer(layerId));}this.markerLayer=null;}this.removePolygonLayer();this.removeDataLabelLayer();if(this.markerLayerWrapper){this.markerLayerWrapper.destroy();this.markerLayerWrapper=null;}this.parent.removeEventListeners(listeners);if(this.parent.drawingLayer){this.parent.drawingLayer.clear();}this.unrenderred=true;}else{if(this.enableMarker){this.markerLayer.hide();}if(this.enableDensity){this.densityLayer.hideLayer();}if(this.enablePolygon){this.polygonLayer.hide();}this.hideDataLabelLayer();this.visible=false;}if(this.currentSelections){this.currentSelections={};}if(this.selectedRowIndices){this.selectedRowIndices={};}if(this.highlightedGraphics){this.highlightedGraphics={};}},destroy:function destroy(deepClean){if(this.unrenderred){return ;}this.unrender(deepClean);var disposables=this.parent.disposables;for(var i=0,il=disposables.length;i<il;i++){if(this===disposables[i]){delete disposables[i];disposables.splice(i,1);break;}}this._super(deepClean);},supportDataLabel:function(){return this.enablePolygon||this.enableMarker;},isMarkerMap:function(){return this.enableMarker;},getMapPoint:function(points,spatialReference){var position=this.getCentroidOfPolygon(points);return new esri.geometry.Point(position[0],position[1],spatialReference);},createDataLavelLayer:function(){if(!this.dataLabelLayer){this.dataLabelLayer=new esri.layers.GraphicsLayer({id:"DataLabel"});this.parent.esriMap.addLayer(this.dataLabelLayer);}},removeDataLabelLayer:function(){if(this.dataLabelLayer){var map=this.parent.esriMap;map.removeLayer(map.getLayer(this.dataLabelLayer.id));this.dataLabelLayer.clear();this.dataLabelLayer=null;}},clearDataLabelLayer:function(){if(this.dataLabelLayer){this.dataLabelLayer.clear();}},showDataLabelLayer:function(){if(this.dataLabelLayer){this.dataLabelLayer.show();}},hideDataLabelLayer:function(){if(this.dataLabelLayer){this.dataLabelLayer.hide();}},initParas:function(){this._super();var mapPoint,eastLngPoint,westLngPoint,geoScreenRange,parent=this.parent,screenWidth=this.screenWidth,screenHeight=this.screenHeight,mapExtent=parent.esriMap.extent,baseMapSpatialReference=parent.esriMap.spatialReference,isWebMercator=this.isWebMercator(baseMapSpatialReference),geometry=esri.geometry,Point=geometry.Point,eastLng180=isWebMercator?geometry.lngLatToXY(180,0):[180,0],westLng180=isWebMercator?geometry.lngLatToXY(-180,0):[-180,0];mapPoint=new Point(eastLng180[0],eastLng180[1],baseMapSpatialReference);eastLngPoint=geometry.toScreenPoint(mapExtent,screenWidth,screenHeight,mapPoint);mapPoint=new Point(westLng180[0],westLng180[1],baseMapSpatialReference);westLngPoint=geometry.toScreenPoint(mapExtent,screenWidth,screenHeight,mapPoint);geoScreenRange=Math.abs(eastLngPoint.x-westLngPoint.x);this.esriMapExtent=mapExtent;this.intsecXmin=geoScreenRange<screenWidth?(screenWidth-geoScreenRange)/2:0;this.intsecXmax=geoScreenRange<screenWidth?(screenWidth+geoScreenRange)/2:screenWidth;this.geoScreenRange=geoScreenRange;},updateScreenPoint:function(pointsConfig){var i,screenPoint,config,screenWidth=this.screenWidth,screenHeight=this.screenHeight,mapExtent=this.esriMapExtent,geometry=esri.geometry,n=(pointsConfig&&pointsConfig.length)||0;for(i=0;i<n;i++){config=pointsConfig[i];screenPoint=geometry.toScreenPoint(mapExtent,screenWidth,screenHeight,config.mapPoint);this.parseScreenPoint(screenPoint);config.screenPoint=screenPoint;}},parseScreenPoint:function(screenPoint){var xCoord=screenPoint.x,intsecXmin=this.intsecXmin,intsecXmax=this.intsecXmax,geoScreenRange=this.geoScreenRange;if(xCoord>=intsecXmin&&xCoord<=intsecXmax){return ;}xCoord=screenPoint.x%geoScreenRange;while(xCoord<intsecXmin){xCoord+=geoScreenRange;}if(xCoord>=intsecXmin&&xCoord<=intsecXmax){screenPoint.x=xCoord;}},drawDataLabels:function(labels,mapPoint){var k,textSymbol,labelPointGraphic,label,font=this.dlFont,color=this.dlFontStyle.color,m=labels.length,dataLabelLayer=this.dataLabelLayer,Graphic=esri.Graphic,TextSymbol=esri.symbol.TextSymbol;for(k=0;k<m;k++){label=labels[k];textSymbol=new TextSymbol(label.label,font,color);textSymbol.setOffset(label.xOffset,label.yOffset);labelPointGraphic=new Graphic(mapPoint,textSymbol);dataLabelLayer.add(labelPointGraphic);}}});})();