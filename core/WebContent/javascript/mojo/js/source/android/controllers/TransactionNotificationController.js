(function(){mstrmojo.requiresCls("mstrmojo.android.controllers.ViewController","mstrmojo.func","mstrmojo.hash");mstrmojo.requiresDescs(9478,9479,9753);var $HASH=mstrmojo.hash,TX_QUEUE_LEVEL_DOC=1,TX_QUEUE_LEVEL_ALL=2,guiTitle;mstrmojo.android.controllers.TransactionNotificationController=mstrmojo.declare(mstrmojo.android.controllers.ViewController,null,{scriptClass:"mstrmojo.android.controllers.TransactionNotificationController",widgetMap:null,boardOpen:null,init:function init(props){this._super(props);var widgetMap=this.widgetMap={},boardModel=this.boardModel=this.model.getBoardModel();if(!this._txListener){this._txListener=boardModel.attachEventListener("recordChanged",this.id,function(e){$HASH.forEach(widgetMap,function(v,k){if(!e.data||!e.data[k]){v.set("txData",null);delete widgetMap[k];}});if(this.isNotificationBoardOpen()){this.pendingUpdate=true;}else{this.generateActionToolbar();}});}},start:function start(params){this._super(params);var view=this.view=mstrApp.viewFactory.newView("Transactions",{model:this.boardModel,context:params.context,controller:this});guiTitle=mstrmojo.desc(9753,"Transactions");this.rootCtrl.updateTransactions(view,guiTitle);},destroy:function destroy(ignoreDOM){var listener=this._txListener;if(listener){listener.clear();}this._super(ignoreDOM);},hasTransactionQueue:function hasTransactionQueue(did){var txs=this.model.hasOfflineTransactions();if(txs&&did){txs=this.boardModel.getOfflineRecords(did);}return txs;},hasPendingTransactions:function hasPendingTransactions(did){var docTx=this.boardModel.getOfflineRecords(did);return(docTx&&docTx.pending&&docTx.pending.length);},showNotificationBoard:function showNotificationBoard(srcController,did,docTitle){var startParams={},boardOpen=TX_QUEUE_LEVEL_ALL;if(did){startParams={context:{id:did,n:docTitle||srcController.ttl}};boardOpen=TX_QUEUE_LEVEL_DOC;}this.boardOpen=boardOpen;this.contextController=srcController;srcController.spawn(this,startParams);},isNotificationBoardOpen:function isNotificationBoardOpen(){return !!this.boardOpen;},isAllTransactionLevel:function isAllTransactionLevel(){return(this.boardOpen===TX_QUEUE_LEVEL_ALL);},editTransactionRecord:function editTransactionRecord(did,isPending,timeStamp,callback){var bm=this.boardModel,id=this.id;this.model.editTransactionRecord(did,isPending,timeStamp,mstrmojo.func.wrapMethods(callback,{success:function(response){mstrmojo.all[id].startDocument(response,did,bm.docsTx[did]&&bm.docsTx[did].p.pid);}}));},deleteTransactionRecord:function deleteTransactionRecord(did,isPending,timeStamp,callback){callback=callback||{};var fnSuccess=callback.success||mstrmojo.emptyFn,me=this;callback.success=function(data){var noTxRecords=!me.boardModel.getOfflineRecords();fnSuccess(data);var boardOpen=me.boardOpen;if(boardOpen===TX_QUEUE_LEVEL_ALL&&noTxRecords){me.goBack();}if((boardOpen===TX_QUEUE_LEVEL_DOC&&noTxRecords)||me.model.emptyTransactionQueue){mstrmojo.toast(me.model.emptyTransactionQueue?mstrmojo.desc(9478,"There are no more pending transactions"):mstrmojo.desc(9479,"There are no more pending transactions for the current document"));me.goUp();}};this.model.deleteTransactionRecord(did,isPending,timeStamp,callback);},startDocument:function startDocument(res,did,pid){res.ifc=false;this.rootCtrl.closeTransactions(true);var contextController=this.contextController;if(contextController){if(contextController instanceof mstrmojo.android.controllers.ResultSetController){if(contextController.did===did){contextController.hasTxChanges=true;contextController.model.transactionUpdate(res);contextController.setData(res);contextController.getPageByTree(true);contextController.makeCurrent();return ;}}var ctParams={action:"open",data:res,documentID:did,hasTxChanges:true,st:14081};if(pid!==mstrApp.getCurrentProjectId()){ctParams.projectID=pid;}contextController.spawn(mstrApp.controllerFactory.newController("Document",{st:14081}),ctParams);}},detach:function detach(){this._super();this.boardOpen=null;if(this.pendingUpdate){this.rootCtrl.getCurrent().generateActionToolbar();delete this.pendingUpdate;}},addWidgetListener:function addWidgetListener(did,w){this.widgetMap[did]=w;},goBack:function goBack(){if(this._super()){return true;}if(this.boardOpen!==TX_QUEUE_LEVEL_ALL||!this.view.goBack()){this.rootCtrl.closeTransactions();}return true;},goUp:function goUp(){if(!this._super()){this.rootCtrl.closeTransactions();}return true;},makeCurrent:function makeCurrent(isBack){this._super(isBack);this.rootCtrl.updateTransactions(this.view,guiTitle,isBack);},setOfflineRecords:function setOfflineRecords(did){this.model.refresh();}});}());