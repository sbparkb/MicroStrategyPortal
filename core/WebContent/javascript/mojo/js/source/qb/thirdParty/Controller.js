(function(){mstrmojo.requiresCls("mstrmojo.qb.RootController","mstrmojo.warehouse.WHController");mstrmojo.requiresDescs(12752,12898,13324);var $ARR=mstrmojo.array;function getDIController(){return mstrApp.container.launchingApp.getRootController();}function wrapTheDetailedError(model){var failedFiles=[];var successFiles=[];var srcs=model.urlSrc;var detailMsg="<ul>";mstrmojo.hash.forEach(srcs,function(src){if(src.fail===true){failedFiles.push(src.tableID);detailMsg+="<li>"+src.url+"<br>"+src.errorMsg||" </li>";}else{successFiles.push(src.tableID);}});detailMsg+="</ul>";return detailMsg;}function handleFileImportWarning(model,okHandler,cancelHandler){var detailMsg=wrapTheDetailedError(model);var config={detailErrorMessage:detailMsg,okBtnText:mstrmojo.desc(219,"Yes"),cancelBtnText:mstrmojo.desc(218,"No"),onCancel:cancelHandler};var title=mstrmojo.desc(12752,"BI Sources"),message=mstrmojo.desc(13324,"Error importing the following files. Click 'Yes' to ignore the erroneous files and proceed with the successful files. Otherwise, click 'No' to check the erroneous files or delete them."),errorController=getDIController();errorController.displayWarning(message,title,okHandler,config);}function handleFileImportError(model){var errorController=getDIController();var detailMsg=wrapTheDetailedError(model);errorController.displayError(mstrmojo.desc(12900,"Error importing following files. Please check the files or delete them."),false,detailMsg);}function populateTable(model,dbRoleID,url,idx,callback){var automapCallback={success:function success(){model.buildRelations(callback);},failure:function failure(){model.urlSrc[idx].fail=true;callback.success();}};model.setDBRole(dbRoleID);model.autoMapFFSQL(url,automapCallback);}function createSourceTable(model,src,callback,idx){var dataService=mstrApp.getRootController().getDataService();dataService.createEmmaTable({success:function success(res){model.tableID=res.tbid;mstrApp.msgid=res.msgid;src.tableID=res.tbid;populateTable(model,src.dbRoleID,src.url,idx,callback);},failure:function failure(){model.urlSrc[idx].fail=true;handleFileImportError(model);}},{xt:model.xdaType,dict:model.connectorType});}function getDefaultName(model){var dbr=model.getDBRole(model.SelDBRoleID);var sourceName=dbr?dbr.n:"";var name="BI Source from "+sourceName;return{name:name};}function onAllSrcProcessed(model,callback){var dataService=mstrApp.getRootController().getDataService();var srcs=model.urlSrc,importedSrc=[],tablesToDel=[];$ARR.forEach(srcs,function(src){if(src.fail){tablesToDel.push(src.tableID);}else{importedSrc.push(src);}});var okHandler=function(){callback.success();},cancelHandler=function(){var controller=mstrApp.getRootController();controller.removeImportedSrc(importedSrc);};var allFailed=(tablesToDel.length===srcs.length);var onTableDeleted={success:function success(){if(allFailed){handleFileImportError(model);}else{handleFileImportWarning(model,okHandler,cancelHandler);}},failure:function failure(){var errorController=getDIController();errorController.displayError(mstrmojo.desc(12898,"Delete failed table failure!"),true);}};var failNum=tablesToDel.length;if(failNum===0){callback.success();}else{if(model.isNew){dataService.removeEmmaTable(onTableDeleted,{did:tablesToDel.join()});}else{handleFileImportError(model);}}}mstrmojo.qb.thirdParty.Controller=mstrmojo.declare(mstrmojo.qb.RootController,null,{scriptClass:"mstrmojo.qb.thirdParty.Controller",proIdx:-1,commit:function commit(callback){var model=this.model,rootView=mstrApp.getRootController().rootView,srcArr=rootView.getSrcUrls(),srcCnt=srcArr.length,$this=this,src;model.urlSrc=srcArr;$this.proIdx=0;if(srcCnt>0){src=srcArr[0];var cb={success:function(){$this.proIdx++;src=srcArr[$this.proIdx];if(src){createSourceTable(model,src,cb,$this.proIdx);}else{onAllSrcProcessed(model,callback);}}};if(model.isNew){createSourceTable(model,src,cb,$this.proIdx);}else{populateTable(model,src.dbRoleID,src.url,0,callback);}}},onBackButtonClick:function onBackButtonClick(){mstrApp.container.unloadQB();var controller=mstrApp.getRootController();var header=controller.rootView.header;if(header){header.subtitle.set("text","");}controller.backFromQB();},handleFinish:function handleFinish(){var model=this.model,me=this,operationMode=model.operationMode,callback={};callback.onOK=function(params){me.commit({success:function success(){var messageID=mstrApp.msgid,isManagedCube=model.isManagedCube;mstrApp.container.unloadQB();mstrApp.messageID=messageID;mstrApp.saveCubeParams=params;mstrApp.isManagedCube=isManagedCube;mstrApp.getRootController().afterQBProcess(true);}});};if(operationMode===1){callback.onOK();}else{if(!model.isManagedCube&&!mstrApp.isSingleTier){mstrmojo.qb.QBHelpers.showSaveAsDialog(callback,getDefaultName(this.model));}else{callback.onOK();}}},onFinishButtonClick:function onFinishButtonClick(){this.handleFinish();},removeImportedSrc:function removeImportedSrc(srcs){this.rootView.removeSrcs(srcs);},canDisplayCatalogSQL:function canDisplayCatalogSQL(){return false;},handleServerRequestError:function handleServerRequestError(genericMsg,detailedMsg,callback,title,alertCfg){var idx=this.proIdx;if(idx<0){mstrmojo.DI.controller.DIDialogController.showErrorDialog(genericMsg,detailedMsg,callback,title,alertCfg);}else{var src=this.model.urlSrc[idx];if(src){src.errorMsg=detailedMsg;}if(callback){callback();}}}});}());