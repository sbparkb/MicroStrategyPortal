(function(){mstrmojo.requiresCls("mstrmojo.qb.es.DataService","mstrmojo.warehouse.WHController","mstrmojo.qb.es.AlternateSourceDialog","mstrmojo.DI.ui.dialogs.DIDirectAccessConfirmDialog","mstrmojo.qb.QBHelpers","mstrmojo.DI.DIHelpers","mstrmojo.DI.DIConstants");mstrmojo.requiresDescs(12379,12380,2171,9614,9621,1395,9613,9619,2265,8002,9612,9623,9616,9611,9622,9615,2052,2170,9620,9617,9618,5471,4444);var $ARR=mstrmojo.array,$H=mstrmojo.hash,$QBHelpers=mstrmojo.qb.QBHelpers,$DESC=mstrmojo.desc,$DIHelpers=mstrmojo.DI.DIHelpers,$QB_APP_TYPE=mstrmojo.qb.EnumQBAppType,$DIConstants=mstrmojo.DI.DIConstants;var IRR_SOURCE_TYPE_SINGLE_TABLE=1,ALTERNATE_SOURCE_DIALOG="mstr-qb-alternatesource";var DDA_ERR_MSGS={1:$DESC(12379,"We cannot convert the cube to a DDA cube because you are importing some tables that cannot support it. Remove them to enable this feature."),2:$DESC(12380,"The cube has to be a direct data access cube due to some of the sources selected. You will have to delete them if you want to change this.")};function toggleFinishButton(isVisible){var showFooter=mstrApp.diShowFooterFunction;if(showFooter){showFooter({finish:{visible:isVisible}});}}function openAlternateSourceDialog(items,zIndex){var dialog;dialog=mstrmojo.all[ALTERNATE_SOURCE_DIALOG]||(new mstrmojo.qb.es.AlternateSourceDialog({id:ALTERNATE_SOURCE_DIALOG}));if(zIndex){dialog.set("zIndex",zIndex);}dialog.items=items;dialog.open();}var COLUMN_DATA_TYPES={0:$DESC(2171,"Default"),1:$DESC(9614,"Integer"),2:$DESC(9621,"Unsigned"),3:$DESC(1395,"Numeric"),4:$DESC(9613,"Decimal"),5:$DESC(9619,"Real"),6:$DESC(2265,"Double"),7:$DESC(8002,"Float"),8:$DESC(9612,"Char"),9:$DESC(9623,"VarChar"),10:$DESC(9616,"Long VarChar"),11:$DESC(9611,"Binary"),12:$DESC(9622,"VarBin"),13:$DESC(9615,"Long VarBin"),14:$DESC(2052,"Date"),15:$DESC(2170,"Time"),16:$DESC(9620,"TimeStamp"),17:$DESC(9617,"NChar"),18:$DESC(9618,"NVarChar"),30:$DESC(5471,"Big decimal")};function getDataTypeString(dataTypeInt){return COLUMN_DATA_TYPES[dataTypeInt]||$DESC(4444,"Unknown");}function parseAlternateSourceValidationResults(cols){var items=[],origName,origDataType,newName,newDataType,src,isMatch,origCol,newCol;$ARR.forEach(cols,function(col){origName=origDataType=newName=newDataType="";isMatch=(col.vt===3)?1:0;switch(col.vt){case 0:case 1:case 2:case 3:origName=col.n;origDataType=getDataTypeString(col.ddt);src=col.src;newName=src.n;newDataType=getDataTypeString(src.ddt);break;case 4:origName=col.n;origDataType=getDataTypeString(col.ddt);break;case 8:src=col.src;newName=src.n;newDataType=getDataTypeString(src.ddt);break;}origCol=origDataType?origName+"("+origDataType+")":origName;newCol=newDataType?newName+"("+newDataType+")":newName;items.push([origCol,isMatch,newCol]);});return items;}function getDefaultName(model){var tableNames=[];$ARR.forEach(model.tables,function(table){tableNames.push(table.dbtn||"");});return{name:$DIHelpers.generateCubeName(tableNames)};}mstrmojo.qb.es.Controller=mstrmojo.declare(mstrmojo.warehouse.WHController,null,{ddaController:null,start:function start(){var rootView=this.rootView,model=this.model,controller=this,footerID,footer,contButton,finishButton;this.dataService=mstrmojo.qb.es.DataService;if(mstrApp.emmaIRRMessageID){this.dataService.emmaIRRMessageID=mstrApp.emmaIRRMessageID;}rootView.render();this.toggleDatabaseView(true);var loadDBRoles=function loadDBRoles(){controller.loadDBRoles({success:function success(){var isVisible;isVisible=(mstrApp.emmaTablesNum===0);toggleFinishButton(isVisible);if(mstrApp.tableID&&mstrApp.msgid){model.loadTable(mstrApp.tableID);}else{if(!controller.model.isForAlternateSource&&!mstrApp.msgid){controller.dataService.createEmmaInstance({success:function success(res){mstrApp.msgid=res.msgid;}});}}}});};if(model.specifyDBTypes){model.dbObjects.populateDBProperties({success:function success(){loadDBRoles();}});}else{model.loadDBTypeFilters({success:function success(){loadDBRoles();}});}footerID=mstrApp.diFooterID;footer=footerID?mstrmojo.all[footerID]:undefined;if(footer){contButton=footer.next;finishButton=footer.finish;model.attachEventListener("refreshTables",contButton.id,footer.enableButton);model.attachEventListener("refreshTables",finishButton.id,footer.enableButton);}},getCurrentZIndex:function getCurrentZIndex(){return mstrApp.diCurrentZIndex;},getDataService:function getDataService(){return this.dataService;},toggleDatabaseView:function toggleDatabaseView(show){this.rootView.toggleDatabaseView(show);},openHelp:function openHelp(){var url=(mstrApp.helpUrl||"../help/")+"WebUser/WebHelp/Lang_"+(mstrApp.helpLocaleId||mstrApp.localeId)+"/MicroStrategy_Web_Help.htm#"+(mstrApp.isFFSQL?"freeform_import_page.htm":"database_import_page.htm");window.open(url);},addTable:function addTable(tables){this.model.addTable(tables);},addTables:function addTables(tables){this.model.addTable(tables);},removeTable:function removeTable(idx){this.model.removeTable(idx);},removeDBRoleTables:function removeDBRoleTables(dbRoleID){if(mstrApp.type===$QB_APP_TYPE.EmmaSingleTable){this.model.removeDBRoleTables(dbRoleID);}},cancel:function cancel(){if(!mstrApp.isFromDI){var pageNumber=mstrApp.origin?"-2":"-1";mstrmojo.form.send({evt:"3124",src:mstrApp.name+".qbuilder.3124",relativePageNumber:pageNumber},mstrApp.name,"POST",null,null,false);}},commitChanges:function commitChanges(){this.model.commitChanges({success:function success(res){var msgid=res.msgid;mstrmojo.form.send({evt:"3172",messageID:msgid,launchingApp:"QB"},mstrApp.name,"POST",null,null,false);}});},onNextButtonClick:function onNextButtonClick(){this.model.commitChanges({success:function success(res){var model=mstrApp.getRootController().model,isDDA=model.isDDA,isManagedCube=model.isManagedCube;mstrApp.container.unloadQB();mstrApp.messageID=res.msgid;mstrApp.isDDA=isDDA;mstrApp.isManagedCube=isManagedCube;mstrApp.getRootController().afterQBProcess();}});},saveDDACube:function saveDDACube(saveCubeParams){var model=this.model,params={},callback;callback={success:function(res){var messageID=mstrApp.msgid,isDDA=model.isDDA,diController,diModel,diparams,dicallback,postMergeDupIDCallback,isManagedCube=model.isManagedCube;mstrApp.container.unloadQB();mstrApp.messageID=messageID;mstrApp.isDDA=isDDA;mstrApp.isManagedCube=isManagedCube;diController=mstrApp.getRootController();diModel=diController.model;diController.getDDAController().setDirectDataAccess(mstrApp.isDDA);diController.dataService.set("messageID",mstrApp.messageID);diModel.isManagedCube=mstrApp.isManagedCube;diModel.cubeName=getDefaultName(model).name;if(mstrApp.isSingleTier){diparams={isDirectDataAccess:diModel.isDirectDataAccess,name:diModel.cubeName};dicallback={success:function(res){if(res.objectId){diModel.cubeID=res.objectId;}diController.wrapUpDataImport();},failure:function(res){mstrApp.hideProgress();diController.displayError(mstrmojo.desc(13061,"Error in creating the dataset."),false,res&&res.message);}};postMergeDupIDCallback={success:function(){diController.dataService.createOneTierDoc(dicallback,diparams);},failure:function(res){mstrApp.hideProgress();diController.displayError(mstrmojo.desc(13062,"Error in merging the duplicate report instance."),false,res&&res.message);}};if(diModel.operationMode===$DIConstants.operationMode.edit||diModel.operationMode===$DIConstants.operationMode.refresh){diController.dataService.duplicateReportInstance(postMergeDupIDCallback,{messageID:diModel.analysisID,datasetID:diModel.cubeID,duplicateRIMsgID:diController.dataService.messageID});}else{diController.dataService.createOneTierDoc(dicallback,diparams);}return ;}if(isManagedCube){diController.wrapUpDataImport();return ;}diModel=diController.model;if(res&&res.objectId){diModel.cubeID=res.objectId;}diModel.path=saveCubeParams&&saveCubeParams.objPath;diController.wrapUpDataImport();}};function continueSave(){if(model.isManagedCube){callback.success();return ;}params.displayMode=12;params.shouldRefresh=false;if(model.isDDA){params.shouldRefresh=false;params.saveAsFlags=$DIConstants.saveAsFlags.saveAsDDA|$DIConstants.saveAsFlags.saveAsOverWrite;}else{params.saveAsFlags=$DIConstants.saveAsFlags.saveAsInMemory|$DIConstants.saveAsFlags.saveAsOverWrite;}params.taskId="saveAndPublishCube";params.showWait=true;params=$H.copy(saveCubeParams,params);params.saveAsOverwrite=true;delete params.objPath;mstrApp.getRootController().model.submitRequest(callback,params);}mstrApp.getRootController().model.submitRequest({success:function(){if(model.operationMode!==2){mstrApp.getRootController().model.submitRequest({success:function(){continueSave();}},{taskId:"DIClearRelationshipEMMASourceTable",showWait:true});}else{continueSave();}}},{taskId:"DIToggleDatasetServeMode",serveMode:model.isDDA?$DIConstants.datasetServeMode.dda:$DIConstants.datasetServeMode.inMemory,showWait:true});},handleFinish:function handleFinish(){var model=this.model,me=this,operationMode=model.operationMode,callback={};callback.onOK=function(params){model.commitChanges({success:function success(res){var messageID=res.msgid,isDDA=model.isDDA,isManagedCube=model.isManagedCube;if(isDDA&&operationMode!==1){me.saveDDACube(params);}else{mstrApp.container.unloadQB();mstrApp.messageID=messageID;mstrApp.isDDA=isDDA;mstrApp.saveCubeParams=params;mstrApp.isManagedCube=isManagedCube;mstrApp.getRootController().afterQBProcess(true);}}});};if(operationMode===1){callback.onOK();}else{if(!model.isManagedCube&&!mstrApp.isSingleTier){$QBHelpers.showSaveAsDialog(callback,getDefaultName(this.model));}else{callback.onOK();}}},onFinishButtonClick:function onFinishButtonClick(){var rootController=this,model=this.model,ddaController=rootController.getDDAController(),callback,isSAPHana,dialogConfig,curZIndex=mstrApp.diCurrentZIndex,popupZIndex=curZIndex?curZIndex+1:10;$ARR.forEach(model.tables,function(table){if(table.extt||table.hanai){isSAPHana=true;model.isDDA=true;}});if(!model.origIsDDA&&ddaController.allowDDA()&&!isSAPHana){callback={onOK:function(){rootController.handleFinish();}};dialogConfig={callback:callback,selectedIndex:model.isDDA?0:1,zIndex:popupZIndex};ddaController.showDDAConfirmDialog(dialogConfig);return ;}this.handleFinish();},onBackButtonClick:function onBackButtonClick(){mstrApp.container.unloadQB();mstrApp.getRootController().backFromQB();},onCancelButtonClick:function onCancelButtonClick(){this.exitApplication();},exitApplication:function exitApplication(){mstrApp.container.unloadQB();mstrApp.getRootController().onCancelButtonClick();},getTableErrorMsg:function(){return this.model.addTableErrorMsg;},selectAlternateSource:function selectAlternateSource(tableID,callback,nextZIndex){var controller=this,dataService=controller.dataService,model=this.model,tables=model.tables,table,editSourceCallback,editSourceParams,failureCallback=null,alertCfg={zIndex:nextZIndex+1000};if(tables.length===0){return ;}table=tables[0];if(callback.failure){failureCallback=function(res){callback.failure(res);};}editSourceCallback={success:function(){var validateCallback;mstrApp.hasEditEmmaIRRSource=true;validateCallback={success:function(res){var diDataService,messageID,emmaIRRMessageID,items;if(res.vt===1){messageID=mstrApp.msgid;emmaIRRMessageID=dataService.emmaIRRMessageID;mstrApp.container.unloadQB();diDataService=mstrApp.getRootController().dataService;mstrApp.messageID=messageID;if(messageID){diDataService.set("messageID",messageID);}if(emmaIRRMessageID){diDataService.set("emmaIRRMessageID",emmaIRRMessageID);}if(callback.success){callback.success({tableName:table.n});}}else{items=parseAlternateSourceValidationResults(res.cols);openAlternateSourceDialog(items,nextZIndex);}},failure:failureCallback};dataService.validateEmmaIRRAlternateSource(validateCallback,{tbid:tableID,alertCfg:alertCfg});},failure:failureCallback};editSourceParams={sourceType:IRR_SOURCE_TYPE_SINGLE_TABLE,tables:tableID,deleteTables:"0",dbRoleID:table.dbr,dbTableName:table.n,alertCfg:alertCfg};if(table.ns){editSourceParams.dbNamespace=table.ns;}dataService.editEmmaIRRSourceTable(editSourceCallback,editSourceParams);},getDDAController:function getDDAController(){if(this.ddaController===null){this.ddaController={shouldAskUser:true,allowDDA:function allowDDA(){var model=mstrApp.getRootController().model,dbrid=null,canSupport=!!model.canSupportDDA,dbridForDDA,tables=model.tables;if(!canSupport){return false;}if(tables.length>0){dbrid=tables[0].dbr;}dbridForDDA=model.dbridForDDA;if(dbridForDDA&&dbrid!==null&&dbridForDDA!==dbrid){canSupport=false;}if(!canSupport){return false;}$ARR.forEach(tables,function(table){if(table.dbr!==dbrid){canSupport=false;return false;}return true;});return canSupport;},onlyAllowDDA:function onlyAllowDDA(){return !!mstrApp.getRootController().model.shouldSupportDDA;},onToggleDDA:function onToggleDDA(value){var model=mstrApp.getRootController().model,errCode=0,checked;if(model.isDDA===value){return ;}if(value){model.set("isDDA",true);if(!this.allowDDA()){errCode=1;checked=false;}}else{model.set("isDDA",false);if(this.onlyAllowDDA()){errCode=2;checked=true;}}if(errCode){mstrmojo.qb.alert(DDA_ERR_MSGS[errCode]);model.set("isDDA",checked);}},checkDDACheckbox:function checkDDACheckbox(value){var ddaCheckboxID=mstrApp.getRootController().model.ddaCheckboxID,ddaCheckbox;if(ddaCheckboxID){ddaCheckbox=mstrmojo.all[ddaCheckboxID];if(ddaCheckbox){ddaCheckbox.set("checked",value);}}},tryEnableDDACheckbox:function tryEnableDDACheckbox(isEnabled){var ddaCheckboxID=mstrApp.getRootController().model.ddaCheckboxID,ddaCheckbox;if(ddaCheckboxID){ddaCheckbox=mstrmojo.all[ddaCheckboxID];}if(!ddaCheckbox||!ddaCheckbox.visible){return ;}if(!isEnabled){if(ddaCheckbox.enabled&&!ddaCheckbox.checked&&!this.allowDDA()){ddaCheckbox.set("enabled",false);}}else{if(!ddaCheckbox.enabled&&!ddaCheckbox.checked&&this.allowDDA()){ddaCheckbox.set("enabled",true);}}},askUserAboutDDA:function askUserAboutDDA(alreadyAsked){if(alreadyAsked){this.shouldAskUser=false;}return this.shouldAskUser;},showDDAConfirmDialog:function showDDAConfirmDialog(config){var dialog=new mstrmojo.DI.ui.dialogs.DIDirectAccessConfirmDialog(config||{});dialog.open();}};}return this.ddaController;},onHelpButtonClick:function onHelpButtonClick(){mstrApp.showHelpTopic(this.model.getHelpTopic());},selectDBRole:function selectDBRole(dbRoleID){var connList,index;if(!dbRoleID){return ;}connList=this.rootView.getDBConnectionList();index=$ARR.find(connList.items,"did",dbRoleID);if(index>=0){connList.set("selectedIndex",index);connList.adjustScrollPosition(index);}}});}());