(function(){mstrmojo.requiresCls("mstrmojo.hash","mstrmojo.array","mstrmojo.warehouse.EnumDatabaseType","mstrmojo.warehouse.EnumDataChangeEvents","mstrmojo.DI.DIConstants");mstrmojo.requiresDescs(14098,12406,13534,13535,12383,14666);var $DI_CONSTANTS=mstrmojo.DI.DIConstants,$ENUM_DATABASE_TYPE=mstrmojo.warehouse.EnumDatabaseType,$ENUM_DATA_CHANGE_EVENTS=mstrmojo.warehouse.EnumDataChangeEvents,$ENUMAPPTYPE=mstrmojo.qb.EnumQBAppType,$ARR=mstrmojo.array,changePartitionMode={SET_SINGLE_PARTITION_EMMA:4},SAPHANA_DB_TYPE=$ENUM_DATABASE_TYPE.SAPHana,ADD_TABLE_ERROR_CODE={SPECIAL_SOURCE:1,ALTERNATE_SOURCE:2,REFRESH_DATA:3},ADD_TABLE_ERROR_MSG={1:mstrmojo.desc(12406,"Multiple tables cannot be added to the selection list as this data source has a special restriction which allows only a single table to be present in the data cube."),2:mstrmojo.desc(13534,"Multiple tables cannot be added to the selection list when setting Alternate Source."),3:mstrmojo.desc(13535,"Multiple tables cannot be added to the selection list when refreshing data for a table which is not a partition table.")},CHUNK_SIZE=10,CURRENT_EMMA_TABLE_INDEX=0,CURRENT_SAP_HANA_TABLE_INDEX=0;function parsePartitionInfo(partitionInfo){var partition={isPartition:false},ptabs,partitionTables=[],partitionTable;if(!partitionInfo){return partition;}partition.type=partitionInfo.tp;partition.isPartition=partition.type!==0;ptabs=partitionInfo.ptabs||[];$ARR.forEach(ptabs,function(table){partitionTable={};if(table.n){partitionTable.name=table.n;}if(table.hasOwnProperty("shnb")){partitionTable.sheetIndex=table.shnb;}partitionTables.push(partitionTable);});partition.tables=partitionTables;return partition;}function preprocessTables(tables){var newTables=[],newTable;$ARR.forEach(tables,function(table){newTable={n:table.dbtn||table.n,ns:table.ns,dbr:table.dbr,dbrn:table.dbrn,tid:table.tid||"",gbqpid:table.gbqpid||""};if(table.extt){newTable.extt=table.extt;}if(table.clis){newTable.clis=table.clis;}if(table.hanai){newTable.afis=table.hanai.afis;newTable.hieris=table.hanai.hieris;newTable.varis=table.hanai.varis;}newTables.push(newTable);});return newTables;}function processEmmaTables(tables,callback,flag){var dataService=mstrApp.getRootController().getDataService(),tablesJSON,tableIDs,totalCount=tables.length,dataPrepareCallback={success:function success(){var params={};CURRENT_EMMA_TABLE_INDEX+=CHUNK_SIZE;if(CURRENT_EMMA_TABLE_INDEX>=totalCount){tablesJSON=JSON.stringify(preprocessTables(tables));params.tables=tablesJSON;if(flag!==undefined){params.flag=flag;}dataService.autoMap(callback,params);}else{tableIDs=[];$ARR.forEach(tables.slice(CURRENT_EMMA_TABLE_INDEX,CURRENT_EMMA_TABLE_INDEX+CHUNK_SIZE),function(table){tableIDs.push(table.tid);});dataService.prepareData(dataPrepareCallback,{tables:tableIDs.join(",")},Math.min(CURRENT_EMMA_TABLE_INDEX+CHUNK_SIZE,totalCount),totalCount);}},failure:function failure(){CURRENT_EMMA_TABLE_INDEX+=CHUNK_SIZE;},canceled:function(reqId,result){var cb={success:function(){callback.canceled();},failure:function(){callback.canceled();}};if(result&&(result.tid||result.jid)){dataService.killJob(cb,{threadId:result.tid,jobid:result.jid});}else{cb.success();}}};tableIDs=[];$ARR.forEach(tables.slice(CURRENT_EMMA_TABLE_INDEX,CURRENT_EMMA_TABLE_INDEX+CHUNK_SIZE),function(table){tableIDs.push(table.tid);});dataService.prepareData(dataPrepareCallback,{tables:tableIDs.join(",")},Math.min(CURRENT_EMMA_TABLE_INDEX+CHUNK_SIZE,totalCount),totalCount);}function raiseModelRefreshTablesEvent(){this.raiseEvent({name:"refreshTables",items:this.tables.slice(0),tablesEnabled:this.getAvailableTablesEnabled()});}mstrmojo.qb.es.Model=mstrmojo.declare(mstrmojo.warehouse.WHModel,null,{scriptClass:"mstrmojo.qb.es.Model",tables:[],addTableErrorMsg:undefined,dbRolesVersionExcludeFilter:[223],isDataImport:true,init:function init(props){if(this._super){this._super(props);}if(props===undefined||props.tables===undefined){this.tables=[];}if(props===undefined){return ;}if(this.isForAlternateSource){this.maxTableCount=1;this.addTableErrorMsg=ADD_TABLE_ERROR_MSG[ADD_TABLE_ERROR_CODE.ALTERNATE_SOURCE];}if(props.dbTypes!==undefined){this.specifyDBTypes=true;var dbTypes=props.dbTypes;if(props.hasNonSapHana||mstrApp.isSingleTier){$ARR.removeItem(dbTypes,SAPHANA_DB_TYPE);}this.dbRolesTypeFilter=dbTypes;this.dbmsTypeFilter=dbTypes.slice(0);}if(props.dbIds){this.dbRoleEditorCfg={dbIdFilter:props.dbIds};}if(props.dbVersions){this.dbRolesVersionFilter=props.dbVersions;this.dbmsVersionFilter=props.dbVersions;}this.dbRolesVersionExcludeFilter=(props.dbRolesVersionExcludeFilter!==undefined)?[223].concat(props.dbRolesVersionExcludeFilter):[223];if(mstrApp.isSingleTier){this.dbRolesVersionExcludeFilter=[203,220,228,252].concat(this.dbRolesVersionExcludeFilter);this.dbRoleEditorCfg=this.dbRoleEditorCfg||{};this.dbRoleEditorCfg.dsnDbTypeExcludeFilter=[4000];}if(props.dbObjects!==undefined){this.dbObjects=props.dbObjects;}if(props.isSapHanaSingleTable){this.isDDA=true;this.origIsDDA=true;this.dbObjectsDisplayOptions=1;this.specifyDBTypes=true;this.dbRolesTypeFilter=[$ENUM_DATABASE_TYPE.SAPHana];this.dbmsTypeFilter=this.dbRolesTypeFilter.slice(0);}if(props.isHadoopQB){this.dbObjectsDisplayOptions=16;this.specifyDBTypes=true;this.dbRolesTypeFilter=$DI_CONSTANTS.hadoopDbTypes.slice(0);this.dbmsTypeFilter=this.dbRolesTypeFilter.slice(0);this.dbRolesVersionExcludeFilter=$DI_CONSTANTS.ibmDb2Versions.concat(this.dbRolesVersionExcludeFilter);}if(props.subtype!==undefined){switch(props.subtype){case $DI_CONSTANTS.sourceSubtype.searchOnSource:this.maxTableCount=1;this.addTableErrorMsg=ADD_TABLE_ERROR_MSG[ADD_TABLE_ERROR_CODE.SPECIAL_SOURCE];this.isDDA=true;this.origIsDDA=true;this.dbRoleEditorCfg={hideDSNOption:true,hideDriverCheck:true,requiresLogin:false,dbIdFilter:[40]};this.helpTopic="importing_data_using_a_search_as_a_source.htm";this.dbObjectsDisplayOptions=4;this.specifyDBTypes=true;this.dbRolesTypeFilter=[$ENUM_DATABASE_TYPE.SearchEngineSOLR,$ENUM_DATABASE_TYPE.SearchEngineSPLUNK];break;}}this.dbRoleEditorCfg.dbIdExcludeFilter=[41,15];this.dbRoleEditorCfg.cfgDbmsTypeExcludeFilter=[3000];},helpTopic:"importing_data_from_relational_tables.htm",dbRoleEditorCfg:{dbIdExcludeFilter:[41]},canAddTableInDDA:function canAddTableInDDA(notRaiseError){var currentTables=this.tables,currentDBRoleID=this.SelDBRoleID,dbridForDDA,evt;if(this.isDDA){dbridForDDA=this.dbridForDDA;if(dbridForDDA&&currentDBRoleID!==dbridForDDA){evt={name:"directDataAccessTableError"};}else{if(!dbridForDDA&&currentTables.length>0&&currentDBRoleID!==currentTables[0].dbr){evt={name:"directDataAccessTableError"};}}}if(evt){if(!notRaiseError){this.raiseEvent(evt);}return false;}return true;},canAddTable:function canAddTable(notRaiseError,addTables){var currentTables=this.tables,addTablesNum=addTables?addTables.length:0,maxTableCount=this.maxTableCount,regularSAPHanaTables=[],tableType,$EXTERNAL_TABLE_TYPE={OLAP:4+262144000,JOIN:5+262144000,CALC:7+262144000};if(!this.canAddTableInDDA(notRaiseError)){return false;}if(maxTableCount&&currentTables.length+addTablesNum>maxTableCount){if(!notRaiseError){this.raiseEvent({name:"maxTableError"});}return false;}var currentDBRoleID=this.SelDBRoleID,currentDBRole=this.getDBRole(currentDBRoleID),toCheck=false;if(currentDBRole&&currentDBRole.mdDBRole&&currentDBRole.mdDBRole.db_type===SAPHANA_DB_TYPE){mstrmojo.array.forEach(addTables,function(table){tableType=parseInt(table.extt,10);if(tableType!==$EXTERNAL_TABLE_TYPE.OLAP&&tableType!==$EXTERNAL_TABLE_TYPE.JOIN&&tableType!==$EXTERNAL_TABLE_TYPE.CALC){regularSAPHanaTables.push(table);}});mstrmojo.array.removeItems(addTables,"did",regularSAPHanaTables);if(regularSAPHanaTables.length>0){this.raiseEvent({name:"SapHanaIncompatibleTypeError",data:regularSAPHanaTables});}if(addTablesNum!==0&&addTables.length===0){return false;}mstrmojo.array.forEach(currentTables,function(table){if(currentDBRoleID!==table.dbr){toCheck=true;return false;}});}else{mstrmojo.array.forEach(currentTables,function(table){if(table.hanai){toCheck=true;return false;}});}if(toCheck){this.raiseEvent({name:"SaPHanaError"});return false;}return true;},addTable:function addTable(tables){var currentTables=this.tables,currentDBRoleID=this.SelDBRoleID,currentDBRole=this.getDBRole(currentDBRoleID),currentDBRoleName=currentDBRole.n,ddaController,me=this;if(!this.canAddTable(false,tables)){return ;}if(currentDBRole.mdDBRole&&currentDBRole.mdDBRole.db_type===SAPHANA_DB_TYPE){mstrmojo.array.forEach(tables,function(table){currentTables.push({n:table.n,ns:table.ns,dbr:currentDBRoleID,dbrn:currentDBRoleName,dbtn:table.dbtn,extt:table.extt,hanai:table.hanai,clis:table.clis});});raiseModelRefreshTablesEvent.call(me);}else{mstrmojo.array.forEach(tables,function(table){currentTables.push({n:table.n,ns:table.ns,dbr:currentDBRoleID,dbrn:currentDBRoleName,dbtn:table.dbtn,gbqpid:me.selectedProject});});if(!this.isDDA){ddaController=mstrApp.getRootController().getDDAController();ddaController.tryEnableDDACheckbox(false);}if(mstrApp.msgid&&mstrApp.sessionManager){mstrApp.sessionManager.keepSessionAlive();}raiseModelRefreshTablesEvent.call(me);}},removeTable:function removeTable(index){var dataService=mstrApp.getRootController().getDataService(),currentTables=this.tables,ddaController,me=this,tid;tid=currentTables[index].tid;currentTables.splice(index,1);if(currentTables.length===0&&this.canAddTable(true)){this.raiseEvent({name:$ENUM_DATA_CHANGE_EVENTS.DBTABLES_ENABLED,value:true});}if(!this.isDDA){ddaController=mstrApp.getRootController().getDDAController();ddaController.tryEnableDDACheckbox(true);}if(tid&&!me.original){dataService.removeEMMATable({success:function(){raiseModelRefreshTablesEvent.call(me);}},{did:tid});}else{if(mstrApp.msgid&&mstrApp.sessionManager){mstrApp.sessionManager.keepSessionAlive();}raiseModelRefreshTablesEvent.call(me);}},removeDBRoleTables:function removeDBRoleTables(dbRoleID){var currentTables=this.tables,newTables=[],ddaController;if(!dbRoleID){return ;}$ARR.forEach(currentTables,function(table){if(table.dbr!==dbRoleID){newTables.push(table);}});if(newTables.length===currentTables.length){return ;}currentTables=this.tables=newTables;raiseModelRefreshTablesEvent.call(this);if(currentTables.length===0&&this.canAddTable(true)){this.raiseEvent({name:$ENUM_DATA_CHANGE_EVENTS.DBTABLES_ENABLED,value:true});}if(!this.isDDA){ddaController=mstrApp.getRootController().getDDAController();ddaController.tryEnableDDACheckbox(true);}},getAvailableTablesEnabled:function getAvailableTablesEnabled(){return this.canAddTableInDDA(true);},commitChangesEditPartition:function commitChangesEditPartition(callback){var me=this,dataService=mstrApp.getRootController().getDataService(),params,addTables=[],tables=me.tables,dbRoleId,dbNamespace,greenLight=true;if(tables.length===0){return ;}dbRoleId=tables[0].dbr;dbNamespace=tables[0].ns;$ARR.forEach(tables,function(table){greenLight=table.dbr&&table.dbr===dbRoleId&&((!table.ns&&!dbNamespace)||(table.ns===dbNamespace));if(!greenLight){return false;}addTables.push(table.n);return true;});if(!greenLight){mstrmojo.alert(mstrmojo.desc(12383,"Error: All the tables should share the same database and namespace when refreshing a partition table"),null,null);return ;}params={mode:changePartitionMode.SET_SINGLE_PARTITION_EMMA,partitionId:me.tableID,addTables:JSON.stringify(addTables)};dataService.changePartition(callback,params);},commitChanges:function commitChanges(callback){var isRefreshPartition=!!(this.tableID&&this.partition&&this.partition.isPartition),finalCallback=callback,bConfirm=false,me=this,msg=mstrmojo.desc(14666,"Do you want to group these tables into a single partition table?");if(!isRefreshPartition&&this.tableID&&this.tables.length>1){isRefreshPartition=true;bConfirm=true;}if(!isRefreshPartition){me._commitChanges(callback);return ;}callback={success:function success(){me._commitChanges(finalCallback,true);}};if(bConfirm){mstrmojo.confirm(msg,{confirmBtn:{fn:function(){me.commitChangesEditPartition(callback);}}});}else{me.commitChangesEditPartition(callback);}},_commitChanges:function _commitChanges(callback,isRefreshPartition){var finalCallback=callback;var dataService=mstrApp.getRootController().getDataService(),me=this,supportParallel=false,tablesJSON,flag,isSapHana=false,createTables=function createTables(callback){if(me.tables.length===0){if(callback&&callback.success){callback.success({msgid:mstrApp.msgid});}return ;}$ARR.forEach(me.tables,function(table){if(table.extt){isSapHana=true;return false;}});if(isSapHana){me.isDDA=true;}var postProcessing=function postProcessing(){tablesJSON=JSON.stringify(preprocessTables(isRefreshPartition?[me.tables[0]]:me.tables));if(mstrApp.msgid){flag=isSapHana?64:0;flag=flag|(me.original?16:0);dataService.createEmmaTables(callback,{tables:tablesJSON,skip:supportParallel,flag:flag,said:mstrApp.said||"",xt:mstrApp.type,sap:isSapHana});}else{dataService.createEmmaInstance({success:function success(res){mstrApp.msgid=res.msgid;dataService.createEmmaTables(callback,{tables:tablesJSON,skip:supportParallel});}});}};if(!isRefreshPartition&&me.tables.length>0&&!isSapHana&&mstrApp.type!==$ENUMAPPTYPE.BigQuerySingleTable){supportParallel=true;CURRENT_EMMA_TABLE_INDEX=0;callback={success:function success(res){$ARR.forEach(me.tables,function(table,idx){table.tid=res.tables[idx].id;});processEmmaTables(me.tables,mstrmojo.func.wrapMethods(finalCallback,{canceled:function(){}}),flag);}};}else{if(isSapHana){CURRENT_SAP_HANA_TABLE_INDEX=0;var getDataCallback={success:function success(res){var columns=[],table=me.tables[CURRENT_SAP_HANA_TABLE_INDEX];$ARR.forEach(res.items,function(column){columns.push(column.dbInfo);});table.clis=columns;table.hanai=res.hanaInfo;CURRENT_SAP_HANA_TABLE_INDEX++;if(CURRENT_SAP_HANA_TABLE_INDEX>=me.tables.length){postProcessing();}else{me.getColumnsForDBTable({data:me.tables[CURRENT_SAP_HANA_TABLE_INDEX]},mstrmojo.hash.copy(getDataCallback,{}));}},failure:function failure(){CURRENT_SAP_HANA_TABLE_INDEX++;}};me.getColumnsForDBTable({data:me.tables[CURRENT_SAP_HANA_TABLE_INDEX]},mstrmojo.hash.copy(getDataCallback,{}));return ;}}postProcessing();};if(me.original){me.tables[0].tid=me.tableID;}createTables(callback);},loadTable:function loadTable(tableID){var me=this,controller=mstrApp.getRootController();me.tableID=tableID;me.submitRequest({success:function success(res){var table=res.datap.srce,dbroleID=table.dbrid,partition,tables=me.tables,dbroleName,dbNamespace=table.ns||"",gbqpid=table.gbqp||"",isSapHana=(table.dbtp===SAPHANA_DB_TYPE),msg,dbrole,isBigQuery=(mstrApp.type===$ENUMAPPTYPE.BigQuerySingleTable);me.original=table;me.usingCookieNamespace=true;if(!isBigQuery){dbrole=me.getDBRole(dbroleID);dbroleName=(dbrole&&dbrole.n)||"";}else{dbroleName=table.gbqp;}partition=me.partition=parsePartitionInfo(table.pti);if(partition.isPartition){$ARR.forEach(partition.tables,function(partitionTable){tables.push({n:partitionTable.name,ns:dbNamespace,dbr:dbroleID,dbrn:dbroleName});});}else{tables.push({n:table.tbn,ns:dbNamespace,dbr:dbroleID,dbrn:dbroleName,gbqpid:gbqpid});}raiseModelRefreshTablesEvent.call(me);if(isBigQuery){controller.selectDBRole(gbqpid);if(me.getProject(gbqpid)===null){msg=mstrmojo.desc(14098,"There is no project ## in ###").replace("##",gbqpid).replace("###",mstrApp.userEmail);mstrmojo.alert(msg);}}else{controller.selectDBRole(dbroleID);if(isSapHana){var targetTable=tables[0];me.getSelectedDBRoleTables({dbRoleID:dbroleID,filterText:""},{success:function success(res){var dbTables=res.items||res.xrc.cas[0].tis;$ARR.forEach(dbTables,function(dbtable){if((dbtable.tbn||dbtable.dbtn)===table.tbn&&dbtable.ns===table.ns){targetTable.extt=dbtable.extt;targetTable.hanai=dbtable.hanai;return false;}});me.getColumnsForDBTable({getFresh:true,data:{n:table.tbn,dbtn:table.tbn,ns:dbNamespace}},{success:function success(res){var columns=[];$ARR.forEach(res.items,function(column){columns.push(column.dbInfo);});targetTable.clis=columns;}});}});}}}},{taskId:"qBuilder.GetReportXDADefinition",showWait:true,tableID:tableID,browsetype:4,previewflag:this.isRefined?4:8});},_set_SelDBRoleID:function(n,value){var model=this,changed=(model.SelDBRoleID!==value);this._super&&this._super(n,value);model.SelDBRoleID=value;if(changed&&value){model.setDBRole&&model.setDBRole(value);}mstrmojo.array.forEach(model.dbrs,function(dbr){if(dbr.data.isPrimary){dbr.data.isPrimary=false;model.raiseEvent({name:$ENUM_DATA_CHANGE_EVENTS.DBROLE_CHANGED,item:dbr});}if(dbr.did===value){dbr.data.isPrimary=true;model.raiseEvent({name:$ENUM_DATA_CHANGE_EVENTS.DBROLE_CHANGED,item:dbr});}});if(changed){model.raiseEvent({name:$ENUM_DATA_CHANGE_EVENTS.DBTABLES_ENABLED,value:model.getAvailableTablesEnabled()});raiseModelRefreshTablesEvent.call(model);}return changed;},submitRequest:function submitRequest(callback,params,fn){mstrApp.getRootController().getDataService()[fn||"submitRequest"](callback,params);},onisDDAChange:function onisDDAChange(evt){var model=this;mstrApp.getRootController().getDDAController().checkDDACheckbox(evt.value);model.raiseEvent({name:$ENUM_DATA_CHANGE_EVENTS.DBTABLES_ENABLED,value:model.getAvailableTablesEnabled()});raiseModelRefreshTablesEvent.call(model);},getHelpTopic:function getHelpTopic(){return this.helpTopic;}});}());