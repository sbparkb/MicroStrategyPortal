(function(){mstrmojo.requiresCls("mstrmojo.vi.models.editors.BaseEditorModel","mstrmojo.ui.editors.controls.ContainerGroup","mstrmojo.vi.viz.EnumDSSDropZones","mstrmojo.array","mstrmojo.color","mstrmojo.vi.viz.MapHelper","mstrmojo.vi.util.ThresholdUtils","mstrmojo.ui.CheckList","mstrmojo.models.FormatModel","mstrmojo.chart.enums.EnumFontStyle","mstrmojo.gmaps.MapEnums");var $EDZ=mstrmojo.vi.viz.EnumDSSDropZones,$ARR=mstrmojo.array,$Clr=mstrmojo.color,$MH=mstrmojo.vi.viz.MapHelper,$THRESHOLD_UTILS=mstrmojo.vi.util.ThresholdUtils,$GMAPS=mstrmojo.gmaps,$EnumMapType=$GMAPS.EnumMapType,$PropertyTypes=$GMAPS.PropertyTypes,$EnumGeographicRole=$GMAPS.EnumGeographicRole,$EnumZoomBehavior=$GMAPS.EnumZoomBehavior,$EnumDataLabel=$GMAPS.EnumDataLabel,$ENUM_PROPERTY_NAMES=mstrmojo.models.FormatModel.ENUM_PROPERTY_NAMES,$ENUM_FONT_STYLE_VALUE=mstrmojo.chart.enums.EnumFontStyle,$EnumDataLabelShowOption=mstrmojo.gmaps.EnumDataLabelShowOption,TARGET_MAPOPTIONS=1,CATEGORIES_DATA_LABELS=2,EDZ_LATTITUDE=$EDZ.Latitude,EDZ_LONGITUDE=$EDZ.Longitude,EDZ_GEO=$EDZ.GeoAttribute;function getPropertyTitle(text){return new mstrmojo.Label({text:text,cssClass:"prop-title"});}function shouldRemoveGeoDropZone(){return false;}function shouldRemoveLatDropZone(newValue){return(newValue===$EnumMapType.Area);}function shouldRemoveLongDropZone(newValue){return(newValue===$EnumMapType.Area);}function shouldRemoveSizeByDropZone(newValue){return(newValue===$EnumMapType.Marker||newValue===$EnumMapType.Area||newValue===$EnumMapType.Density);}function shouldRemoveColorByDropZone(newValue){return(newValue===$EnumMapType.Density);}function shouldAddLatDropZone(newValue){var host=this.getHost(),geoAttribute,latitude;if(newValue===$EnumMapType.Marker||newValue===$EnumMapType.Bubble||newValue===$EnumMapType.Density){geoAttribute=host.getDropZoneItems(EDZ_GEO);if(geoAttribute&&geoAttribute.length>0){latitude=host.getDropZoneItems(EDZ_LATTITUDE);if(!latitude||latitude.length<=0){return true;}}}return false;}function shouldRemoveImageThreshold(newValue){return(newValue===$EnumMapType.Bubble||newValue===$EnumMapType.Area);}function shouldAddLongDropZone(newValue){if(newValue===$EnumMapType.Marker||newValue===$EnumMapType.Bubble||newValue===$EnumMapType.Density){var host=this.getHost(),geoAttribute=host.getDropZoneItems(EDZ_GEO);if(geoAttribute&&geoAttribute.length>0){var longitude=host.getDropZoneItems(EDZ_LONGITUDE);if(!longitude||longitude.length<=0){return true;}}}return false;}function getGeoForm(attribute,fn){return $ARR.filterOne(attribute.fs,function(form){return fn(form.fnm,form.fgr)&&form.obf;});}function getLatitudeForm(attr){return getGeoForm(attr,$MH.isLatitude);}function getLongitudeForm(attr){return getGeoForm(attr,$MH.isLongitude);}function getCallback(propertyName){var id=this.id;return function(newValue){mstrmojo.all[id].onPropertiesChanged(propertyName,newValue.id);};}function addMapStyleControl(styles,selectedIdx,controls){var host=this.getHost(),fieldName="id",cb=function(newValue){this.host.getObservableModel().set($PropertyTypes.mapStyle,newValue[fieldName]);};if(styles&&styles.length){var pulldown=mstrmojo.ui.Pulldown.newPulldown(styles,cb,selectedIdx,{host:host,bindings:{value:function(){var dv=this.host.observableModel.dv;if(!host.isESRIMap){dv=parseInt(dv);dv=isNaN(dv)?0:dv;}this.selectItemByField(fieldName,dv);return this.items[this.selectedIndex].n;}}});controls.push(this.getLabelAndControl(mstrmojo.desc(13583,"Map styles:"),pulldown));}}function needRedrawMarkers(propertyName,newValue,oldValue){var result=false;switch(propertyName){case $PropertyTypes.clusterMode:case $PropertyTypes.shapeFile:case $PropertyTypes.themeType:result=true;break;case $PropertyTypes.markerType:if(this.getActionsWithUpdateProperty().length===0){result=true;}break;default:break;}return result;}function needResizeMap(propertyName,newValue,oldValue){var result=false;switch(propertyName){case $PropertyTypes.redrawType:result=true;break;default:break;}return result;}function getFontFormats(properties){var color,formats={},fontStyleVal=properties[$EnumDataLabel.DATA_LABEL_FONT_STYLE];formats[$ENUM_PROPERTY_NAMES.FONT_WEIGHT]=(fontStyleVal&$ENUM_FONT_STYLE_VALUE.FS_BOLD)>0;formats[$ENUM_PROPERTY_NAMES.FONT_STYLE]=(fontStyleVal&$ENUM_FONT_STYLE_VALUE.FS_ITALIC)>0;formats[$ENUM_PROPERTY_NAMES.UNDERLINE]=(fontStyleVal&$ENUM_FONT_STYLE_VALUE.FS_UNDERLINE)>0;formats[$ENUM_PROPERTY_NAMES.LINE_THROUGH]=(fontStyleVal&$ENUM_FONT_STYLE_VALUE.FS_STRIKETHROUGH)>0;color=properties[$EnumDataLabel.DATA_LABEL_FONT_COLOR];formats[$ENUM_PROPERTY_NAMES.COLOR]=color==="transparent"?color:$Clr.decodeColor(color);formats[$ENUM_PROPERTY_NAMES.FONT_SIZE]=properties[$EnumDataLabel.DATA_LABEL_FONT_SIZE];formats[$ENUM_PROPERTY_NAMES.FONT_FAMILY]=properties[$EnumDataLabel.DATA_LABEL_FONT_FAMILY];return formats;}mstrmojo.vi.models.editors.MapEditorModel=mstrmojo.declare(mstrmojo.vi.models.editors.BaseEditorModel,null,{scriptClass:"mstrmojo.vi.models.MapEditorModel",editingProperty:null,getEditingGridKey:function getEditingGridKey(){var host=this.getHost();if(host){return host.model.data.k;}return null;},getEditingGrid:function getEditingGrid(){var host=this.getHost();if(host){var key=this.getEditingGridKey(),primaryModel=host.getData();if(primaryModel.k===key){return primaryModel;}else{if(primaryModel.sdp&&primaryModel.sdp[key]){return primaryModel.sdp[key];}}}return null;},getShapeAttributeGeoRole:function getShapeAttributeGeoRole(gridData,geoAttrID){var gts,geoRole,rowItem,forms,form,row,index,result=$EnumGeographicRole.EnumGeographicRoleNone;if(!gridData){return result;}gts=gridData.gts;if(!gts||!gts.row){return result;}if(!!geoAttrID){for(row=0;row<gts.row.length;row++){rowItem=gts.row[row];if(rowItem.id===geoAttrID){forms=rowItem.fs;for(index=0;index<forms.length;index++){form=forms[index];geoRole=form.fgr+"";if(geoRole!==$EnumGeographicRole.EnumGeographicRoleNone&&geoRole!==$EnumGeographicRole.EnumGeographicRoleLatitiude&&geoRole!==$EnumGeographicRole.EnumGeographicRoleLongitude){return geoRole;}}}}}return result;},onPropertiesChanged:function onPropertiesChanged(propertyName,newValue){var host=this.getHost(),key=this.getEditingGridKey(),properties=host.getProperties(key),oldValue=properties[propertyName],redrawMarker,resizeMap;this.updateProperties(propertyName,newValue);redrawMarker=needRedrawMarkers.call(this,propertyName,newValue,oldValue);resizeMap=needResizeMap.call(this,propertyName,newValue,oldValue);if(redrawMarker||resizeMap){host.updateAfterPropertiesChange(null,true);if(redrawMarker){host.drawMarkerLayers();}else{if(resizeMap){host.updateMapExtent();}}var updateCallback=host.zonesModel&&host.zonesModel.getUpdateCallback();if(updateCallback){updateCallback.success();}}else{host.updateAfterPropertiesChange();}},updateProperties:function updateProperties(propertyName,newValue){var host=this.getHost(),key=this.getEditingGridKey(),properties=host.getProperties(key);if(properties[propertyName]===undefined||properties[propertyName].toString()!==newValue.toString()){this.editingProperty=propertyName;properties[propertyName]=newValue;}},getActionsWithUpdateProperty:function getActionsWithUpdateProperty(){var host=this.getHost(),dzModel=host.zonesModel,actions=[],key=this.getEditingGridKey(),properties=host.getProperties(key),newValue=!!properties&&!!this.editingProperty?properties[this.editingProperty]:null,data=host.getData(),datasetId=!!data?data.datasetId:null,geoAttribute=null,latitude=null,longitude=null,sizeBy=null,colorBy=null,delItem=null,geoZoneModel,firstItem;if(this.editingProperty===$PropertyTypes.mapType){if(shouldRemoveGeoDropZone.call(this,newValue)){geoAttribute=host.getDropZoneItems(EDZ_GEO);if(geoAttribute&&geoAttribute.length>0){delItem={did:geoAttribute[0].id,t:geoAttribute[0].t};actions.push(dzModel.getRemoveDropZoneUnitAction({id:EDZ_GEO},delItem));}}if(shouldRemoveLatDropZone.call(this,newValue)){latitude=host.getDropZoneItems(EDZ_LATTITUDE);if(latitude&&latitude.length>0){delItem={did:latitude[0].id,t:latitude[0].t};actions.push(dzModel.getRemoveDropZoneUnitAction({id:EDZ_LATTITUDE},delItem));}}if(shouldRemoveLongDropZone.call(this,newValue)){longitude=host.getDropZoneItems(EDZ_LONGITUDE);if(longitude&&longitude.length>0){delItem={did:longitude[0].id,t:longitude[0].t};actions.push(dzModel.getRemoveDropZoneUnitAction({id:EDZ_LONGITUDE},delItem));}}if(shouldRemoveSizeByDropZone.call(this,newValue)){sizeBy=host.getDropZoneItems($EDZ.SizeBy);if(sizeBy&&sizeBy.length>0){delItem={did:sizeBy[0].id,t:sizeBy[0].t};actions.push(dzModel.getRemoveDropZoneUnitAction({id:$EDZ.SizeBy},delItem));}}if(shouldRemoveColorByDropZone.call(this,newValue)){colorBy=host.getDropZoneItems($EDZ.ColorBy);if(colorBy&&colorBy.length>0){delItem={did:colorBy[0].id,t:colorBy[0].t};actions.push(dzModel.getRemoveDropZoneUnitAction({id:$EDZ.ColorBy},delItem));}}var addForm=function(did,fid){actions.push({act:"addForm",unitId:did,attFormId:fid,unitPos:1});};if(shouldAddLatDropZone.call(this,newValue)){geoZoneModel=dzModel.getZoneModelByZoneId(EDZ_GEO);firstItem=!!geoZoneModel?geoZoneModel.items[0]:{};var latForm=getLatitudeForm.call(this,firstItem);if(latForm){addForm(firstItem.did,latForm.fid);actions=actions.concat(dzModel.getAddDropZoneUnitsActions({id:EDZ_LATTITUDE},[{did:latForm.fid,t:21}],0,{datasetId:datasetId}));}}if(shouldAddLongDropZone.call(this,newValue)){geoZoneModel=dzModel.getZoneModelByZoneId(EDZ_GEO);firstItem=!!geoZoneModel?geoZoneModel.items[0]:{};var longForm=getLongitudeForm.call(this,firstItem);if(longForm){addForm(firstItem.did,longForm.fid);actions=actions.concat(dzModel.getAddDropZoneUnitsActions({id:EDZ_LONGITUDE},[{did:longForm.fid,t:21}],0,{datasetId:datasetId}));}}if(shouldRemoveImageThreshold.call(this,newValue)){var colorByZoneModel=dzModel.getZoneModelByZoneId($EDZ.ColorBy),colorByItem=!!colorByZoneModel?colorByZoneModel.items[0]:{},thresholds=data.gsi&&data.gsi.thresholds,existingThresholdsForMetric=thresholds&&colorByItem&&thresholds[colorByItem.did],needRemoveThreshold=false;if(existingThresholdsForMetric){if(existingThresholdsForMetric.length>0&&existingThresholdsForMetric[0].rtp===4){needRemoveThreshold=true;}}if(needRemoveThreshold){$THRESHOLD_UTILS.addThresholds(host.model,host,host.node,colorByItem,actions,null,null,true);}}}return actions.length>0?$ARR.ensureArray(dzModel.getUpdateTemplateAction(actions)):[];},getMapType:function getMapType(){var host=this.getHost(),key=this.getEditingGridKey(),value=host.getProperties(key)[$PropertyTypes.mapType];value=value?value:$EnumMapType.Marker;return value;},getMapTypes:function getMapTypes(){return null;},getMapTypeSelectedIndex:function getMapTypeSelectedIndex(){return 0;},getMapStyle:function getMapStyle(){var host=this.getHost(),key=this.getEditingGridKey();return host.getProperties(key).dv;},getMapStyles:function getMapStyles(){return null;},getMapStyleSelectedIndex:function getMapStyleSelectedIndex(){var value=this.getMapStyle(),styles=this.getMapStyles(),style,count=styles?styles.length:0,i,index=0;if(!!value){for(i=0;i<count;i++){style=styles[i];if(style.id==value){index=i;break;}}}return index;},getMarkerType:function getMarkerType(){var mapType=this.getMapType();if(mapType!==$EnumMapType.Marker&&mapType!==$EnumMapType.Bubble){mapType=$EnumMapType.Marker;}return mapType;},getMarkerTypes:function getMarkerTypes(){return[{n:mstrmojo.desc(11836,"Bubbles"),id:$EnumMapType.Bubble},{n:mstrmojo.desc(11837,"Pins"),id:$EnumMapType.Marker}];},getMarkerTypeSelectedIndex:function getMarkerTypeSelectedIndex(){return this.getMarkerType()===$EnumMapType.Marker?1:0;},getLegendSwitch:function getLegendSwitch(){var host=this.getHost(),key=this.getEditingGridKey(),showLgd=host.getProperties(key)[$PropertyTypes.legendSwitch];return showLgd===undefined||showLgd.toString()==="true";},getMarkerClusteringType:function getMarkerClusteringType(){return null;},getMarkerClusteringTypes:function getMarkerClusteringTypes(){return null;},getMarkerClusteringTypeSelectedIndex:function getMarkerClusteringTypeSelectedIndex(){return 0;},getDensityTheme:function getDensityTheme(){var host=this.getHost(),key=this.getEditingGridKey(),value=parseInt(host.getProperties(key)[$PropertyTypes.themeType],10);return isNaN(value)?1:value;},getDensityThemes:function getDensityThemes(){return[{id:1,cls:"rainbow",title:mstrmojo.desc(9234,"Rainbow")},{id:2,cls:"fire",title:mstrmojo.desc(9235,"Fire")},{id:3,cls:"sunrise",title:mstrmojo.desc(9236,"Sunrise")},{id:4,cls:"desert",title:mstrmojo.desc(9237,"Desert")},{id:5,cls:"brick",title:mstrmojo.desc(9238,"Brick")}];},getDensityThemeSelectedIndex:function getDensityThemeSelectedIndex(){return this.getDensityTheme()-1;},getAreaShape:function getAreaShape(){return null;},getAreaShapes:function getAreaShapes(){return null;},getAreaShapeSelectedIndex:function getAreaShapeSelectedIndex(){return 0;},getMapRedrawType:function getMapRedrawType(){var type=$PropertyTypes.redrawType,host=this.getHost(),key=this.getEditingGridKey(),value=host.getProperties(key)[type],value=value?value:$EnumZoomBehavior.Keep;return value;},getMapRedrawTypes:function getMapRedrawTypes(){return[{id:$EnumZoomBehavior.Keep,n:mstrmojo.desc(13585,"Keep current zoom level")},{id:$EnumZoomBehavior.Automatic,n:mstrmojo.desc(13586,"Dynamically change zoom level")}];},getMapRedrawSelectedIndex:function getMapRedrawSelectedIndex(){var selectedType=this.getMapRedrawType(),selectedIndex=0;if(selectedType===$EnumZoomBehavior.Automatic){selectedIndex=1;}return selectedIndex;},getPartialUpdateCallback:function getPartialUpdateCallback(propertyName){var me=this;return function(newValue){var host=me.getHost();host.setProperty(propertyName,newValue,{suppressData:true});if(propertyName===$PropertyTypes.legendSwitch){host.toggleLegend(newValue);}};},getEditorContents:function getEditorContents(){var host=this.getHost();if(host.gridParams&&(host.scriptClass!=="mstrmojo.esrimap.ESRIMap"||!host.useESRICloud||!!host.mapStyleReady)){return this._super();}else{return null;}},getDelayedEditorContents:function getDelayedEditorContents(propertyEditor,vizUnit){var host=this.getHost();this.propertyEditor=propertyEditor;this.vizUnit=vizUnit;host.addGridParameterDownloadListener(this,this.updateEditorContent);},updateEditorContent:function updateEditorContent(){if(this.vizUnit){var propertyEditor=this.propertyEditor;if(propertyEditor){propertyEditor.onVIUnitSelected(this.vizUnit);}}this.propertyEditor=null;this.vizUnit=null;},getContainerCtrlFlags:function getContainerCtrlFlags(){return mstrmojo.ui.editors.controls.ContainerGroup.CTRL_FLAGS.BORDER;},getInitialTarget:function getInitialTarget(){return TARGET_MAPOPTIONS;},getTargetPulldownItems:function getTargetPulldownItems(dynamicCtrlGroup){var host=this.getHost(),pulldownItems=this._super(dynamicCtrlGroup),fnGetHandler=function(fn){return function(fn){this.replaceChildControls(dynamicCtrlGroup,fn.call(this));}.bind(this,fn);}.bind(this);pulldownItems.unshift({n:mstrmojo.desc(13271,"Map Options"),v:TARGET_MAPOPTIONS,h:fnGetHandler(this.getMapOptionControls)});if(host.showDataLabelOption()){pulldownItems.push({n:mstrmojo.desc(11993,"Data Labels"),v:CATEGORIES_DATA_LABELS,h:fnGetHandler(this.getDataLabelsControls)});}return pulldownItems;},getMapOptionControls:function getMapOptionControls(){var controls=[],propertyTypes=$PropertyTypes,modelData=this.getHost().model.data,mapType=this.getMapType(),fnAddPulldown=function(items,idx,descriptor,callbackType,verticalAlign){if(items&&items.length){var pulldown=mstrmojo.ui.Pulldown.newPulldown(items,getCallback.call(this,callbackType),idx,{isHostedWithin:false});if(verticalAlign){controls.push(this.getEditorGroup([getPropertyTitle.call(this,descriptor),pulldown],{showDivider:true,isNested:true,isContainer:true}));}else{controls.push(this.getLabelAndControl(descriptor,pulldown));}}}.bind(this);addMapStyleControl.call(this,this.getMapStyles(),this.getMapStyleSelectedIndex(),controls);fnAddPulldown(this.getMapTypes(),this.getMapTypeSelectedIndex(),mstrmojo.desc(13582,"Map type:"),propertyTypes.mapType);if(mapType===$EnumMapType.Marker||mapType===$EnumMapType.Bubble){fnAddPulldown(this.getMarkerClusteringTypes(),this.getMarkerClusteringTypeSelectedIndex(),mstrmojo.desc(11841,"Clustering"),propertyTypes.clusterMode);fnAddPulldown(this.getMarkerTypes(),this.getMarkerTypeSelectedIndex(),mstrmojo.desc(13584,"Marker type:"),propertyTypes.markerType);}else{if(mapType===$EnumMapType.Area){fnAddPulldown(this.getAreaShapes(),this.getAreaShapeSelectedIndex(),mstrmojo.desc(11842,"Boundaries"),propertyTypes.shapeFile);}else{if(mapType===$EnumMapType.Density){var densityThemeItems=this.getDensityThemes();if(densityThemeItems&&densityThemeItems.length>0){var densityCallback=getCallback.call(this,propertyTypes.themeType);controls.push(getPropertyTitle.call(this,mstrmojo.desc(11839,"Density map color gradient:")));var densityList=new mstrmojo.ui.CheckList({cssClass:"mem-density-list",orientation:"h",items:densityThemeItems,multiSelect:false});densityList.set("selectedIndex",this.getDensityThemeSelectedIndex());densityList.postselectionChange=function(evt){densityCallback(densityThemeItems[evt.added[0]]);};controls.push(densityList);}}}}fnAddPulldown(this.getMapRedrawTypes(),this.getMapRedrawSelectedIndex(),mstrmojo.desc(13820,"Zoom behavior when filtering:"),propertyTypes.redrawType,true);if(this.getHost().hasColorByOrSizeBy()){controls.push(this.getCheckboxAndLabel(this.getLegendSwitch(),mstrmojo.desc(12001,"Show Legend"),this.getPartialUpdateCallback(propertyTypes.legendSwitch)));}controls.push(this.getEditorGroup([this.getEditorGroup([this.getMoreOptionsEditorLink((modelData&&modelData.gsi&&modelData.gsi.prop)||{})])],{isNested:true,showDivider:true,isContainer:true}));return[this.getEditorGroup([this.getEditorGroup(controls)],{showDivider:true,isNested:true,isContainer:true})];},getCharacterControl:function(disabled){var control,host=this.getHost(),key=this.getEditingGridKey(),properties=host.getProperties(key),props={enabled:!disabled},fontStyleValueMap={};fontStyleValueMap[$ENUM_PROPERTY_NAMES.FONT_WEIGHT]=$ENUM_FONT_STYLE_VALUE.FS_BOLD;fontStyleValueMap[$ENUM_PROPERTY_NAMES.FONT_STYLE]=$ENUM_FONT_STYLE_VALUE.FS_ITALIC;fontStyleValueMap[$ENUM_PROPERTY_NAMES.UNDERLINE]=$ENUM_FONT_STYLE_VALUE.FS_UNDERLINE;fontStyleValueMap[$ENUM_PROPERTY_NAMES.LINE_THROUGH]=$ENUM_FONT_STYLE_VALUE.FS_STRIKETHROUGH;props.onGroupValueChange=function(propName,newValue){var realProp,realVal=newValue;switch(propName){case $ENUM_PROPERTY_NAMES.COLOR:realProp=$EnumDataLabel.DATA_LABEL_FONT_COLOR;realVal=newValue==="transparent"?newValue:$Clr.encodeColor(newValue);break;case $ENUM_PROPERTY_NAMES.FONT_SIZE:realProp=$EnumDataLabel.DATA_LABEL_FONT_SIZE;break;case $ENUM_PROPERTY_NAMES.FONT_FAMILY:realProp=$EnumDataLabel.DATA_LABEL_FONT_FAMILY;break;case $ENUM_PROPERTY_NAMES.FONT_WEIGHT:case $ENUM_PROPERTY_NAMES.FONT_STYLE:case $ENUM_PROPERTY_NAMES.UNDERLINE:case $ENUM_PROPERTY_NAMES.LINE_THROUGH:realProp=$EnumDataLabel.DATA_LABEL_FONT_STYLE;realVal=newValue?(properties[realProp]|fontStyleValueMap[propName]):(properties[realProp]&(~fontStyleValueMap[propName]));break;}host.persistDataLabelFormatting(realProp,realVal);};control=new mstrmojo.ui.editors.controls.CharacterGroup(props);control.setFormatSource(getFontFormats(properties));return control;},getShowOptionControl:function(){var control,dlItemLen,finalValIsNone=false,alwaysDisabled=false,props={multiSelect:true,showIcon:false},host=this.getHost(),key=this.getEditingGridKey(),properties=host.getProperties(key),dataLabelTypeItems=[{n:mstrmojo.desc(2057,"None"),v:$EnumDataLabelShowOption.NONE}],availableItems={txt:{n:mstrmojo.desc(1013,"Text"),v:$EnumDataLabelShowOption.SHOW_TEXT},val:{n:mstrmojo.desc(2175,"Values"),v:$EnumDataLabelShowOption.SHOW_VALUE}};if(host.showDataLabelValue()){dataLabelTypeItems.unshift(availableItems.val);}if(host.showDataLabelText()){dataLabelTypeItems.unshift(availableItems.txt);}dlItemLen=dataLabelTypeItems.length;if(dlItemLen===1){dataLabelTypeItems.splice(0,0,availableItems.txt,availableItems.val);alwaysDisabled=true;}props.items=dataLabelTypeItems;if(alwaysDisabled){props.enabled=false;}props.postselectionChange=function(evt){if(this._sync){return ;}this._sync=true;var i,finalVal,nothingSelected;if(evt.added){if(this.items[evt.added[0]].v===$EnumDataLabelShowOption.NONE){for(i=0;i<dlItemLen-1;i++){if(this.selectedIndices[i]){this.removeSelect(i);}}}else{if(this.selectedIndices[dlItemLen-1]){this.removeSelect(dlItemLen-1);}}}else{if(evt.removed){nothingSelected=true;for(i=0;i<dlItemLen;i++){if(this.selectedIndices[i]){nothingSelected=false;break;}}if(nothingSelected){this.addSelect(dlItemLen-1);}}else{mstr_profile.log("Should never happen");}}finalVal=dataLabelTypeItems.reduce(function(val,item,idx){return this.selectedIndices[idx]?(val|item.v):val;}.bind(this),0);host.persistDataLabelFormatting($EnumDataLabel.DATA_LABEL_SHOW,finalVal);this._sync=false;};control=new mstrmojo.ui.ButtonBar(props);var initShowOptionControl=function(value){var idxs;this._sync=true;if(value===$EnumDataLabelShowOption.NONE){this.singleSelectByField(value,"v");finalValIsNone=true;}else{idxs=(this.items||[]).map(function(item,idx){return(value&item.v)>0?idx:null;}).filter(function(elem){return elem!==null;});if(idxs.length<=0){this.singleSelectByField($EnumDataLabelShowOption.NONE,"v");finalValIsNone=true;}else{this.select(idxs);}}this._sync=false;}.bind(control);initShowOptionControl(properties[$EnumDataLabel.DATA_LABEL_SHOW]);return{control:control,disableCtrls:alwaysDisabled||finalValIsNone};},getShowAllCheckBoxControl:function(disabled){var host=this.getHost(),key=this.getEditingGridKey(),properties=host.getProperties(key),propName=$EnumDataLabel.DATA_LABEL_SHOW_ALL,checkBox=new mstrmojo.ui.Checkbox({checked:!properties[propName],oncheckedChange:function oncheckedChange(evt){host.persistDataLabelFormatting(propName,!evt.value);}}),control=this.getLabelAndControl(mstrmojo.desc(14606,"Hide overlapping labels"),checkBox,"20px","100%",true,{enabled:!disabled}),label=control.getLabel();label.onclick=function(){checkBox.onclick();};return control;},getDataLabelsControls:function(){var showOptionControl=this.getShowOptionControl(),disableCtrls=showOptionControl.disableCtrls;return[this.getEditorGroup([showOptionControl.control,this.getShowAllCheckBoxControl(disableCtrls),this.getCharacterControl(disableCtrls)])];}});}());