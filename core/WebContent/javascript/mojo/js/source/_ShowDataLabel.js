(function(){mstrmojo.requiresCls("mstrmojo.css","mstrmojo.array","mstrmojo.VisChartUtils","mstrmojo.chart.enums.EnumFontStyle","mstrmojo.VisEnum");var $CSS=mstrmojo.css,$ARR=mstrmojo.array,$ENUM_FONT_STYLE_VALUE=mstrmojo.chart.enums.EnumFontStyle,PROPERTIES_TYPE=mstrmojo.VisEnum.IMAGELAYOUT_PROPERTIES,$VIS_ENUMS=mstrmojo.VisEnum,CTRL_TYPE=$VIS_ENUMS.ControlType;var DATA_LABEL_CSS="imageLayout-dataLabel",DATA_LABEL_FONT_CSS="imageLayout-dataLabel-font",DATA_LABEL_TEXT_DIV_CSS="imageLayout-dataLabel-textDiv",DATA_LABEL_VALUE_DIV_CSS="imageLayout-dataLabel-valueDiv",DARK="dark",LIGHT="light";var LABELS_PADDING=10,MAX_WIDTH_RATIO=1/3,MAX_HEIGHT_RATIO=1/3,LONG_WORD="thisisalonglonglonglonglonglonglonglonglonglonglonglonglonglongstring",LONG_STRING="this is a long long long long long long long long long long long long long long string";mstrmojo._ShowDataLabel=mstrmojo.provide("mstrmojo._ShowDataLabel",{_mixinName:"mstrmojo._ShowDataLabel",utils:mstrmojo.VisChartUtils,showText:false,showValue:false,_canvasWidth:0,_canvasHeight:0,_canvasRows:0,_canvasCols:0,cellMatrix:null,rectPool:null,centers:null,init:function(props){this.centers={};this.cellMatrix=[];this.rectPool={};this.shownDataLabels=[];if(this._super){this._super(props);}},removeDataLabels:function(){this.centers={};this.cellMatrix=[];this.rectPool={};var rootDom=this.domNode;$ARR.forEach(this.shownDataLabels,function(labelDiv){if(rootDom.contains(labelDiv)){rootDom.removeChild(labelDiv);}});this.shownDataLabels=[];},showDataLabel:function(){this.removeDataLabels();var propertyManager=this.totalWidget.propertyManager,dataLabelSwitch=propertyManager.getFormatPropertyValue(PROPERTIES_TYPE.DATA_LABEL_SWITCH),DATA_LABEL=propertyManager.CONSTANTS.DATA_LABEL,isOn=function(currSwitch){return(dataLabelSwitch&currSwitch)!==DATA_LABEL.NONE;};this.showText=isOn(DATA_LABEL.SHOW_TEXT);this.showValue=isOn(DATA_LABEL.SHOW_VALUE);if(this.showText||this.showValue){var me=this,nodeName,lineIndex,startLine=this.startLine,endLine=this.endLine,coords=me.coords,noColorByColor=propertyManager.getFormatPropertyValue(PROPERTIES_TYPE.BLANK_MAP_COLOR),areaBubbleAttributeIndex=me.areaBubbleAttrIndex,text,values,nodeColor,dataLabelDiv,position;this.initParas();for(lineIndex=startLine;lineIndex<=endLine;lineIndex++){nodeName=this.getNodeName(lineIndex);if(me.inThisWidget(lineIndex)&&coords.hasOwnProperty(nodeName)){if(this.showText){text=nodeName;}else{text="";}if(this.showValue){values=this.getCellValues(lineIndex);}else{values="";}nodeColor=this.getBgColor(lineIndex,noColorByColor);dataLabelDiv=this.createDataLabelDiv(text,values,this.getWidth()*MAX_WIDTH_RATIO,this.getHeight*MAX_HEIGHT_RATIO,nodeColor);position=this.centers[nodeName][0];this.positionDataLabel(dataLabelDiv,position,lineIndex);}}}},initParas:function(){this.centers=this.polygonCenters||this.coords||null;this._canvasWidth=parseInt(this.highlightCanvas.width,10);this._canvasHeight=parseInt(this.highlightCanvas.height,10);this._canvasRows=Math.ceil(this._canvasHeight/LABELS_PADDING);this._canvasCols=Math.ceil(this._canvasWidth/LABELS_PADDING);var row,col,rowArray,cellArray;for(row=0;row<this._canvasRows;row++){rowArray=[];for(col=0;col<this._canvasCols;col++){cellArray=[];rowArray.push(cellArray);}this.cellMatrix.push(rowArray);}},createDataLabelDiv:function(text,values,maxWidth,maxHeight,nodeColor){var me=this,div=document.createElement("div"),textDiv,valuesDiv,theme,textCanvas;function addFontStyle(div){var style=div.style,propertyManager=me.totalWidget.propertyManager,fontStyles=propertyManager.convertFontStyle(propertyManager.getFormatPropertyValue(PROPERTIES_TYPE.DATA_LABEL_FONT_STYLE));style.fontSize=propertyManager.getFormatPropertyValue(PROPERTIES_TYPE.DATA_LABEL_FONT_SIZE)+"pt";style.fontFamily=propertyManager.getFormatPropertyValue(PROPERTIES_TYPE.DATA_LABEL_FONT_FAMILY);style.color=propertyManager.getFormatPropertyValue(PROPERTIES_TYPE.DATA_LABEL_FONT_COLOR);style.fontStyle=fontStyles.fontStyle;style.fontWeight=fontStyles.fontWeight;style.textDecoration=fontStyles.textDecoration;}function createTextDiv(text){var _textDiv=document.createElement("div");_textDiv.innerHTML=text;_textDiv.setAttribute("type",CTRL_TYPE.GM_DATA_LABEL);$CSS.addClass(_textDiv,[DATA_LABEL_TEXT_DIV_CSS]);addFontStyle(_textDiv);return _textDiv;}function createValuesDiv(values){var _valuesDiv=document.createElement("div");_valuesDiv.innerHTML=values;_valuesDiv.setAttribute("type",CTRL_TYPE.GM_DATA_LABEL);$CSS.addClass(_valuesDiv,[DATA_LABEL_VALUE_DIV_CSS]);addFontStyle(_valuesDiv);_valuesDiv.style.maxWidth=maxWidth+"px";return _valuesDiv;}function measureTextWidth(textDiv,textCanvas){var computedStyle=$CSS.getComputedStyle(textDiv),fontStyle=computedStyle.fontStyle+" "+computedStyle.fontWeight+" "+computedStyle.fontSize+"/"+computedStyle.fontVariant+" "+computedStyle.fontFamily,ctx=textCanvas.getContext("2d"),metric;ctx.font=fontStyle;metric=ctx.measureText(textDiv.innerText||textDiv.textContent||"");return metric.width;}function adjustTextDiv(textDiv,textCanvas,maxWidth){var textWidth=measureTextWidth(textDiv,textCanvas);if(textWidth>maxWidth){textDiv.style.width=maxWidth+"px";me.utils.truncateTextToLineWithWordWrap2(textDiv,textCanvas,2);}}function adjustDataLabelDiv(div){if(div){div.setAttribute("isDataLabel","true");$CSS.addClass(div,[DATA_LABEL_CSS]);theme=me.totalWidget.getThemeMode(nodeColor);if(theme===me.CONSTANTS.THEME.DARK){$CSS.addClass(div,[DARK]);}else{if(theme===me.CONSTANTS.THEME.LIGHT){$CSS.addClass(div,[LIGHT]);}}}}if(text!==""){textDiv=createTextDiv(text);textCanvas=this.totalWidget.imageLayoutTable.textCanvas;adjustTextDiv(textDiv,textCanvas,maxWidth);div.appendChild(textDiv);}if(values!==""){valuesDiv=createValuesDiv(values);div.appendChild(valuesDiv);}adjustDataLabelDiv(div);return div;},positionDataLabel:function(dataLabelDiv,position,lineIndex){var rootDom=this.domNode,width,height,left,top,dataLabelStyle,leftOffset=this.leftOffset,topOffset=this.topOffset,rectPool=this.rectPool;rootDom.appendChild(dataLabelDiv);width=dataLabelDiv.offsetWidth;height=dataLabelDiv.offsetHeight;left=position[0]-width/2+leftOffset;top=position[1]-height/2+topOffset;if(this.canBeShown({left:left,top:top,width:width,height:height},lineIndex)){this.shownDataLabels.push(dataLabelDiv);dataLabelStyle=dataLabelDiv.style;dataLabelStyle.left=left+"px";dataLabelStyle.top=top+"px";}else{rootDom.removeChild(dataLabelDiv);}},canBeShown:function(rect,lineIndex){var l=rect.left,t=rect.top,w=rect.width,h=rect.height,viewW=this.getWidth(),viewH=this.getHeight(),cellMatrix=this.cellMatrix,rectPool=this.rectPool,rowCount=this._canvasRows,colCount=this._canvasCols,lp=LABELS_PADDING,pl=l-lp,pt=t-lp,pw=w+lp*2,ph=h+lp*2,cellSpan,row,col,cell,li,i;function rectIsInView(left,top,width,height,viewWidth,viewHeight){return left>=0&&top>=0&&(left+width<=viewWidth)&&(top+height<=viewHeight);}function getCellSpan(left,top,width,height,cellSize){cellSpan={};cellSpan.rowStart=Math.floor(top/cellSize);cellSpan.colStart=Math.floor(left/cellSize);cellSpan.rowEnd=Math.min(Math.floor((top+height)/cellSize),rowCount-1);cellSpan.colEnd=Math.min(Math.floor((left+width)/cellSize),colCount-1);return cellSpan;}function checkRectsIntersection(rect1,rect2){function pointInRect(point,rect){var x=point.x,y=point.y,left=rect.left,right=left+rect.width,top=rect.top,bottom=top+rect.height;return(x>left&&x<right)&&(y>top&&y<bottom);}var left1=rect1.left,right1=left1+rect1.width,top1=rect1.top,bottom1=top1+rect1.height,point11={x:left1,y:top1},point12={x:right1,y:top1},point13={x:left1,y:bottom1},point14={x:right1,y:bottom1},left2=rect2.left,right2=left2+rect2.width,top2=rect2.top,bottom2=top2+rect2.height,point21={x:left2,y:top2},point22={x:right2,y:top2},point23={x:left2,y:bottom2},point24={x:right2,y:bottom2};return pointInRect(point11,rect2)||pointInRect(point12,rect2)||pointInRect(point13,rect2)||pointInRect(point14,rect2)||pointInRect(point21,rect1)||pointInRect(point22,rect1)||pointInRect(point23,rect1)||pointInRect(point24,rect1);}if(!rectIsInView(pl,pt,pw,ph,viewW,viewH)){return false;}cellSpan=getCellSpan(pl,pt,pw,ph,lp);for(row=cellSpan.rowStart;row<=cellSpan.rowEnd;row++){for(col=cellSpan.colStart;col<=cellSpan.colEnd;col++){cell=cellMatrix[row][col];for(i=0;i<cell.length;i++){li=cell[i];if(checkRectsIntersection({left:pl,top:pt,width:pw,height:ph},rectPool[li])){return false;}}}}rectPool[lineIndex]=rect;for(row=cellSpan.rowStart;row<=cellSpan.rowEnd;row++){for(col=cellSpan.colStart;col<=cellSpan.colEnd;col++){cell=cellMatrix[row][col];cell.push(lineIndex);}}return true;}});}());