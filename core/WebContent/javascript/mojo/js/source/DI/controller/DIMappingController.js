(function(){mstrmojo.requiresCls("mstrmojo.Obj","mstrmojo.DI.DIConstants","mstrmojo.DI.DIPartitionGroupDialog","mstrmojo.DI.DIInlineEditBox");mstrmojo.requiresDescs(218,219,517,518,221,8149,9912,11164,12532,12818,12819,12820,12821,12822,12823,12824,12825,12826,12827,12828,12829,12830,12831,12832,12833,12834,12835,12892,13266,13301,13331,13332,13333,13334,13335,13336,13337,13338,14196,14197);var $ARR=mstrmojo.array,$STR=mstrmojo.string,constants=mstrmojo.DI.DIConstants,actions=constants.actions,METRIC_TYPE=4;function getItemUniqueName(name,mp,tp){var nhash={},nn=name;var i,len;for(i=0,len=mp.length;i<len;i++){if(mp[i].tp===tp){nhash[mp[i].alias]=1;}}i=0;while(nhash[nn]){nn=name+" ("+(++i)+")";}return nn;}function syncSubColumns(mergeSubColumns,subColumns){var i,j,subColumn,mergeSubColumn;for(i=0;i<subColumns.length;i++){subColumn=subColumns[i];for(j=0;j<mergeSubColumns.length;j++){mergeSubColumn=mergeSubColumns[j];if(mergeSubColumn.fmid===subColumn.fmid){subColumn.georole=mergeSubColumn.georole;subColumn.der=mergeSubColumn.der;}}}}function isContainFormCategory(form,subColumns){var i,subColumn;for(i=0;i<subColumns.length;i++){subColumn=subColumns[i];if(subColumn.fmn===form){return subColumn;}}return null;}function matchGeoTimeRole(property,mappings,col){var changed=false;$ARR.forEach(mappings,function(map){if(map.fmid===col.fmid&&map[property]!==col[property]){if(map[property]&&map[property]!==0){col[property]=map[property];changed=true;}else{if(col[property]&&col[property]!==0){map[property]=col[property];changed=true;}}}});return changed;}function matchDA(mappings,col){var changed=false;$ARR.forEach(mappings,function(map){if(map.fmid===col.fmid&&map.der!==col.der){map.der=col.der|map.der;col.der=col.der|map.der;changed=true;}});return changed;}function matchGeoRoles(tgtMap,srcMap){var changed=false;if(tgtMap.isMultiForm&&srcMap.isMultiForm){$ARR.forEach(tgtMap.subColumns,function(subCol){changed=changed||matchGeoTimeRole("georole",srcMap.subColumns,subCol);});}else{if(tgtMap.isMultiForm&&!srcMap.isMultiForm){changed=matchGeoTimeRole("georole",tgtMap.subColumns,srcMap);}else{if(!tgtMap.isMultiForm&&srcMap.isMultiForm){changed=matchGeoTimeRole("georole",srcMap.subColumns,tgtMap);}else{if(tgtMap.georole!==srcMap.georole){if(tgtMap.georole&&tgtMap.georole!==0){srcMap.georole=tgtMap.georole;changed=true;}}}}}return changed;}function matchDriveAttribute(tgtMap,srcMap){var changed=false;if(tgtMap.isMultiForm&&srcMap.isMultiForm){$ARR.forEach(tgtMap.subColumns,function(subCol){changed=changed||matchDA(srcMap.subColumns,subCol);});}else{if(tgtMap.isMultiForm&&!srcMap.isMultiForm){changed=matchDA(tgtMap.subColumns,srcMap);}else{if(!tgtMap.isMultiForm&&srcMap.isMultiForm){changed=matchDA(srcMap.subColumns,tgtMap);}else{if(tgtMap.der!==srcMap.der){srcMap.der=tgtMap.der|srcMap.der;tgtMap.der=tgtMap.der|srcMap.der;changed=true;}}}}return changed;}function matchTimeRoles(tgtMap,srcMap){var changed=false;if(tgtMap.isMultiForm&&srcMap.isMultiForm){$ARR.forEach(tgtMap.subColumns,function(subCol){changed=changed||matchGeoTimeRole("timerole",srcMap.subColumns,subCol);});}else{if(tgtMap.isMultiForm&&!srcMap.isMultiForm){changed=matchGeoTimeRole("timerole",tgtMap.subColumns,srcMap);}else{if(!tgtMap.isMultiForm&&srcMap.isMultiForm){changed=matchGeoTimeRole("timerole",srcMap.subColumns,tgtMap);}else{if(tgtMap.timerole!==srcMap.timerole){if(tgtMap.timerole&&tgtMap.timerole!==0){srcMap.timerole=tgtMap.timerole;changed=true;}else{if(srcMap.timerole&&srcMap.timerole!==0){tgtMap.timerole=srcMap.timerole;changed=true;}}}}}}return changed;}function markGeoRole(targetCol,sourceData){targetCol.tp=12;targetCol.selected=true;targetCol.georole=sourceData.georole;targetCol.der=sourceData.der;targetCol.shapeKey=sourceData.shapeKey;}function markTimeRole(targetCol,sourceData){targetCol.tp=12;targetCol.selected=true;targetCol.timerole=sourceData.timerole;}function rollbackMappingChange(srcMaps){var controller=this;var importSources=controller.model.importSources;$ARR.forEach(srcMaps,function(srcMap){var importSource=importSources[srcMap.tableId];var currentIndex=importSource.currentIndex;var originalMapping=importSource.originalMappings[currentIndex];var mapping=importSource.mappings[currentIndex];$ARR.forEach(originalMapping,function(column,index){if(column.id===srcMap.id){mapping[index]=mstrmojo.hash.clone(column);return false;}});});}function compareGeoTimeRole(property,mappings,col){var result=false;$ARR.forEach(mappings,function(map){if(map.fmid===col.fmid){if(map[property]!==0&&col[property]!==0&&map[property]!==col[property]){result=true;return false;}}});return result;}function validate(tgtMap,srcMaps,alias){var controller=mstrApp.getRootController();if(tgtMap.ipa){controller.displayError(mstrmojo.desc(14196,"Please unmap project attribute before trying to map it to other attributes."));return ;}var hasProjectAttribute=false;$ARR.forEach(srcMaps,function(srcMap){if(srcMap.ipa){hasProjectAttribute=true;return false;}});if(hasProjectAttribute){controller.displayError(mstrmojo.desc(14196,"Please unmap project attribute before trying to map it to other attributes."));return ;}var geoValidateCallback={success:function(res){if(res&&res.msgid){controller.dataService.set("messageID",res.msgid);}sendLinkChangeMapping(tgtMap,srcMaps,alias,null,16);},failure:function(){rollbackMappingChange.call(controller,srcMaps);controller.displayError(mstrmojo.desc(13334,"Error to map two attributes"));}};var callback={success:function(){var changed=false;var cannotLinking=false;$ARR.forEach(srcMaps,function(srcMap){if(tgtMap.georole&&srcMap.georole&&tgtMap.georole!==0&&srcMap.georole!==0&&tgtMap.georole!==srcMap.georole){if(tgtMap.isMultiForm&&srcMap.isMultiForm){$ARR.forEach(tgtMap.subColumns,function(subCol){if(compareGeoTimeRole("georole",srcMap.subColumns,subCol)){cannotLinking=true;return false;}});}else{if(tgtMap.isMultiForm&&!srcMap.isMultiForm){if(compareGeoTimeRole("georole",tgtMap.subColumns,srcMap)){cannotLinking=true;return false;}}else{if(!tgtMap.isMultiForm&&srcMap.isMultiForm){if(compareGeoTimeRole("georole",srcMap.subColumns,tgtMap)){cannotLinking=true;return false;}}else{cannotLinking=true;}}}if(cannotLinking){controller.displayError(mstrmojo.desc(13332,"Cannot map two attribute which has different geo role"));rollbackMappingChange.call(controller,srcMaps);return false;}}if(tgtMap.timerole&&srcMap.timerole&&tgtMap.timerole!==0&&srcMap.timerole!==0&&tgtMap.timerole!==srcMap.timerole){if(tgtMap.isMultiForm&&srcMap.isMultiForm){$ARR.forEach(tgtMap.subColumns,function(subCol){if(compareGeoTimeRole("timerole",srcMap.subColumns,subCol)){cannotLinking=true;return false;}});}else{if(tgtMap.isMultiForm&&!srcMap.isMultiForm){if(compareGeoTimeRole("timerole",tgtMap.subColumns,srcMap)){cannotLinking=true;return false;}}else{if(!tgtMap.isMultiForm&&srcMap.isMultiForm){if(compareGeoTimeRole("timerole",srcMap.subColumns,tgtMap)){cannotLinking=true;return false;}}else{cannotLinking=true;}}}if(cannotLinking){this.displayError(mstrmojo.desc(13333,"Cannot map two attribute which has different time role"));rollbackMappingChange.call(controller,srcMaps);return false;}}changed=matchGeoRoles.call(controller,tgtMap,srcMap)||changed;changed=matchDriveAttribute.call(controller,tgtMap,srcMap)||changed;changed=matchTimeRoles.call(controller,tgtMap,srcMap)||changed;if(changed){controller.changeEMMAMappings(geoValidateCallback);}else{geoValidateCallback.success();return false;}});},failure:function(res){var errorMsg;var matches=/\(.*\)/g.exec(res.message);if(matches&&matches.length>0){errorMsg=matches[0].substr(1,matches[0].length-2);}var onOK=function(){var flags=constants.requestFlag.mapping|constants.requestFlag.sourceInfo|constants.requestFlag.relationship;controller.getImportedDataEMMA(actions.none,flags);};controller.displayError(errorMsg,false,null,onOK);rollbackMappingChange.call(controller,srcMaps);}};sendLinkChangeMapping(tgtMap,srcMaps,alias,callback,1);}function link(tgtCol,srcCol,alias){var controller=mstrApp.getRootController(),model=controller.getModel(),tgtMap,srcMaps;if(!tgtCol||!srcCol||!tgtCol.tableId||!srcCol.tableId){return ;}tgtMap=model.getImportSource(tgtCol.tableId).findMappingItem(tgtCol);srcMaps=model.findMappingItem(srcCol);validate(tgtMap,srcMaps,alias);}function sendLinkChangeMapping(tgtMap,srcMaps,alias,callback,fg){var controller=mstrApp.getRootController();$ARR.forEach(srcMaps,function(srcMap){srcMap.alias=alias;srcMap.oid=tgtMap.id;srcMap.linkObjID=tgtMap.id;});controller.changeEMMAMappings(callback,fg);}function unLink(col,alias,silent){var model=this.model;var maps=model.findMappingItem(col);var i;for(i=0;i<maps.length;i++){if(maps[i].tableId===col.tableId){maps[i].alias=alias;maps[i].linkObjID="";if(maps[i].tp===12){maps[i].formID="";maps[i].oid="";}maps[i].lv=0;}}if(!silent){this.changeEMMAMappings();}}function formLinkedAttribute(text,importSources){var k,i,currentSource,maps;for(k in importSources){currentSource=importSources[k];if(currentSource.currentTransformations&&currentSource.currentTransformations.xtab&&currentSource.currentTransformations.xtab.isCrosstab){maps=currentSource.transformedMapping;}else{maps=currentSource.currentMapping;}for(i=0;i<maps.length;i++){if(maps[i].alias===text){return maps[i];}}}return null;}function rename(maps,text){var j;for(j=0;j<maps.length;j++){maps[j].alias=text;if(this.linkObjID){maps[j].linkObjID=this.linkObjID;this.linkObjID=null;}if(maps.length>1){maps[j].lv=1;}}mstrApp.getRootController().changeEMMAMappings();}mstrmojo.DI.controller.DIMappingController=mstrmojo.declare(mstrmojo.Obj,null,{scriptClass:"mstrmojo.DI.controller.DIMappingController",changeDataType:function changeDataType(item,dtp,ctp){if(!item||!item.data||isNaN(item.data[0].tp)){return ;}var rootController=mstrApp.getRootController();var col=item.data[0];var m=rootController.model;var i,j;var cols;var subColumns;cols=m.findMappingItem(col);for(i=0;i<cols.length;i++){if(cols[i].isMultiForm){subColumns=cols[i].subColumns;for(j=0;j<subColumns.length;j++){if(subColumns[j].afid===col.afid){subColumns[j].dtp=dtp;if(typeof ctp==="number"&&!isNaN(ctp)){subColumns[j].ctp=ctp;}subColumns[j].selected=true;break;}}}else{cols[i].dtp=dtp;if(typeof ctp==="number"&&!isNaN(ctp)){cols[i].ctp=ctp;}cols[i].selected=true;}}rootController.changeEMMAMappings();},linkAttributes:function linkAttributes(targetItem,sourceItem){if(!targetItem||!sourceItem){return ;}var data=targetItem.data[0],srcData,srcTable,tgtTable,targetWidget=targetItem.widget,position=mstrmojo.dom.position(targetWidget.domNode),top=mstrmojo.dom.position(targetItem.node).y-position.y,controller=mstrApp.getRootController(),offside=0;if(top>=22*3){if(targetWidget.containerNode.scrollTop<targetWidget.containerNode.scrollHeigh-targetWidget.containerNode.clientHeight){targetWidget.containerNode.scrollTop+=22;}else{offside=-44;}}top=mstrmojo.dom.position(targetItem.node).y-position.y-5+offside;var inlineTextRef={scriptClass:"mstrmojo.Popup",cssClass:"mstrmojo-di-linkPopup",locksHover:true,slot:"domNode",children:[{scriptClass:"mstrmojo.Button",text:mstrmojo.desc(13301,"Map?"),cssClass:"mstrmojo-di-link-button",onclick:function(evt){mstrmojo.dom.stopPropogation(evt.hWin,evt.e);link(data,sourceItem.data[0],data.alias);this.set("visible",false);}}],onOpen:function(){var textbox=this.txt,config=this.txtConfig;mstrmojo.hash.forEach(config,function(value,prop){textbox.set(prop,value);});}};srcData=sourceItem.data[0];if(data.id===srcData.id){controller.displayError(mstrmojo.desc(13335,"#### and @@@@ are already mapped.").replace("####",data.alias).replace("@@@@",srcData.alias));return ;}srcTable=controller.getModel().getImportSource(srcData.tableId);tgtTable=controller.getModel().getImportSource(data.tableId);if(tgtTable.findMappingItem(srcData)){controller.displayError(mstrmojo.desc(13336,"#### is already mapped to another column in table @@@@.").replace("####",srcData.alias).replace("@@@@",tgtTable.sourceInfo.name));return ;}if(srcTable.findMappingItem(data)){controller.displayError(mstrmojo.desc(13336,"#### is already mapped to another column in table @@@@.").replace("####",data.alias).replace("@@@@",srcTable.sourceInfo.name));return ;}window.setTimeout(function(){targetWidget.openPopup(inlineTextRef,{left:"9px",top:top+"px"});},100);},renameSourceTable:function renameSourceTable(tableID,tableName){var controller=mstrApp.getRootController();var model=controller.model;var sources=model.importSources;var curSource=model.getImportSource(tableID);if(!curSource){return ;}if(curSource.sourceInfo&&curSource.sourceInfo.name===tableName){return ;}if(!tableName||tableName.length<=0){controller.displayError(mstrmojo.desc(12824,"Cannot rename table alias with empty string."));model.raiseEvent({name:"MappingsFetched"});return ;}if(tableName.length>=250){controller.displayError(mstrmojo.desc(12825,"Cannot rename table alias with a too long string."));model.raiseEvent({name:"MappingsFetched"});return ;}if(constants.invalidObjectNameCharsRegex.test(tableName)){controller.displayError(mstrmojo.desc(12826,"Cannot rename table alis with string contains the following characters: ####.").replace("####",constants.invalidObjectNameChars));model.raiseEvent({name:"MappingsFetched"});return ;}for(var k in sources){if(sources[k].tableID!==tableID&&sources[k].sourceInfo&&sources[k].sourceInfo.name===tableName){controller.displayError(mstrmojo.desc(14197,"Cannot rename table alias with a used name."));return ;}}var cb={success:function(){var flags=constants.requestFlag.mapping|constants.requestFlag.sourceInfo|constants.requestFlag.relationship;controller.getImportedDataEMMA(actions.none,flags);},failure:function(res){var errCode=parseInt(res.code,10);var errMsg=mstrmojo.desc(12827,"Cannot rename table alias.");switch(errCode){case constants.backendError.invalidObjectName:errMsg=mstrmojo.desc(12828,"Cannot rename table alias with invalid characters.");break;case constants.backendError.stringTooLong:errMsg=mstrmojo.desc(12825,"Cannot rename table alias with a too long string.");break;}mstrApp.getRootController().displayError(errMsg,false,res.message);model.raiseEvent({name:"MappingsFetched"});}};var params={did:tableID,xml:"",n:tableName};controller.dataService.editEMMASourceTable(cb,params);},renameTableItem:function renameTableItem(widget,data){var controller=mstrApp.getRootController(),model=controller.model;var text=mstrmojo.string.trim(widget.text);var i=0,j,found=false;var maps,source,msg;if(text===data.alias){return false;}if(!text||text.length<=0){controller.displayError(mstrmojo.desc(12829,"Cannot rename column with empty string."));model.raiseEvent({name:"MappingsFetched"});return false;}if(text.length>=250){controller.displayError(mstrmojo.desc(12830,"Cannot rename column with a too long string."));model.raiseEvent({name:"MappingsFetched"});return false;}if(constants.invalidObjectNameCharsRegex.test(text)){controller.displayError(mstrmojo.desc(12831,"Cannot rename column with string contains the following characters: ####").replace("####",constants.invalidObjectNameChars));model.raiseEvent({name:"MappingsFetched"});return false;}var sources=model.findMappingSource(data);if(sources.length===0){return false;}for(j=0;j<sources.length;j++){source=sources[j];if(data.tp===METRIC_TYPE&&!data.linkedTbs&&data.tableId!==source.tableID){continue;}if(source.currentTransformations&&source.currentTransformations.xtab&&source.currentTransformations.xtab.isCrosstab){maps=source.transformedMapping;}else{maps=source.currentMapping;}for(i=0;i<maps.length;i++){if(text===maps[i].alias&&data.tp===maps[i].tp){found=true;break;}}}if(found){msg=mstrmojo.desc(12532,"The name ## has been used by another column. Please give a new name.");controller.displayError(msg.replace("##",text));model.raiseEvent({name:"MappingsFetched"});return false;}var linkedAttribute=formLinkedAttribute(text,model.importSources);if(linkedAttribute&&linkedAttribute.tp!==METRIC_TYPE&&data.tp!==METRIC_TYPE){msg=mstrmojo.desc(13337,"#### is already being used by other attributes. Would you like to map to those attributes?").replace("####",text);mstrmojo.confirm(msg,{confirmBtn:{t:mstrmojo.desc(13301,"Map?"),fn:function(){maps=model.findMappingItem(data);link(linkedAttribute,maps[0],text);return true;}},cancelBtn:{t:mstrmojo.desc(221,"Cancel")}});}else{if(data.tp===4&&!data.linkedTbs){maps=model.findMappingItem(data,data.tableId);}else{maps=model.findMappingItem(data);}rename(maps,text);return true;}},openRenameTextBox:function openRenameTextBox(menuType,slot,targetItem,sourceItem){var data=targetItem.data[0],title=data.alias||data.n,controller=this;var slotNode=slot;var parentNode=slot.parentNode;var lbl=mstrmojo.insert({scriptClass:"mstrmojo.DI.DIInlineEditBox",text:title||"",cssDisplay:"inline-block",placeholder:slot,onSave:function onSave(){var result;if(menuType===constants.contextMenuType.ITEM_MENU){result=controller.renameTableItem(this,data);if(!result){parentNode.replaceChild(slotNode,this.domNode);}}else{if(menuType===constants.contextMenuType.TABLE_MENU){parentNode.replaceChild(slotNode,this.domNode);controller.renameSourceTable(data.id,this.text);}else{if(menuType===constants.contextMenuType.LINK_MENU){link(data,sourceItem.data[0],mstrmojo.string.decodeHtmlString(this.text));}}}}});if(parent&&parent.draggable){lbl.parent=parent;}lbl.render();lbl.set("editMode",true);},openUnLinkDialog:function openUnLinkDialog(item){if(!item||!item.data||isNaN(item.data[0].tp)||!item.data[0].selected){return ;}var data=item.data[0];var curAlias=data.alias;var type=data.tp===12?mstrmojo.desc(518,"attribute"):mstrmojo.desc(517,"metric");mstrApp.getRootController().showDialog(constants.dialogType.previewRenameDialog,{curName:data.alias,text:mstrmojo.desc(13338,"#### is currently being used by other @@@@. Please rename to unmap this @@@@").replace("####",curAlias).replace(/@@@@/g,type),onOk:function(v){var rootController=mstrApp.getRootController();var alias=mstrmojo.string.encodeXMLAttribute(v);if(alias===data.alias){rootController.displayError(mstrmojo.desc(12834,"Please input a different name."));return false;}if(alias.length<=0){rootController.displayError(mstrmojo.desc(12829,"Cannot rename column with empty string."));return false;}if(alias.length>=250){rootController.displayError(mstrmojo.desc(12830,"Cannot rename column with a too long string."));return false;}if(constants.invalidObjectNameCharsRegex.test(alias)){rootController.displayError(mstrmojo.desc(12835,"Cannot rename column with string contains the following characters: ")+constants.invalidObjectNameChars);return false;}unLink.call(rootController,data,alias);return true;}});},unlinkAll:function unlinkAll(item,tableID){var rootCtl=mstrApp.getRootController(),model=rootCtl.getModel(),cols=item.data,changed=false,source;if(!tableID){tableID=cols[0].tableId;}source=model.getImportSource(tableID);$ARR.forEach(cols,function(col){var alias;if(col.selected&&col.tp===12&&col.isLinked){alias=col.alias+" - "+source.sourceInfo.name;alias=model.getUniqueAlias(12,alias);unLink.call(rootCtl,col,$STR.encodeXMLAttribute(alias),true);changed=true;}});if(changed){rootCtl.changeEMMAMappings();}},unlinkAllCubeLevel:function unlinkAllCubeLevel(item){var rootCtl=mstrApp.getRootController(),model=rootCtl.getModel(),cols=item.data,changed=false;$ARR.forEach(cols,function(col){var maps;if(col.selected&&col.tp===12&&col.isLinked){maps=model.findMappingItem(col);$ARR.forEach(maps,function(map){var source=model.getImportSource(map.tableId),alias;alias=map.alias+" - "+source.sourceInfo.name;alias=model.getUniqueAlias(12,alias);unLink.call(rootCtl,map,$STR.encodeXMLAttribute(alias),true);changed=true;});}});if(changed){rootCtl.changeEMMAMappings();}},unmap:function unmap(item){var col=item.data[0]||item.data;if(!item||!item.data||isNaN(col.tp)||(col.tp===4&&col.selected)){return ;}var i,cols;var rootController=mstrApp.getRootController();var m=rootController.model;cols=m.findMappingItem(col);var originalName,changeMapping=true;var okFn=function OK(){for(i=0;i<cols.length;i++){mstrmojo.array.forEach(cols[i].subColumns,function(map){map.oid="";map.fmid="";originalName=map.originalAlias;map.alias=originalName;});}rootController.changeEMMAMappings();};for(i=0;i<cols.length;i++){if(cols[i].isMultiForm&&changeMapping){mstrmojo.confirm(mstrmojo.desc(11164,"All other forms of the attribute will be unmapped. Do you want to continue?"),{confirmBtn:{fn:okFn}});changeMapping=false;}else{cols[i].oid="";cols[i].fmid="";originalName=cols[i].originalAlias;cols[i].alias=originalName;}}if(changeMapping){rootController.changeEMMAMappings();}},isSingleFormAttribute:function isSingleFormAttribute(attribute){return !(attribute.isMultiForm);},toProjectAttribute:function toProjectAttribute(item,tableId){var col=item.data[0]||item.data;if(!item||!item.data||isNaN(col.tp)||(col.tp===4&&col.selected)){return ;}var maps=[];var i,j,k,map,allForms=[],source;var sources;var model=mstrApp.getRootController().model;if(item.data.length>1){this.toProjectAttribute2(item,tableId);return ;}sources=model.findMappingSource(col);for(i=0;i<sources.length;i++){source=sources[i];if(source.currentTransformations&&source.currentTransformations.xtab&&source.currentTransformations.xtab.isCrosstab){maps=maps.concat(source.transformedMapping);}else{maps=maps.concat(source.currentMapping);}}if(maps){for(j=0;maps&&j<maps.length;j++){map=maps[j];if(map.type!=="amps"){continue;}if((map.id===col.id)&&(map.isLinked||map.isMultiForm)){var subCols=map.subColumns,subCol;for(k=0;subCols&&k<subCols.length;k++){subCol=subCols[k];if(subCol.georole){col.georole=1;}var index=mstrmojo.array.find(allForms,"fmid",subCol.fmid);if(index<0){allForms.push(subCol);}}}}}var openAttributeMapping=function openEditor(){var config={};config.attribute=col;if(col.isMultiForm||col.isLinked){var subColumns=allForms,idColumn,j;j=$ARR.find(subColumns,"isIdForm",true);if(j>0){idColumn=subColumns[j];subColumns.splice(j,1);subColumns.unshift(idColumn);}config.formMaps=subColumns;}mstrApp.getRootController().showDialog(constants.dialogType.mapProjectsAttributeDialog,config);},buttonCfg={confirmBtn:{fn:function(){openAttributeMapping();}}};if(col.georole){mstrmojo.confirm(mstrmojo.desc(9912,"Mapping this column to a project attribute will remove its geographical role and any derived attributes. Do you want to continue?"),buttonCfg);}else{if(col.timerole){mstrmojo.confirm(mstrmojo.desc(13297,"Mapping this column to a project attribute will remove all related derived date/time attributes, Do you want to continue?"),buttonCfg);}else{openAttributeMapping();}}},toProjectAttribute2:function(item,tableId){var maps=item.data,hasGeoRole=$ARR.some(maps,function(map){return map.georole;}),hasTimeRole=$ARR.some(maps,function(map){return map.timerole;}),openAttributeMapping=function(){var config={tableId:tableId||maps[0].tableId,attributes:maps};mstrApp.getRootController().showDialog(constants.dialogType.mapProjectsAttributeDialog2,config);},buttonCfg={confirmBtn:{fn:function(){openAttributeMapping();}}};if(hasGeoRole){mstrmojo.confirm(mstrmojo.desc(9912,"Mapping this column to a project attribute will remove its geographical role and any derived attributes. Do you want to continue?"),buttonCfg);}else{if(hasTimeRole){mstrmojo.confirm(mstrmojo.desc(13297,"Mapping this column to a project attribute will remove all related derived date/time attributes, Do you want to continue?"),buttonCfg);}else{openAttributeMapping();}}},toUnused:function toUnused(item){if(!item||!item.data||isNaN(item.data[0].tp)||!item.data[0].selected){return ;}var rootController=mstrApp.getRootController();var datas=item.data;var m=rootController.model;var i,j,col,cols;for(i=0;i<datas.length;i++){col=datas[i];cols=m.findMappingItem(col);for(j=0;j<cols.length;j++){if(col.linkedTbs){cols[j].selected=false;}else{if(cols[j].tp===12){cols[j].selected=false;}else{if(cols[j].tableId===col.tableId){cols[j].selected=false;}}}}}rootController.changeEMMAMappings();},toAttribute:function toAttribute(datas){var cols=[],sources=[],maps;var i,alias,source;var rootController=mstrApp.getRootController();var m=rootController.model;mstrmojo.array.forEach(datas,function(data){if(!data||isNaN(data.tp)||(data.tp===12&&data.selected)){return ;}maps=[];sources=m.findMappingSource(data);for(i=0;i<sources.length;i++){source=sources[i];if(source.currentTransformations&&source.currentTransformations.xtab&&source.currentTransformations.xtab.isCrosstab){maps=maps.concat(source.transformedMapping);}else{maps=maps.concat(source.currentMapping);}}if(data.tp!==12){alias=getItemUniqueName(data.alias,maps,12);}else{alias=data.alias;}cols=m.findMappingItem(data);for(i=0;i<cols.length;i++){cols[i].alias=alias;cols[i].tp=12;cols[i].selected=true;}});rootController.changeEMMAMappings();},toMetric:function toMetric(datas){var rootController=mstrApp.getRootController();var m=rootController.model;var sources=[],cols=[],maps;var i,alias,source;mstrmojo.array.forEach(datas,function(data){if(!data||isNaN(data.tp)||(data.tp===4&&data.selected)){return ;}maps=[];sources=m.findMappingSource(data);for(i=0;i<sources.length;i++){source=sources[i];if(source.currentTransformations&&source.currentTransformations.xtab&&source.currentTransformations.xtab.isCrosstab){maps=maps.concat(source.transformedMapping);}else{maps=maps.concat(source.currentMapping);}}if(data.tp!==4){alias=getItemUniqueName(data.alias,maps,4);}else{alias=data.alias;}cols=m.findMappingItem(data);for(i=0;i<cols.length;i++){cols[i].alias=alias;cols[i].tp=4;cols[i].selected=true;}});rootController.changeEMMAMappings();},importItem:function importItem(data){var rootController=mstrApp.getRootController();var m=rootController.model;var cols=[],i,alias;if(!data||isNaN(data.tp)){return ;}cols=m.findMappingItem(data);for(i=0;i<cols.length;i++){if(cols[i].idot===12){cols[i].alias=alias;cols[i].tp=cols[i].idot;cols[i].selected=true;}else{if(cols[i].tableId===data.tableId){cols[i].alias=alias;cols[i].tp=cols[i].idot;cols[i].selected=true;}}}rootController.changeEMMAMappings();},setMultipleImport:function setMultipleImport(datas){var rootController=mstrApp.getRootController();var m=rootController.model;var sources=[],cols=[],maps;var i,alias;mstrmojo.array.forEach(datas,function(data){if(!data||isNaN(data.tp)){return ;}maps=[];sources=m.findMappingSource(data);if(data.tp===0&&data.selected){cols=m.findMappingItem(data);for(i=0;i<cols.length;i++){if(cols[i].idot===12){cols[i].alias=alias;cols[i].tp=cols[i].idot;cols[i].selected=true;}else{if(cols[i].tableId===data.tableId){cols[i].alias=alias;cols[i].tp=cols[i].idot;cols[i].selected=true;}}}}});rootController.changeEMMAMappings();},setTimeDimension:function setTimeDimension(data){if(!data||isNaN(data.tp)||(data.tp===4&&data.selected)){return ;}var i,cols;var rootController=mstrApp.getRootController();var m=rootController.model;cols=m.findMappingItem(data);for(i=0;i<cols.length;i++){if(cols[i].isMultiForm){cols[i].subColumns=data.subColumns;}else{cols[i].tp=12;cols[i].selected=true;cols[i].der=data.der;}}rootController.changeEMMAMappings();},setTimeRole:function setTimeRole(data){if(!data||isNaN(data.tp)||(data.tp===4&&data.selected)){return ;}var rootController=mstrApp.getRootController();var i,j,cols,targetCol,sourceData;var m=rootController.model;cols=m.findMappingItem(data);for(i=0;i<cols.length;i++){var col=cols[i];if(cols[i].isMultiForm){if(data.isMultiForm){cols[i].subColumns=data.subColumns;}else{for(j=0;j<col.subColumns.length;j++){if(col.subColumns[j].isIdForm){targetCol=col.subColumns[j];break;}}markTimeRole(targetCol,data);}}else{if(data.isMultiForm){for(j=0;j<data.subColumns.length;j++){if(data.subColumns[j].isIdForm){sourceData=data.subColumns[j];break;}}markTimeRole(col,sourceData);}else{markTimeRole(col,data);}}}rootController.changeEMMAMappings();},setGeoRoles:function setGeoRoles(data){if(!data||isNaN(data.tp)||(data.tp===4&&data.selected)){return ;}var i,j,cols,targetCol,sourceData,form;var rootController=mstrApp.getRootController();var m=rootController.model;cols=m.findMappingItem(data);if(data.isMultiForm){if(data.mergeSubColumns){syncSubColumns(data.mergeSubColumns,data.subColumns);}}for(i=0;i<cols.length;i++){var col=cols[i];if(col.isMultiForm){if(data.isMultiForm){if(col.tableId===data.tableId){col.subColumns=data.subColumns;}else{for(j=0;j<data.mergeSubColumns.length;j++){var mergeSubColumn=data.mergeSubColumns[j];var matchedFormCategory=isContainFormCategory(mergeSubColumn.fmn,col.subColumns);if(mergeSubColumn.georole&&matchedFormCategory){targetCol=matchedFormCategory;targetCol.georole=mergeSubColumn.georole;break;}}form=targetCol.fmn;for(j=0;j<col.subColumns.length;j++){if(col.subColumns[j].fmn!==form){col.subColumns[j].georole=0;}}}}else{for(j=0;j<col.subColumns.length;j++){if(col.subColumns[j].isIdForm){targetCol=col.subColumns[j];}else{col.subColumns[j].georole=0;}}markGeoRole(targetCol,data);}}else{if(data.isMultiForm){for(j=0;j<data.subColumns.length;j++){if(data.subColumns[j].isIdForm){sourceData=data.subColumns[j];break;}}markGeoRole(col,sourceData);}else{markGeoRole(col,data);}}}rootController.changeEMMAMappings();}});}());